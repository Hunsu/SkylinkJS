!function(exports){function Skyway(serverpath,apikey,room,io){if(!(this instanceof Skyway))return new Skyway(serverpath,apikey,room);this.version="0.0.1",this._path=serverpath+apikey+"/room/"+(room?room:apikey)+"?client=native",this._key=apikey,this._socket=null,this._user=null,this._room=null,this._peerConnections=[],this._browser=null,this._readyState=0,this._channel_open=!1,this._in_room=!1,this._io=io;var _parseInfo=function(info,self){self._key=info.cid,self._user={id:info.username,token:info.userCred,tokenTimestamp:info.tokenTempCreated,displayName:info.displayName,streams:[]},self._room={id:info.room_key,token:info.roomCred,tokenTimestamp:info.timeStamp,signalingServer:{ip:info.ipSigserver,port:info.portSigserver},pcHelper:{pcConstraints:JSON.parse(info.pc_constraints),pcConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}}}},console.log("API - Parsed infos from webserver. Ready."),self._readyState=2,self._trigger("readyStateChange",2)};this._init=function(self){self._readyState=1,self._trigger("readyStateChange",1);var xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){if(this.readyState===this.DONE){if(200!==this.status)return console.log("XHR  - ERROR "+this.status,!1),self._readyState=0,void self._trigger("readyStateChange",0);console.log("API - Got infos from webserver."),_parseInfo(JSON.parse(this.response),self)}},xhr.open("GET",self._path,!0),console.log("API - Fetching infos from webserver"),xhr.send(),console.log("API - Waiting for webserver to provide infos.")};var _WebRTCpolyfill=function(w,self){return w.RTCPeerConnection&&w.RTCIceCandidate?(console.log("WebRTC is available"),void(self._browser="WebRTC")):void(navigator.mozGetUserMedia?(console.log("This appears to be Firefox"),self._browser="Firefox",alert("You are using Firefox.This application is still in beta stage under firefox and might not work. Speficically, the connection between users might fail, resulting in no audio and video, while chat and presence should still work."),w.RTCPeerConnection=w.mozRTCPeerConnection,w.RTCSessionDescription=w.mozRTCSessionDescription,w.RTCIceCandidate=w.mozRTCIceCandidate,w.getUserMedia=navigator.mozGetUserMedia.bind(navigator),w.attachMediaStream=function(element,stream){console.log("Attaching media stream"),element.mozSrcObject=stream,element.play()},w.reattachMediaStream=function(to,from){console.log("Reattaching media stream"),to.mozSrcObject=from.mozSrcObject,to.play()},w.MediaStream.prototype.getVideoTracks=function(){return[]},w.MediaStream.prototype.getAudioTracks=function(){return[]}):navigator.webkitGetUserMedia?(console.log("This appears to be Chrome"),self._browser="Chrome",w.RTCPeerConnection=w.webkitRTCPeerConnection,w.getUserMedia=navigator.webkitGetUserMedia.bind(navigator),w.attachMediaStream=function(element,stream){element.src=w.webkitURL.createObjectURL(stream)},w.reattachMediaStream=function(to,from){to.src=from.src},w.webkitMediaStream.prototype.getVideoTracks||(w.webkitMediaStream.prototype.getVideoTracks=function(){return this.videoTracks},w.webkitMediaStream.prototype.getAudioTracks=function(){return this.audioTracks}),w.webkitRTCPeerConnection.prototype.getLocalStreams||(w.webkitRTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams},w.webkitRTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams})):(self._browser="NotWebRTC",console.log("Browser does not appear to be WebRTC-capable")))};this._init(this),_WebRTCpolyfill(window,this)}exports.Skyway=Skyway,Skyway.prototype.on=function(eventName,callback){"function"==typeof callback&&(this._events[eventName]=this._events[eventName]||[],this._events[eventName].push(callback))},Skyway.prototype.off=function(eventName,callback){if(void 0===callback)return void(this._events[eventName]=[]);for(var arr=this._events[eventName],l=arr.length,i=0;l>i;i++)if(arr[i]===callback){arr.splice(i,1);break}},Skyway.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._events[eventName];args.shift();for(var e in arr)if(arr[e](args)===!1)break},Skyway.prototype.setUser=function(user){this._user=user},Skyway.prototype._events={channelOpen:[],channelClose:[],channelMessage:[],channelError:[],joinedRoom:[],readyStateChange:[],handshakeProgress:[],candidateGenerationState:[],peerConnectionState:[],iceConnectionState:[],mediaAccessError:[],mediaAccessSuccess:[],chatMessage:[],peerJoined:[],peerLeft:[],presenceChanged:[],roomLock:[],addPeerStream:[],removePeerStream:[],peerVideoMute:[],peerAudioMute:[],addContact:[],removeContact:[],invitePeer:[]},Skyway.prototype.sendChatMsg=function(chatMsg,targetPeerID){var msg_json={cid:this._key,data:chatMsg,mid:this._user.id,nick:this._user.displayName,rid:this._room.id,type:"chat"};targetPeerID&&(msg_json.target=targetPeerID),this._sendMessage(msg_json)},Skyway.prototype.getDefaultStream=function(){var self=this;try{window.getUserMedia({audio:!0,video:!0},function(s){self._onUserMediaSuccess(s,self)},function(e){self._onUserMediaError(e,self)}),console.log("API - Requested: A/V.")}catch(e){this._onUserMediaError(e)}},Skyway.prototype._onUserMediaSuccess=function(stream,t){console.log("API - User has granted access to local media."),t._trigger("mediaAccessSuccess",stream),t._user.streams.push(stream)},Skyway.prototype._onUserMediaError=function(e,t){console.log("API  - getUserMedia failed with exception type: "+e.name),e.message&&console.log("API  - getUserMedia failed with exception: "+e.message),e.constraintName&&console.log("API  - getUserMedia failed because of the following constraint: "+e.constraintName),t._trigger("mediaAccessError",e.name)},Skyway.prototype._processSigMsg=function(message){var msg=JSON.parse(message);if("group"===msg.type){console.log("API - Bundle of "+msg.lists.length+" messages.");for(var i=0;i<msg.lists.length;i++)this._processSingleMsg(msg.lists[i])}else this._processSingleMsg(msg)},Skyway.prototype._processSingleMsg=function(msg){this._trigger("channelMessage");var origin=msg.mid;if(origin&&origin!==this._user.id||(origin="Server"),console.log("API - ["+origin+"] Incoming message: "+msg.type),msg.mid===this._user.id&&"redirect"!==msg.type&&"inRoom"!==msg.type&&"chat"!==msg.type)return void console.log("API - Ignoring message: "+msg.type+".");switch(msg.type){case"inRoom":this._inRoomHandler(msg);break;case"enter":this._enterHandler(msg);break;case"welcome":this._welcomeHandler(msg);break;case"offer":this._offerHandler(msg);break;case"answer":this._answerHandler(msg);break;case"candidate":this._candidateHandler(msg);break;case"bye":this._byeHandler(msg);break;case"chat":this._chatHandler(msg);break;case"redirect":this._redirectHandler(msg);break;case"update_guest_name":break;case"error":break;case"invite":break;case"video_mute_event":break;case"roomLockEvent":break;default:console.log("API - ["+msg.mid+"] Unsupported message type received: "+msg.type)}},Skyway.prototype._chatHandler=function(msg){this._trigger("chatMessage",msg.data,msg.id===this._user.id?"Me, myself and I":msg.nick,msg.target?!0:!1)},Skyway.prototype._redirectHandler=function(msg){console.log("API - [Server] You are being redirected: "+msg.info),"warning"!==msg.action&&("reject"===msg.action?location.href=msg.url:"close"===msg.action&&(location.href=msg.url))},Skyway.prototype._byeHandler=function(msg){var targetMid=msg.mid;console.log("API - ["+targetMid+"] received 'bye'."),this._removePeer(targetMid)},Skyway.prototype._removePeer=function(peerID){this._trigger("peerLeft",peerID),this._peerConnections[peerID]&&this._peerConnections[peerID].close(),this._peerConnections[peerID]=null},Skyway.prototype._inRoomHandler=function(msg){console.log("API - We're in the room! Chat functionalities are now available."),console.log("API - We've been given the following PC Constraint by the sig server: "),console.dir(msg.pc_config),this._room.pcHelper.pcConfig=msg.pc_config,this._in_room=!0,this._trigger("joinedRoom",this._room.id),console.log("API - Sending enter."),this._trigger("handshakeProgress","enter"),this._sendMessage({type:"enter",mid:this._user.id,rid:this._room.id,nick:this._user.displayName})},Skyway.prototype._enterHandler=function(msg){var targetMid=msg.mid;this._trigger("handshakeProgress","enter",targetMid),this._trigger("peerJoined",targetMid),this._peerConnections[targetMid]||(console.log("API - ["+targetMid+"] Sending welcome."),this._trigger("handshakeProgress","welcome",targetMid),this._sendMessage({type:"welcome",mid:this._user.id,target:targetMid,rid:this._room.id,nick:this._user.displayName}))},Skyway.prototype._welcomeHandler=function(msg){var targetMid=msg.mid;this._trigger("handshakeProgress","welcome",targetMid),this._trigger("peerJoined",targetMid),this._peerConnections[targetMid]||this._openPeer(targetMid,!0)},Skyway.prototype._offerHandler=function(msg){var targetMid=msg.mid;this._trigger("handshakeProgress","offer",targetMid);var offer=new window.RTCSessionDescription(msg);console.log("API - ["+targetMid+"] Received offer:"),console.dir(offer);var pc=this._peerConnections[targetMid];pc||(this._openPeer(targetMid,!1),pc=this._peerConnections[targetMid]),pc.setRemoteDescription(offer),this._doAnswer(targetMid)},Skyway.prototype._doAnswer=function(targetMid){console.log("API - ["+targetMid+"] Creating answer.");var pc=this._peerConnections[targetMid],self=this;pc&&pc.createAnswer(function(answer){console.log("API - ["+targetMid+"] Created  answer."),console.dir(answer),self._setLocalAndSendMessage(targetMid,answer)},null,self._room.pcHelper.sdpConstraints)},Skyway.prototype._openPeer=function(targetMid,toOffer){if(console.log("API - ["+targetMid+"] Creating PeerConnection."),this._peerConnections[targetMid]=this._createPeerConnection(targetMid),console.log("API - ["+targetMid+"] Adding local stream."),this._user.streams.length>0)for(var i in this._user.streams)this._user.streams.hasOwnProperty(i)&&this._peerConnections[targetMid].addStream(this._user.streams[i]);else console.log("API - WARNING - No stream to send. You will be only receiving.");toOffer&&this._doCall(targetMid)},Skyway.prototype._onRemoteStreamAdded=function(targetMid,event){console.log("API - ["+targetMid+"] Remote Stream added."),this._trigger("addPeerStream",targetMid,event.stream)},Skyway.prototype._doCall=function(targetMid){var pc=this._peerConnections[targetMid],oc=this._room.pcHelper.offerConstraints;if("Chrome"===this._browser)for(var prop in oc.mandatory)oc.mandatory.hasOwnProperty(prop)&&-1!==prop.indexOf("Moz")&&delete oc.mandatory[prop];var constraints=oc,sc=this._room.pcHelper.sdpConstraints;for(var name in sc.mandatory)sc.mandatory.hasOwnProperty(name)&&(constraints.mandatory[name]=sc.mandatory[name]);constraints.optional.concat(sc.optional),console.log("API - ["+targetMid+"] Creating offer.");var self=this;pc.createOffer(function(offer){self._setLocalAndSendMessage(targetMid,offer)},null,constraints)},Skyway.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){console.log("API - ["+targetMid+"] Created "+sessionDescription.type+"."),console.dir(sessionDescription);var pc=this._peerConnections[targetMid];console.log("API - ["+targetMid+"] Setting local Description ("+sessionDescription.type+").");var self=this;pc.setLocalDescription(sessionDescription,function(){console.log("API - ["+targetMid+"] Set. Sending "+sessionDescription.type+"."),self._trigger("handshakeProgress",sessionDescription.type,targetMid),self._sendMessage({type:sessionDescription.type,sdp:sessionDescription.sdp,mid:self._user.id,target:targetMid,rid:self._room.id})},function(){console.log("API - ["+targetMid+"] There was a problem setting the Local Description.")})},Skyway.prototype._createPeerConnection=function(targetMid){var pc;try{pc=new window.RTCPeerConnection(this._room.pcHelper.pcConfig,this._room.pcHelper.pcConstraints),console.log("API - ["+targetMid+"] Created PeerConnection."),console.log("API - ["+targetMid+"] PC config: "),console.dir(this._room.pcHelper.pcConfig),console.log("API - ["+targetMid+"] PC constraints: "+JSON.stringify(this._room.pcHelper.pcConstraints))}catch(e){return console.log("API - ["+targetMid+"] Failed to create PeerConnection: "+e.message),null}var self=this;return pc.onaddstream=function(event){self._onRemoteStreamAdded(targetMid,event)},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event)},pc.oniceconnectionstatechange=function(){console.log("API - ["+targetMid+"] ICE connection state changed -> "+pc.iceConnectionState),self._trigger("iceConnectionState",pc.iceConnectionState,targetMid)},pc.onsignalingstatechange=function(){console.log("API - ["+targetMid+"] PC  connection state changed -> "+pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){console.log("API - ["+targetMid+"] ICE gathering  state changed -> "+pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},pc},Skyway.prototype._onIceCandidate=function(targetMid,event){if(event.candidate){var msgCan=event.candidate.candidate.split(" "),candidateType=msgCan[7];console.log("API - ["+targetMid+"] Created and sending "+candidateType+" candidate."),this._sendMessage({type:"candidate",label:event.candidate.sdpMLineIndex,id:event.candidate.sdpMid,candidate:event.candidate.candidate,mid:this._user.id,target:targetMid,rid:this._room.id})}else console.log("API - ["+targetMid+"] End of gathering."),this._trigger("candidateGenerationState","done",targetMid)},Skyway.prototype._candidateHandler=function(msg){var targetMid=msg.mid,pc=this._peerConnections[targetMid];if(pc){if("connected"===pc.iceConnectionState)return void console.log("API - ["+targetMid+"] Received but not adding Candidate as we are already connected to this peer.");var msgCan=msg.candidate.split(" "),canType=msgCan[7];console.log("API - ["+targetMid+"] Received "+canType+" Candidate.");var index=msg.label,candidate=new window.RTCIceCandidate({sdpMLineIndex:index,candidate:msg.candidate});pc.addIceCandidate(candidate),console.log("API - ["+targetMid+"] Added Candidate.")}else console.log("API - ["+targetMid+"] Received but not adding Candidate as PeerConnection not present.")},Skyway.prototype._answerHandler=function(msg){var targetMid=msg.mid;this._trigger("handshakeProgress","answer",targetMid);var answer=new window.RTCSessionDescription(msg);console.log("API - ["+targetMid+"] Received answer:"),console.dir(answer);var pc=this._peerConnections[targetMid];pc.setRemoteDescription(answer),pc.remotePeerReady=!0},Skyway.prototype._sendMessage=function(message){if(this._channel_open){var msgString=JSON.stringify(message);console.log("API - ["+(message.target?message.target:"server")+"] Outgoing message: "+message.type),this._socket.send(msgString)}},Skyway.prototype._openChannel=function(){var self=this,_openChannelImpl=function(readyState){if(2===readyState){self.off("readyStateChange",_openChannelImpl),console.log("API - Opening channel.");var ip_signaling="ws://"+self._room.signalingServer.ip+":"+self._room.signalingServer.port;console.log("API - Signaling server URL: "+ip_signaling),self._socket=this.io.connect(ip_signaling,{"force new connection":!0}),self._socket.on("connect",function(){self._channel_open=!0,self._trigger("channelOpen")}),self._socket.on("error",function(err){console.log("API - Channel Error: "+err),self._channel_open=!1,self._trigger("channelError")}),self._socket.on("disconnect",function(){self._trigger("channelClose")}),self._socket.on("message",function(msg){self._processSigMsg(msg)})}};this._channel_open||(0===this._readyState?(this.on("readyStateChange",_openChannelImpl),this._init(this)):_openChannelImpl(2))},Skyway.prototype._closeChannel=function(){this._channel_open&&(this._socket.disconnect(),this._socket=null,this._channel_open=!1,this._readyState=0)},Skyway.prototype.toggleLock=function(){},Skyway.prototype.toggleAudio=function(){},Skyway.prototype.toggleVideo=function(){},Skyway.prototype.authenticate=function(){},Skyway.prototype.joinRoom=function(){if(!this._in_room){var self=this,_sendJoinRoomMsg=function(){self.off("channelOpen",_sendJoinRoomMsg),console.log("API - Joining room: "+self._room.id),self._sendMessage({type:"joinRoom",mid:self._user.id,rid:self._room.id,cid:self._key,roomCred:self._room.token,userCred:self._user.token,tokenTempCreated:self._user.tokenTimestamp,timeStamp:self._room.tokenTimestamp})};this._channel_open?_sendJoinRoomMsg():(this.on("channelOpen",_sendJoinRoomMsg),this._openChannel())}},Skyway.prototype.leaveRoom=function(){if(this._in_room){for(var pc_index in this._peerConnections)this._peerConnections.hasOwnProperty(pc_index)&&this._removePeer(pc_index);this._in_room=!1,this._closeChannel()}},Skyway.prototype.getContacts=function(){!this._in_room},Skyway.prototype.getUser=function(){},Skyway.prototype.inviteContact=function(){}}(this);