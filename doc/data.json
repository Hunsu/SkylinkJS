{
    "project": {
        "name": "skylinkjs",
        "description": "WebRTC real-time video conversation library",
        "version": "0.5.7",
        "url": "https://temasys.github.io/"
    },
    "files": {
        "source/DataChannel.js": {
            "name": "source/DataChannel.js",
            "modules": {},
            "classes": {
                "DataChannel": 1
            },
            "fors": {
                "Skylink": 1,
                "DataChannel": 1
            },
            "namespaces": {}
        },
        "source/DataChannelHandler.js": {
            "name": "source/DataChannelHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "DataChannel": 1
            },
            "namespaces": {}
        },
        "source/EventList.js": {
            "name": "source/EventList.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Globals.js": {
            "name": "source/Globals.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Log.js": {
            "name": "source/Log.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Debugger": 1
            },
            "namespaces": {}
        },
        "source/Peer.js": {
            "name": "source/Peer.js",
            "modules": {},
            "classes": {
                "Peer": 1
            },
            "fors": {
                "Skylink": 1,
                "Peer": 1
            },
            "namespaces": {}
        },
        "source/PeerHandler.js": {
            "name": "source/PeerHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Peer": 1
            },
            "namespaces": {}
        },
        "source/Request.js": {
            "name": "source/Request.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1,
                "Request": 1
            },
            "namespaces": {}
        },
        "source/Room.js": {
            "name": "source/Room.js",
            "modules": {},
            "classes": {
                "Room": 1,
                "Self": 1
            },
            "fors": {
                "Skylink": 1,
                "Room": 1,
                "Self": 1
            },
            "namespaces": {}
        },
        "source/RoomHandler.js": {
            "name": "source/RoomHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Room": 1
            },
            "namespaces": {}
        },
        "source/RoomMessageHandler.js": {
            "name": "source/RoomMessageHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Room": 1,
                "Messaging": 1
            },
            "namespaces": {}
        },
        "source/SDP.js": {
            "name": "source/SDP.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Skylink.js": {
            "name": "source/Skylink.js",
            "modules": {
                "Skylink": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "source/Socket.js": {
            "name": "source/Socket.js",
            "modules": {},
            "classes": {
                "Socket": 1
            },
            "fors": {
                "Skylink": 1,
                "Socket": 1
            },
            "namespaces": {}
        },
        "source/SocketHandler.js": {
            "name": "source/SocketHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Socket": 1
            },
            "namespaces": {}
        },
        "source/Stream.js": {
            "name": "source/Stream.js",
            "modules": {},
            "classes": {
                "Stream": 1
            },
            "fors": {
                "Skylink": 1,
                "Stream": 1
            },
            "namespaces": {}
        },
        "source/StreamHandler.js": {
            "name": "source/StreamHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Stream": 1
            },
            "namespaces": {}
        },
        "source/StreamParser.js": {
            "name": "source/StreamParser.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/StreamTrackList.js": {
            "name": "source/StreamTrackList.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/User.js": {
            "name": "source/User.js",
            "modules": {},
            "classes": {
                "User": 1
            },
            "fors": {
                "Skylink": 1,
                "User": 1
            },
            "namespaces": {}
        },
        "source/UserHandler.js": {
            "name": "source/UserHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "User": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "Skylink": {
            "name": "Skylink",
            "submodules": {},
            "classes": {
                "DataChannel": 1,
                "Skylink": 1,
                "Debugger": 1,
                "Peer": 1,
                "Request": 1,
                "Room": 1,
                "Self": 1,
                "Messaging": 1,
                "Socket": 1,
                "Stream": 1,
                "User": 1
            },
            "fors": {
                "Skylink": 1,
                "Socket": 1,
                "Stream": 1,
                "User": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "source/User.js",
            "line": 1,
            "description": "Handles the whole Skylink interface.",
            "since": "0.6.0"
        }
    },
    "classes": {
        "DataChannel": {
            "name": "DataChannel",
            "shortname": "DataChannel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "file": "source/DataChannel.js",
            "line": 1,
            "description": "Handles the RTCDataChannel object connection and events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "channel",
                    "description": "The RTCDataChannel object to parse and hook events on.",
                    "type": "Object"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "since": "0.6.0"
        },
        "Skylink": {
            "name": "Skylink",
            "shortname": "Skylink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink"
        },
        "Debugger": {
            "name": "Debugger",
            "shortname": "Debugger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink"
        },
        "Peer": {
            "name": "Peer",
            "shortname": "Peer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "file": "source/Peer.js",
            "line": 1,
            "description": "Handles the PeerConnection and Peer data.",
            "since": "0.6.0"
        },
        "Request": {
            "name": "Request",
            "shortname": "Request",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink"
        },
        "Room": {
            "name": "Room",
            "shortname": "Room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "file": "source/Room.js",
            "line": 1,
            "description": "Handles the room connection.",
            "since": "0.6.0"
        },
        "Self": {
            "name": "Self",
            "shortname": "Self",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "file": "source/Room.js",
            "line": 366,
            "description": "Handles the self connection to the room.",
            "extends": "Room",
            "since": "0.6.0"
        },
        "Messaging": {
            "name": "Messaging",
            "shortname": "Messaging",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink"
        },
        "Socket": {
            "name": "Socket",
            "shortname": "Socket",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "namespace": "",
            "file": "source/Socket.js",
            "line": 1,
            "description": "Handles the socket.io object connection and events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "The socket connection configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "server",
                            "description": "The socket signaling server.",
                            "type": "String"
                        },
                        {
                            "name": "httpsPortList",
                            "description": "The list of HTTPS ports that the socket connection\n   would use. It uses the first port and fallbacks to the next alternative port when connection fails.",
                            "type": "Array"
                        },
                        {
                            "name": "httpPortList",
                            "description": "The list of HTTP ports that the socket connection\n   would use. It uses the first port and fallbacks to the next alternative port when connection fails.",
                            "type": "Array"
                        },
                        {
                            "name": "type",
                            "description": "The type of socket connection. There are two types:\n- <code>\"WebSocket\"</code> indicates a WebSocket connection.\n- <code>\"XHRPolling\"</code> indicates a LongPolling connection.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "since": "0.6.0"
        },
        "Stream": {
            "name": "Stream",
            "shortname": "Stream",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "namespace": "",
            "file": "source/Stream.js",
            "line": 1,
            "description": "Handles the MediaStream object connection and events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "channel",
                    "description": "The MediaStream object to parse and hook events on.",
                    "type": "Object"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "instantiable": "true",
            "since": "0.6.0"
        },
        "User": {
            "name": "User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Skylink",
            "file": "source/User.js",
            "line": 1,
            "description": "Handles the user that joins the room.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "The user configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "id",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "agent",
                            "description": "The user browser agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The user browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The user browser version.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "webRTCType",
                                    "description": "The user browser WebRTC implementation type.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "data",
                            "description": "The user custom data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "stream",
                            "description": "The streamming configuration for the \"main\" shared peer connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The audio stream configuration.\n   If parsed as a boolean, other configuration settings under the audio\n   configuration would be set as the default setting in the connection.",
                                    "type": "JSON|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indiciates\n   if stereo is enabled for this connection.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.sourceId",
                                    "description": "The source id of the audio MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The video stream configuration.\n   If parsed as a boolean, other configuration settings under the video\n   configuration would be set as the default setting in the connection.",
                                    "type": "String|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The video streaming resolution.",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The video stream framerate.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.sourceId",
                                    "description": "The source id of the video MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "status",
                                    "description": "The stream MediaStreamTrack status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "status.audioMuted",
                                    "description": "The flag that indicates if audio is muted.\n   If audio is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "status.videoMuted",
                                    "description": "The flag that indicates if video is muted.\n   If video is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The bandwidth configuration for the peer connections.\n   This does fixes the bandwidth but doesn't prevent alterations done by browser for smoother streaming.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The bandwidth configuration for the audio stream.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The bandwidth configuration for the video stream.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The bandwidth configuration for the data stream.",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "streamObject",
                    "description": "The stream object passed for the \"main\" peer connection.",
                    "type": "Stream"
                },
                {
                    "name": "SDPType",
                    "description": "The session description type that the peer connection would send.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "since": "0.6.0"
        }
    },
    "classitems": [
        {
            "file": "source/DataChannel.js",
            "line": 19,
            "description": "The datachannel label.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 29,
            "description": "The type of datachannel",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 39,
            "description": "The DataChannel object.",
            "itemtype": "attribute",
            "name": "RTCDataChannel",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 50,
            "description": "Function to subscribe to when datachannel has opened.",
            "itemtype": "method",
            "name": "onopen",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 59,
            "description": "Function to subscribe to when datachannel has closed.",
            "itemtype": "method",
            "name": "onclose",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 68,
            "description": "Function to subscribe to when datachannel has an error.",
            "itemtype": "method",
            "name": "onerror",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 77,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "method",
            "name": "handler",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The response data.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 90,
            "description": "Binds events to RTCDataChannel object.",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "bindChannel",
                    "description": "The RTCDataChannel object to bind events to.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 147,
            "description": "Sends data over the datachannel.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "data",
                    "description": "The data to send.",
                    "type": "JSON|String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 1,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "DataChannelEventResponseHandler",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 10,
            "description": "Event fired when the datachannel object is ready to use.",
            "itemtype": "event",
            "name": "datachannel:start",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 18,
            "description": "Event fired when the datachannel has opened.",
            "itemtype": "event",
            "name": "datachannel:connect",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 26,
            "description": "Event fired when the datachannel has an exception occurred.",
            "itemtype": "event",
            "name": "datachannel:error",
            "params": [
                {
                    "name": "error",
                    "description": "The RTCDataChannel error.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 35,
            "description": "Event fired when the datachannel receives data.",
            "itemtype": "event",
            "name": "datachannel:message",
            "params": [
                {
                    "name": "data",
                    "description": "The data received.",
                    "type": "JSON|String"
                }
            ],
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 44,
            "description": "Event fired when the datachannel has closed.",
            "itemtype": "event",
            "name": "datachannel:disconnect",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannelHandler.js",
            "line": 53,
            "description": "Handles the datachannel class events.",
            "itemtype": "attribute",
            "name": "DataChannelHandler",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/EventList.js",
            "line": 1,
            "description": "Stores the list of available events.",
            "itemtype": "property",
            "name": "Event",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 11,
            "description": "Event fired when the socket connection to the signaling\nserver is open.",
            "itemtype": "event",
            "name": "channelOpen",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 20,
            "description": "Event fired when the socket connection to the signaling\nserver has closed.",
            "itemtype": "event",
            "name": "channelClose",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 29,
            "description": "Event fired when the socket connection received a message\nfrom the signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 39,
            "description": "Event fired when the socket connection has occurred an error.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 48,
            "description": "Event fired when the socket re-tries to connection with fallback ports.",
            "itemtype": "event",
            "name": "channelRetry",
            "params": [
                {
                    "name": "fallbackType",
                    "description": "The type of fallback [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                },
                {
                    "name": "currentAttempt",
                    "description": "The current attempt of the fallback re-try attempt.",
                    "type": "Integer"
                }
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 58,
            "description": "Event fired when the socket connection failed connecting.\n- The difference between this and <b>channelError</b> is that\n  channelError triggers during the connection. This throws\n  when connection failed to be established.",
            "itemtype": "event",
            "name": "socketError",
            "params": [
                {
                    "name": "errorCode",
                    "description": "The error code.\n  [Rel: Skylink.SOCKET_ERROR]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The reconnection attempt or error object.",
                    "type": "Integer|String|Object"
                },
                {
                    "name": "fallbackType",
                    "description": "The type of fallback [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 73,
            "description": "Event fired whether the room is ready for use.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "[Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "status",
                            "description": "Http status when retrieving information.\n  May be empty for other errors.",
                            "type": "Integer"
                        },
                        {
                            "name": "content",
                            "description": "Error message.",
                            "type": "String"
                        },
                        {
                            "name": "errorCode",
                            "description": "Error code.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 88,
            "description": "Event fired when a peer's handshake progress has changed.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "step",
                    "description": "The handshake progress step.\n  [Rel: Skylink.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's handshake progress.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 100,
            "description": "Event fired when an ICE gathering state has changed.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The ice candidate generation state.\n  [Rel: Skylink.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice candidate\n   generation state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 112,
            "description": "Event fired when a peer Connection state has changed.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The peer connection state.\n  [Rel: Skylink.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection state\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 124,
            "description": "Event fired when a peer connection health has changed.",
            "itemtype": "event",
            "name": "peerConnectionHealth",
            "params": [
                {
                    "name": "health",
                    "description": "The peer connection health.\n  [Rel: Skylink.PEER_CONNECTION_HEALTH]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection health\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 135,
            "description": "Event fired when an ICE connection state has changed.",
            "iceconnectionstate": "",
            "params": [
                {
                    "name": "state",
                    "description": "The ice connection state.\n  [Rel: Skylink.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice connection state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 146,
            "description": "Event fired when webcam or microphone media access fails.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 155,
            "description": "Event fired when webcam or microphone media acces passes.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 164,
            "description": "Event fired when it's required to have audio or video access.",
            "itemtype": "event",
            "name": "mediaAccessRequired",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 172,
            "description": "Event fired when media access to MediaStream has stopped.",
            "itemtype": "event",
            "name": "mediaAccessStopped",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 180,
            "description": "Event fired when a peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 215,
            "description": "Event fired when a peer's connection is restarted.",
            "itemtype": "event",
            "name": "peerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is being restarted.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelfInitiateRestart",
                    "description": "Is it us who initiated the restart.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 249,
            "description": "Event fired when a peer information is updated.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had information updaed.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 284,
            "description": "Event fired when a peer leaves the room",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that left.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 319,
            "description": "Event fired when a peer joins the room",
            "itemtype": "event",
            "name": "presenceChanged",
            "params": [
                {
                    "name": "users",
                    "description": "The list of users",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "unsupported": "true",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 330,
            "description": "Event fired when a remote stream has become available.\n- This occurs after the user joins the room.\n- This is changed from <b>addPeerStream</b> event.\n- Note that <b>addPeerStream</b> is removed from the specs.\n- There has been a documentation error whereby the stream it is\n  supposed to be (stream, peerId, isSelf), but instead is received\n  as (peerId, stream, isSelf) in 0.5.0.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the stream.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 348,
            "description": "Event fired when a message being broadcasted is received.\n- This is changed from <b>chatMessageReceived</b>,\n  <b>privateMessage</b> and <b>publicMessage</b> event.\n- Note that <b>chatMessageReceived</b>, <b>privateMessage</b>\n  and <b>publicMessage</b> is removed from the specs.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "Message object that is received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "Data that is broadcasted.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender peer.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "PeerId that is specifically\n  targeted to receive the message.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "Is data received a private message.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is data received from a\n  data channel.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the sender peer.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 395,
            "description": "Event fired when connected to a room and the lock status has changed.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "Is the room locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is locking/unlocking\n  the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 432,
            "description": "Event fired when a peer's datachannel state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The datachannel state.\n  [Rel: Skylink.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of peer that has a datachannel\n  state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 444,
            "description": "Event fired when a data transfer state has changed.\n- Note that <u>transferInfo.data</u> sends the blob data, and\n  no longer a blob url.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The data transfer state.\n  [Rel: Skylink.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "TransferId of the data.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has a data\n  transfer state change.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "Data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "percentage",
                            "description": "The percetange of data being\n  uploaded / downloaded.",
                            "type": "JSON"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender.",
                            "type": "JSON"
                        },
                        {
                            "name": "data",
                            "description": "The blob data. See the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the blob to a download link.",
                            "type": "JSON"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "JSON"
                        },
                        {
                            "name": "size",
                            "description": "Data size.",
                            "type": "JSON"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "message",
                            "description": "Error message thrown.",
                            "type": "String"
                        },
                        {
                            "name": "transferType",
                            "description": "Is error from uploading or downloading.\n  [Rel: Skylink.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 472,
            "description": "Event fired when the signaling server warns the user.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The action that is required for\n  the user to follow. [Rel: Skylink.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The reason for the action.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The reason why the action is given.\n  [Rel: Skylink.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/Globals.js",
            "line": 1,
            "description": "Stores the preferences shared across classes.",
            "itemtype": "attribute",
            "name": "globals",
            "type": "JSON",
            "params": [
                {
                    "name": "apiKey",
                    "description": "The developer API Key.",
                    "type": "String"
                },
                {
                    "name": "region",
                    "description": "The regional server to connect to.",
                    "type": "String"
                },
                {
                    "name": "defaultRoom",
                    "description": "The default room that joinRoom should connect to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Log.js",
            "line": 19,
            "description": "The log key",
            "itemtype": "attribute",
            "name": "LogKey",
            "type": "String",
            "readonly": "",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Log.js",
            "line": 30,
            "description": "The current log level of Skylink.",
            "itemtype": "property",
            "name": "level",
            "type": "Integer",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Log.js",
            "line": 41,
            "description": "The flag that indicates if Skylink should store the debug logs.",
            "itemtype": "property",
            "name": "store",
            "type": "Boolean",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Peer.js",
            "line": 13,
            "description": "The peer id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 23,
            "description": "The peer type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 33,
            "description": "The local description type peer sends.",
            "itemtype": "attribute",
            "name": "SDPType",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 43,
            "description": "The PeerConnection constraints - iceServers.",
            "itemtype": "attribute",
            "name": "constraints",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 53,
            "description": "The local description to be set.",
            "itemtype": "attribute",
            "name": "localDescription",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 63,
            "description": "The remote description to be set.",
            "itemtype": "attribute",
            "name": "remoteDescription",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 73,
            "description": "The datachannels connected to PeerConnection.",
            "itemtype": "attribute",
            "name": "datachannels",
            "params": [
                {
                    "name": "<channelId>",
                    "description": "The datachannel connected to peer.",
                    "type": "DataChannel"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 84,
            "description": "The flag that indicates if trickle ICE is enable for this PeerConnection.",
            "itemtype": "attribute",
            "name": "iceTrickle",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 94,
            "description": "The timeout that would react if PeerConnection is unstable and refresh connection.",
            "itemtype": "attribute",
            "name": "healthTimer",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 104,
            "description": "The stream send from this peer.",
            "itemtype": "attribute",
            "name": "stream",
            "type": "Stream",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 114,
            "description": "Stores the streaming configuration.",
            "itemtype": "attribute",
            "name": "streamingConfig",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 129,
            "description": "The PeerConnection session description constraints.",
            "itemtype": "attribute",
            "name": "sdpConstraints",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 144,
            "description": "The PeerConnection session description configuration.",
            "itemtype": "attribute",
            "name": "sdpConfig",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 154,
            "description": "The PeerConnection configuration.",
            "itemtype": "attribute",
            "name": "config",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 168,
            "description": "The PeerConnection object.",
            "itemtype": "attribute",
            "name": "RTCPeerConnection",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 178,
            "description": "The peerconnection weight during handshake.",
            "itemtype": "attribute",
            "name": "weight",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 188,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 201,
            "description": "Function to subscribe to when peer's connection has been started.",
            "itemtype": "method",
            "name": "onconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 209,
            "description": "Function to subscribe to when peer's ice connection state changes.",
            "itemtype": "method",
            "name": "oniceconnectionstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 217,
            "description": "Function to subscribe to when peer's ice gathering state changes.",
            "itemtype": "method",
            "name": "onicegatheringstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 225,
            "description": "Function to subscribe to when peer's remote stream is received.",
            "itemtype": "method",
            "name": "onaddstream",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 233,
            "description": "Function to subscribe to when peer's signaling state has changed.",
            "itemtype": "method",
            "name": "onsignalingstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 241,
            "description": "Function to subscribe to when peer's connection has been restarted.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 249,
            "description": "Function to subscribe to when peer's connection has been restarted.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 257,
            "description": "Function to subscribe to when a peer connection been disconnected.",
            "itemtype": "method",
            "name": "onremoveconnection",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 267,
            "description": "Starts the peer connection.",
            "itemtype": "method",
            "name": "connect",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 297,
            "description": "Restarts the peer connection.",
            "itemtype": "method",
            "name": "reconnect",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 335,
            "description": "Stops the peer connection.",
            "itemtype": "method",
            "name": "disconnect",
            "access": "private",
            "tagname": "",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 351,
            "description": "Binds events to RTCPeerConnection object.",
            "itemtype": "method",
            "name": "bind",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 457,
            "description": "Creates an offer session description.",
            "itemtype": "method",
            "name": "createOffer",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 497,
            "description": "Creates an answer session description.",
            "itemtype": "method",
            "name": "createAnswer",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 524,
            "description": "Sets local description.",
            "itemtype": "method",
            "name": "setLocalDescription",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 559,
            "description": "Sets remote description.",
            "itemtype": "method",
            "name": "setRemoteDescription",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 1,
            "description": "Handles all the events received from sub classes.",
            "itemtype": "attribute",
            "name": "PeerEventReceivedHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 22,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "PeerEventResponseHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 61,
            "description": "Handles the ice connection state trigger.",
            "itemtype": "property",
            "name": "iceconnectionstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 74,
            "description": "Handles the ice gathering state trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 87,
            "description": "Handles the ice candidate trigger.",
            "itemtype": "property",
            "name": "icecandidate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 96,
            "description": "Handles the signaling state trigger.",
            "itemtype": "property",
            "name": "signalingstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 109,
            "description": "Handles the datachannel state trigger.",
            "itemtype": "property",
            "name": "datachannel",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 127,
            "description": "Handles all the message events received from socket.",
            "itemtype": "attribute",
            "name": "PeerEventMessageHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 196,
            "description": "Handles the peer class events.",
            "itemtype": "method",
            "name": "PeerHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event data response.",
                    "type": "JSON"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Request.js",
            "line": 1,
            "description": "Handles the XMLHttpRequest and API function calls.",
            "itemtype": "attribute",
            "name": "Request",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 8,
            "description": "The api server.",
            "itemtype": "property",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 17,
            "description": "The flag to check if request should use XDomainRequest.",
            "itemtype": "property",
            "name": "isXDomainRequest",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 28,
            "description": "The protocol the request uses to connect to.",
            "itemtype": "property",
            "name": "protocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 37,
            "description": "Starts the connection to the room.",
            "itemtype": "property",
            "name": "load",
            "type": "Function",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Request",
            "subprops": [
                {
                    "name": "callback",
                    "description": "The callback triggered once request has been completed.",
                    "type": "Function"
                }
            ]
        },
        {
            "file": "source/Room.js",
            "line": 13,
            "description": "The room name.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 23,
            "description": "The room id.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 33,
            "description": "The room token.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 43,
            "description": "The room key.",
            "itemtype": "attribute",
            "name": "key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 53,
            "description": "The room start date timestamp (ISO format) for persistent mode.",
            "itemtype": "attribute",
            "name": "startDateTime",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 63,
            "description": "The room duration for persistent mode.",
            "itemtype": "attribute",
            "name": "duration",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 73,
            "description": "The request path to the api server.",
            "itemtype": "attribute",
            "name": "path",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 83,
            "description": "The room api owner.",
            "itemtype": "attribute",
            "name": "owner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 93,
            "description": "The user set settings for the room.",
            "itemtype": "attribute",
            "name": "credentials",
            "params": [
                {
                    "name": "duration",
                    "description": "The room duration set by user.",
                    "type": "Integer"
                },
                {
                    "name": "hash",
                    "description": "The hashed secret generated by user.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The room start date timestamp (ISO format) set by user.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 106,
            "description": "The self user connection.",
            "itemtype": "attribute",
            "name": "self",
            "type": "Self",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 116,
            "description": "The user self custom user data.",
            "itemtype": "attribute",
            "name": "self",
            "type": "JSON|String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 126,
            "description": "The user self existing local stream connection.",
            "itemtype": "attribute",
            "name": "stream",
            "params": [
                {
                    "name": "<streamId>",
                    "description": "The stream connected to room.",
                    "type": "Stream"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 137,
            "description": "The list of users connected to room.",
            "itemtype": "attribute",
            "name": "users",
            "params": [
                {
                    "name": "<userId>",
                    "description": "The user connected to room.",
                    "type": "User"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 148,
            "description": "The list of components connected to room.\n- E.g. MCU, Recording",
            "itemtype": "attribute",
            "name": "user",
            "params": [
                {
                    "name": "n",
                    "description": "The user connected to room.",
                    "type": "User",
                    "optional": true,
                    "optdefault": "*"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 160,
            "description": "The room duration.",
            "itemtype": "attribute",
            "name": "startDateTime",
            "type": "Socket",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 171,
            "description": "The room readyState.",
            "itemtype": "attribute",
            "name": "readyState",
            "type": "Integer",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 182,
            "description": "The room TURN/STUN servers connection.",
            "itemtype": "attribute",
            "name": "iceServers",
            "params": [
                {
                    "name": "iceServers",
                    "description": "The list of ICE servers.",
                    "type": "Array"
                },
                {
                    "name": "<iceServers.n>",
                    "description": "The ICE server.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 195,
            "description": "The room locked state.",
            "itemtype": "attribute",
            "name": "locked",
            "type": "Boolean",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 206,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 219,
            "description": "Function to subscribe to when room ready state has changed.",
            "itemtype": "method",
            "name": "onreadystatechange",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 227,
            "description": "Function to subscribe to when self has joined the room.",
            "itemtype": "method",
            "name": "onjoin",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 235,
            "description": "Function to subscribe to when self has been kicked out of room.",
            "itemtype": "method",
            "name": "onlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 243,
            "description": "Function to subscribe to when self is warned by server.",
            "itemtype": "method",
            "name": "onunlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 251,
            "description": "Function to subscribe to when room has been locked.",
            "itemtype": "method",
            "name": "onlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 259,
            "description": "Function to subscribe to when room has been unlocked.",
            "itemtype": "method",
            "name": "onunlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 267,
            "description": "Function to subscribe to when self has leave the room.",
            "itemtype": "method",
            "name": "onleave",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 276,
            "description": "Starts the connection to the room.",
            "itemtype": "method",
            "name": "join",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 296,
            "description": "Stops the connection to the room.",
            "itemtype": "method",
            "name": "leave",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 307,
            "description": "Locks the Room.",
            "itemtype": "method",
            "name": "lock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 326,
            "description": "Unlocks the Room.",
            "itemtype": "method",
            "name": "unlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 345,
            "description": "Sends a another stream to users.",
            "itemtype": "method",
            "name": "addStreamConnection",
            "params": [
                {
                    "name": "stream",
                    "description": "The stream object.",
                    "type": "Stream"
                }
            ],
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 377,
            "description": "The self user id.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 387,
            "description": "The self user data.",
            "itemtype": "attribute",
            "name": "data",
            "type": "String | JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 397,
            "description": "The self user username.",
            "itemtype": "attribute",
            "name": "username",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 407,
            "description": "The self user timestamp (ISO format).",
            "itemtype": "attribute",
            "name": "timeStamp",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 417,
            "description": "The self user credential.",
            "itemtype": "attribute",
            "name": "token",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 427,
            "description": "The self user local stream connection.",
            "itemtype": "attribute",
            "name": "stream",
            "params": [
                {
                    "name": "<connectionId>",
                    "description": "The stream connection to users.",
                    "type": "JSON"
                },
                {
                    "name": "<connectionId.targetUsers>",
                    "description": "The target users.",
                    "type": "Array"
                },
                {
                    "name": "<connectionId.stream>",
                    "description": "The stream connected to room.",
                    "type": "Stream"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 440,
            "description": "The self user browser agent information.",
            "itemtype": "attribute",
            "name": "agent",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 454,
            "description": "The self user bandwidth configuration.",
            "itemtype": "attribute",
            "name": "agent",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 464,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 481,
            "description": "Function to subscribe to when self user custom user data is updated.",
            "itemtype": "method",
            "name": "onupdate",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 489,
            "description": "Function to subscribe to when self has added a stream connection.",
            "itemtype": "method",
            "name": "onaddstreamconnection",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 497,
            "description": "Function to subscribe to when self has stopped a stream connection.",
            "itemtype": "method",
            "name": "onaddstream",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 505,
            "description": "Function to subscribe to when self has been disconnected from the room.",
            "itemtype": "method",
            "name": "ondisconnect",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 514,
            "description": "Updates the self user data.",
            "itemtype": "method",
            "name": "update",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 535,
            "description": "Starts a new stream connection.",
            "itemtype": "method",
            "name": "addStreamConnection",
            "params": [
                {
                    "name": "stream",
                    "description": "The stream object.",
                    "type": "Stream"
                },
                {
                    "name": "The",
                    "description": "array or string \"main\".",
                    "type": "Array|String"
                }
            ],
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 563,
            "description": "Stops a stream connection.",
            "itemtype": "method",
            "name": "removeStreamConnection",
            "params": [
                {
                    "name": "connectionId",
                    "description": "The streaming connection id.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 608,
            "description": "Gets the self user info.",
            "itemtype": "method",
            "name": "getInfo",
            "params": [
                {
                    "name": "connectionId",
                    "description": "The connectionId of the stream.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 1,
            "description": "Handles all the events received from sub classes.",
            "itemtype": "attribute",
            "name": "RoomEventReceivedHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 126,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "RoomEventResponseHandler",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 133,
            "description": "Handles the error state trigger.",
            "itemtype": "property",
            "name": "error",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 158,
            "description": "Handles the room class events.",
            "itemtype": "method",
            "name": "RoomHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event data response.",
                    "type": "JSON"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 1,
            "description": "Stores the list of messaging events",
            "itemtype": "attribute",
            "name": "MessageHandlerEvent",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 18,
            "description": "The message that indicates that self user is in the room.",
            "itemtype": "event",
            "name": "inRoom",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "sid",
                            "description": "The self user id.",
                            "type": "String"
                        },
                        {
                            "name": "pc_config",
                            "description": "The RTCPeerConnection configuration.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "iceServers",
                                    "description": "The list of ICE servers.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 61,
            "description": "The message that indicates that a user has joined the room.\nThis is sent when user has just started a connection to the room.",
            "itemtype": "event",
            "name": "enter",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "stream",
                            "description": "The peer connection streaming configuration.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The audio stream configuration.\n   If parsed as a boolean, other configuration settings under the audio\n   configuration would be set as the default setting in the connection.",
                                    "type": "JSON|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indiciates\n   if stereo is enabled for this connection.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.sourceId",
                                    "description": "The source id of the audio MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The video stream configuration.\n   If parsed as a boolean, other configuration settings under the video\n   configuration would be set as the default setting in the connection.",
                                    "type": "String|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The video streaming resolution.",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The video stream framerate.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.sourceId",
                                    "description": "The source id of the video MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "status",
                                    "description": "The stream MediaStreamTrack status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "status.audioMuted",
                                    "description": "The flag that indicates if audio is muted.\n   If audio is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "status.videoMuted",
                                    "description": "The flag that indicates if video is muted.\n   If video is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "The user custom data. Only given for \"main\" peer connections.",
                            "type": "Integer"
                        },
                        {
                            "name": "agent",
                            "description": "The user's browser agent information. Only given for \"main\" peer connections.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The user's browser agent name. For other SDKs, it's indicated\n   by their type of device <code>E.g. ios, android</code>. For components, it's indicated\n   by their type <code>E.g. MCU, Recording</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The user's browser agent version. For other SDKs, it's indicated\n   by their version of device OS <code>ios8 = 8. android kitkat = 4.4</code>. For components, it's indicated\n   by their version <code>E.g. 0.1.0, 0.2.0</code>.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "webRTCType",
                                    "description": "The user's browser agent webrtc implementation type. For other SDKs or\n   components, use <code>other</code>.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The peer connection bandwidth configuration.\n   This does fixes the bandwidth but doesn't prevent alterations done by browser for smoother streaming.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The bandwidth configuration for the audio stream.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The bandwidth configuration for the video stream.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The bandwidth configuration for the data stream.",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 129,
            "description": "The message that indicates that a user has joined the room.\nThis is sent as a response to user's \"enter\" message.",
            "itemtype": "event",
            "name": "welcome",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "stream",
                            "description": "The peer connection streaming configuration.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The audio stream configuration.\n   If parsed as a boolean, other configuration settings under the audio\n   configuration would be set as the default setting in the connection.",
                                    "type": "JSON|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indiciates\n   if stereo is enabled for this connection.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.sourceId",
                                    "description": "The source id of the audio MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The video stream configuration.\n   If parsed as a boolean, other configuration settings under the video\n   configuration would be set as the default setting in the connection.",
                                    "type": "String|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The video streaming resolution.",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The video stream framerate.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.sourceId",
                                    "description": "The source id of the video MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "status",
                                    "description": "The stream MediaStreamTrack status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "status.audioMuted",
                                    "description": "The flag that indicates if audio is muted.\n   If audio is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "status.videoMuted",
                                    "description": "The flag that indicates if video is muted.\n   If video is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "The user custom data. Only given for \"main\" peer connections.",
                            "type": "Integer"
                        },
                        {
                            "name": "agent",
                            "description": "The user's browser agent information. Only given for \"main\" peer connections.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The user's browser agent name. For other SDKs, it's indicated\n   by their type of device <code>E.g. ios, android</code>. For components, it's indicated\n   by their type <code>E.g. MCU, Recording</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The user's browser agent version. For other SDKs, it's indicated\n   by their version of device OS <code>ios8 = 8. android kitkat = 4.4</code>. For components, it's indicated\n   by their version <code>E.g. 0.1.0, 0.2.0</code>.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "webRTCType",
                                    "description": "The user's browser agent webrtc implementation type. For other SDKs or\n   components, use <code>other</code>.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "weight",
                            "description": "The priority weight of the message. In use-cases where both users receives each\n   others \"enter\" message during the first handshake, the priority would indicate which user gets to do \n   the offer.",
                            "type": "Integer"
                        },
                        {
                            "name": "bandwidth",
                            "description": "The peer connection bandwidth configuration.\n   This does fixes the bandwidth but doesn't prevent alterations done by browser for smoother streaming.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The bandwidth configuration for the audio stream.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The bandwidth configuration for the video stream.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The bandwidth configuration for the data stream.",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted user id to receive welcome.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 201,
            "description": "The message that starts a user's peer connection offer and answer handshake.",
            "itemtype": "event",
            "name": "offer",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The offer session description.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted user id to receive offer.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 223,
            "description": "The message that responses to a user's peer connection offer.",
            "itemtype": "event",
            "name": "answer",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The answer session description.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted user id to receive answer.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 245,
            "description": "The message that is received when candidate is generated from the user's peer connection.\nIt's recommend to add all the relevant information when instianting a new <var>RTCIceCandidate</var>\n  object.",
            "itemtype": "event",
            "name": "candidate",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "candidate",
                            "description": "The candidate's candidate session description.",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "The candidate's sdpMid.",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "The candidate's sdpMLineIndex.",
                            "type": "Integer"
                        },
                        {
                            "name": "prid",
                            "description": "The peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted user id to receive generated candidate.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 271,
            "description": "The message that is received when user's custom data is updated.",
            "itemtype": "event",
            "name": "updateUserEvent",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "userData",
                            "description": "The updated custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 291,
            "description": "The message that is received when user's peer connection audio stream mute status\n  have changed. This is inline with <var>MediaStreamTrack</var> API's <code>enabled = true/false</code>.",
            "itemtype": "event",
            "name": "muteAudioEvent",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The updated audio stream mute status.",
                            "type": "Boolean"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 313,
            "description": "The message that is received when user's peer connection video stream mute status\n  have changed. This is inline with <var>MediaStreamTrack</var> API's <code>enabled = true/false</code>.",
            "itemtype": "event",
            "name": "muteVideoEvent",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The updated video stream mute status.",
                            "type": "Boolean"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 335,
            "description": "The message that is received when the current room lock status have changed.",
            "itemtype": "event",
            "name": "roomLockEvent",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "locked",
                            "description": "The updated room lock status.",
                            "type": "Boolean"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 362,
            "description": "The message that is received when user's peer connection is going through a refresh.",
            "itemtype": "event",
            "name": "restart",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "String"
                        },
                        {
                            "name": "SDPType",
                            "description": "The handshake SDP type. <code>\"offer\"</code> is for the peer \n  connection that initiated the restart. <code>\"answer\"</code> is for the peer\n  connection that is responding to the restart.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The session description message for restart.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "type",
                                    "description": "The <var>RTCSessionDescription</var> type.",
                                    "type": "String"
                                },
                                {
                                    "name": "sdp",
                                    "description": "The <var>RTCSessionDescription</var> session description.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 388,
            "description": "The message that is received when user is receiving a rejection or warning from signaling server.",
            "itemtype": "event",
            "name": "redirect",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        },
                        {
                            "name": "action",
                            "description": "The action received that indicates if user is warned or rejected.\n   <code>\"warning\"</code> is when signaling is warning user of the action and comply accordingly.\n   <code>\"reject\"</code> is when signaling has kicked user out of the room.",
                            "type": "String"
                        },
                        {
                            "name": "info",
                            "description": "The signaling message for the redirect message.",
                            "type": "JSON"
                        },
                        {
                            "name": "reason",
                            "description": "The reason for the action taken by signaling.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 426,
            "description": "The message that is received when user has left the room.",
            "itemtype": "event",
            "name": "bye",
            "params": [
                {
                    "name": "message",
                    "description": "The message received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "The type of message.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The user id.",
                            "type": "String"
                        },
                        {
                            "name": "rid",
                            "description": "The room id.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Messaging"
        },
        {
            "file": "source/RoomMessageHandler.js",
            "line": 447,
            "description": "Handles the room messaging events.",
            "itemtype": "attribute",
            "name": "MessageHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/SDP.js",
            "line": 2,
            "description": "Finds a line in the sdp based on the condition provided",
            "itemtype": "property",
            "name": "SDP.find",
            "type": "Function",
            "return": {
                "description": "[index, line] The sdp line.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "The sdp in array.",
                    "type": "Array"
                },
                {
                    "name": "condition",
                    "description": "The beginning part of the sdp line. E.g. a=fmtp",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 29,
            "description": "Enables the stereo feature if OPUS is enabled.",
            "itemtype": "property",
            "name": "SDP.addStereo",
            "type": "Function",
            "return": {
                "description": "Updated version with Stereo feature",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 59,
            "description": "Sets the audio, video and DataChannel data bitrate in the sdp.\n- In low-environment cases, bandwidth is managed by the browsers\n  and the quality of the resolution or audio may change to suit.",
            "itemtype": "property",
            "name": "SDP.setBitrate",
            "type": "Function",
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 105,
            "description": "Set video stream resolution in the sdp.\n- As noted, this is not working.",
            "itemtype": "property",
            "name": "SDP.setResolution",
            "type": "Function",
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 129,
            "description": "Removes the H264 preference in sdp because other browsers does not support it yet.",
            "itemtype": "property",
            "name": "SDP.removeH264Support",
            "type": "Function",
            "return": {
                "description": "Updated version removing Firefox h264 pref support.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 149,
            "description": "Modifies a local session description with the configuration provided",
            "itemtype": "property",
            "name": "SDP.configure",
            "type": "Function",
            "return": {
                "description": "Updated local session description.",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/Socket.js",
            "line": 27,
            "description": "The signalling server.",
            "itemtype": "attribute",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 37,
            "description": "The signalling server protocol to connect with.",
            "itemtype": "attribute",
            "name": "protocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 47,
            "description": "The signalling server port to connect with.",
            "itemtype": "attribute",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 57,
            "description": "The timeout the Socket should wait for before throwing an error.",
            "itemtype": "attribute",
            "name": "timeout",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 67,
            "description": "The interval to wait before sending the next message.",
            "itemtype": "attribute",
            "name": "messageInterval",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 77,
            "description": "The queue of messages (throttle) before sending the next",
            "itemtype": "attribute",
            "name": "messageQueue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 87,
            "description": "The list of available signalling server ports.",
            "itemtype": "attribute",
            "name": "ports",
            "params": [
                {
                    "name": "http:",
                    "description": "The list of HTTP ports.",
                    "type": "Array"
                },
                {
                    "name": "https:",
                    "description": "The list of HTTPS ports.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 102,
            "description": "The socket configuration passed into the <code>io.socket</code>.",
            "itemtype": "attribute",
            "name": "config",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 112,
            "description": "The type of socket connection. There are two types:\n- <code>\"WebSocket\"</code> indicates a WebSocket connection.\n- <code>\"XHRPolling\"</code> indicates a LongPolling connection.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "default": "\"WebSocket\"",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 125,
            "description": "The socket.io object.",
            "itemtype": "attribute",
            "name": "Socket",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 135,
            "description": "The responses attached to message events.",
            "itemtype": "attribute",
            "name": "responses",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 146,
            "description": "Function to subscribe to when socket has been connected.",
            "itemtype": "method",
            "name": "onconnect",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 154,
            "description": "Function to subscribe to when socket has been disconnected.",
            "itemtype": "method",
            "name": "ondisconnect",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 162,
            "description": "Function to subscribe to when socket has connection error.",
            "itemtype": "method",
            "name": "onconnecterror",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 170,
            "description": "Function to subscribe to when socket attempts to reconnect.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 178,
            "description": "Function to subscribe to when socket has an exception.",
            "itemtype": "method",
            "name": "onerror",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 187,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "method",
            "name": "handler",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The response data.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 200,
            "description": "Starts the connection to the signalling server",
            "itemtype": "method",
            "name": "connect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 217,
            "description": "Stops the connection to the Socket.",
            "itemtype": "method",
            "name": "disconnect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 229,
            "description": "Attaches a listener to a particular socket message event received.",
            "itemtype": "method",
            "name": "when",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 242,
            "description": "Sends a socket data.",
            "itemtype": "method",
            "name": "send",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 263,
            "description": "Handles the event when socket is connected to signaling.",
            "itemtype": "method",
            "name": "bindOnConnect",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 285,
            "description": "Handles the event when socket is disconnected to signaling.",
            "itemtype": "method",
            "name": "bindOnDisconnect",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 299,
            "description": "Handles the event when socket receives a message from signaling.",
            "itemtype": "method",
            "name": "bindOnMessage",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 324,
            "description": "Handles the event when socket have a connection error.",
            "itemtype": "method",
            "name": "bindOnConnectError",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 362,
            "description": "Handles the event when socket catches an exception.",
            "itemtype": "method",
            "name": "bindOnError",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 378,
            "description": "Responses to the attached socket message responses.",
            "itemtype": "method",
            "name": "respond",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 394,
            "description": "Restarts the connection to the Socket.",
            "itemtype": "method",
            "name": "reconnect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 420,
            "description": "Creates a WebSocket connection in socket.io.",
            "itemtype": "method",
            "name": "WebSocket",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Socket.js",
            "line": 448,
            "description": "Creates a XHR Long-polling connection in socket.io.",
            "itemtype": "method",
            "name": "XHRPolling",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 1,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "SocketEventResponseHandler",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 10,
            "description": "Event fired when the MediaSocket has started and that the Socket object is ready to use.",
            "itemtype": "event",
            "name": "Socket:start",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 22,
            "description": "Event fired when usually getUserMedia fails or an exception has occurred during the\n  MediaSocket object handling.",
            "itemtype": "event",
            "name": "Socket:error",
            "params": [
                {
                    "name": "error",
                    "description": "The getUserMedia or event error.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 37,
            "description": "Event fired when the MediaSocketTrack of the MediaSocket object has started and\n  that the track is ready to use.",
            "itemtype": "event",
            "name": "Socket:track:start",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 50,
            "description": "Event fired when the MediaSocketTrack of the MediaSocket object has stopped.",
            "itemtype": "event",
            "name": "Socket:track:stop",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 62,
            "description": "Event fired when the MediaSocketTrack of the MediaSocket object has been disabled (muted).",
            "itemtype": "event",
            "name": "Socket:track:mute",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 74,
            "description": "Event fired when the MediaSocketTrack of the MediaSocket object has been enabled (unmuted).",
            "itemtype": "event",
            "name": "Socket:track:unmute",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 87,
            "description": "Event fired when the MediaSocket object has stopped.",
            "itemtype": "event",
            "name": "Socket:stop",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/SocketHandler.js",
            "line": 100,
            "description": "Handles the Socket class events.",
            "itemtype": "method",
            "name": "SocketHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event data response.",
                    "type": "JSON"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 20,
            "description": "The stream id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 30,
            "description": "The getUserMedia constraints.",
            "itemtype": "attribute",
            "name": "constraints",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 40,
            "description": "The streaming configuration.",
            "itemtype": "attribute",
            "name": "config",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 50,
            "description": "The stream source type.",
            "itemtype": "attribute",
            "name": "sourceType",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 60,
            "description": "The MediaStream object.",
            "itemtype": "attribute",
            "name": "MediaStream",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 71,
            "description": "Function to subscribe to when stream object is ready to use.",
            "itemtype": "method",
            "name": "onstart",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 80,
            "description": "Function to subscribe to when getUserMedia throws an exception or event has error.",
            "itemtype": "method",
            "name": "onerror",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 89,
            "description": "Function to subscribe to when MediaStreamTrack of the MediaStream object has started.",
            "itemtype": "method",
            "name": "ontrackstart",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 98,
            "description": "Function to subscribe to when MediaStreamTrack of the MediaStream object has stopped.",
            "itemtype": "method",
            "name": "ontrackstop",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 107,
            "description": "Function to subscribe to when MediaStreamTrack of the MediaStream object has been disabled (muted).",
            "itemtype": "method",
            "name": "ontrackmute",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 116,
            "description": "Function to subscribe to when MediaStreamTrack of the MediaStream object has been enabled (unmuted).",
            "itemtype": "method",
            "name": "ontrackunmute",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 125,
            "description": "Function to subscribe to when MediaStream object has ended.",
            "itemtype": "method",
            "name": "onstop",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 135,
            "description": "The handler that the parent classes utilises to listen to events.",
            "itemtype": "method",
            "name": "parentHandler",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The response data.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 146,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "method",
            "name": "handler",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The response data.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 163,
            "description": "Starts a MediaStream connection with getUserMedia.",
            "itemtype": "method",
            "name": "start",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 179,
            "description": "Binds events to MediaStream object.",
            "itemtype": "method",
            "name": "bind",
            "params": [
                {
                    "name": "bindStream",
                    "description": "The MediaStream object to bind events to.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 210,
            "description": "Binds events to MediaStreamTrack object.",
            "itemtype": "method",
            "name": "bindTracks",
            "params": [
                {
                    "name": "bindTracks",
                    "description": "The MediaStreamTracks from the MediaStream object.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "n",
                            "description": "The MediaStreamTrack object to bind events to.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 267,
            "description": "Attaches the MediaStream object to a video element.",
            "itemtype": "method",
            "name": "attachElement",
            "params": [
                {
                    "name": "element",
                    "description": "The video DOM element to bind the MediaStream to.",
                    "type": "DOM"
                }
            ],
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 284,
            "description": "Handles the differences for non-implemented onended event for MediaStream.",
            "itemtype": "method",
            "name": "bindOnStreamEnded",
            "params": [
                {
                    "name": "bindStream",
                    "description": "The MediaStream object to bind the event to.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The interval object workaround for Firefox or the\n  event handler function for supported browsers.",
                "type": "Function|Object"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 362,
            "description": "Mutes all audio MediaStreamTracks of the MediaStream object.",
            "itemtype": "method",
            "name": "muteAudio",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 388,
            "description": "Unmutes all audio MediaStreamTracks of the MediaStream object.",
            "itemtype": "method",
            "name": "unmuteAudio",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 414,
            "description": "Stops all audio MediaStreamTracks streaming in the MediaStream object.",
            "itemtype": "method",
            "name": "stopAudio",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 445,
            "description": "Mutes all video MediaStreamTracks of the MediaStream object.",
            "itemtype": "method",
            "name": "muteVideo",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 471,
            "description": "Unmutes all video MediaStreamTracks of the MediaStream object.",
            "itemtype": "method",
            "name": "unmuteVideo",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 497,
            "description": "Stops all video MediaStreamTracks streaming of the MediaStream object.",
            "itemtype": "method",
            "name": "stopVideo",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/Stream.js",
            "line": 528,
            "description": "Stops MediaStream object streaming.",
            "itemtype": "method",
            "name": "stop",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 1,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "StreamEventResponseHandler",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 10,
            "description": "Event fired when the MediaStream has started and that the stream object is ready to use.",
            "itemtype": "event",
            "name": "stream:start",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 22,
            "description": "Event fired when usually getUserMedia fails or an exception has occurred during the\n  MediaStream object handling.",
            "itemtype": "event",
            "name": "stream:error",
            "params": [
                {
                    "name": "error",
                    "description": "The getUserMedia or event error.",
                    "type": "Object"
                }
            ],
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 37,
            "description": "Event fired when the MediaStreamTrack of the MediaStream object has started and\n  that the track is ready to use.",
            "itemtype": "event",
            "name": "stream:track:start",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 50,
            "description": "Event fired when the MediaStreamTrack of the MediaStream object has stopped.",
            "itemtype": "event",
            "name": "stream:track:stop",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 62,
            "description": "Event fired when the MediaStreamTrack of the MediaStream object has been disabled (muted).",
            "itemtype": "event",
            "name": "stream:track:mute",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 74,
            "description": "Event fired when the MediaStreamTrack of the MediaStream object has been enabled (unmuted).",
            "itemtype": "event",
            "name": "stream:track:unmute",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 87,
            "description": "Event fired when the MediaStream object has stopped.",
            "itemtype": "event",
            "name": "stream:stop",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamHandler.js",
            "line": 100,
            "description": "Handles the stream class events.",
            "itemtype": "method",
            "name": "StreamHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event data response.",
                    "type": "JSON"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream",
            "module": "Skylink"
        },
        {
            "file": "source/StreamParser.js",
            "line": 1,
            "description": "Handles the parsing of Stream / Bandwidth settings.",
            "itemtype": "attribute",
            "name": "StreamParser",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink"
        },
        {
            "file": "source/StreamParser.js",
            "line": 8,
            "description": "Stores the default Stream / Bandwidth settings.",
            "itemtype": "property",
            "name": "defaultConfig",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink",
            "subprops": [
                {
                    "name": "audio",
                    "description": "The default audio settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The default flag to indicate if stereo is enabled.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The default video settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The default video resolution.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The default video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "height",
                                    "description": "The default video resolution height.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The default video maximum framerate.",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The default bandwidth streaming settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The default audio bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "video",
                            "description": "The default video bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "data",
                            "description": "The default DataChannel data bandwidth bitrate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 44,
            "description": "Parses the audio configuration for the getUserMedia constraints.",
            "itemtype": "property",
            "name": "parseAudioConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The audio settings or flag if audio is enabled.",
                    "type": "JSON|Boolean",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag to indicate if stereo is enabled.",
                            "type": "Boolean"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 85,
            "description": "Parses the video configuration for the getUserMedia constraints.",
            "itemtype": "property",
            "name": "parseVideoConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The video settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The video resolution.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The video maximum framerate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 162,
            "description": "Parses the bandwidth configuration.\n- In low-bandwidth environment, it's mostly managed by the browser.\n  However, this option enables you to set low bandwidth for high-bandwidth\n  environment whichever way is possible.",
            "itemtype": "property",
            "name": "parseBandwidthConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The bandwidth streaming settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The audio bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "video",
                            "description": "The video bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "data",
                            "description": "The DataChannel data bandwidth bitrate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 198,
            "description": "Parses the stream muted configuration.",
            "itemtype": "property",
            "name": "parseMutedConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The stream muted settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audioMuted",
                            "description": "The flag to indicate if audio stream is muted.",
                            "type": "Integer"
                        },
                        {
                            "name": "videoMuted",
                            "description": "The flag to indicate if video stream is muted.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamTrackList.js",
            "line": 1,
            "description": "Stores the list of available StreamTrackList.\n- This is not supported in Firefox yet, but you can select the tracklist\n  in Firefox when getUserMedia is invoked.",
            "itemtype": "attribute",
            "name": "StreamTrackList",
            "return": {
                "description": "Returns an array of audio and video tracks.\n- audio: The audio track list.\n- video: The video track list.",
                "type": "JSON"
            },
            "since": "0.6.0",
            "class": "Skylink",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 54,
            "description": "The user id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "readonly": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 64,
            "description": "The user type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "readonly": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 74,
            "description": "Stores the user data.",
            "itemtype": "attribute",
            "name": "data",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 84,
            "description": "Stores the browser agent information.",
            "itemtype": "attribute",
            "name": "agent",
            "params": [
                {
                    "name": "name",
                    "description": "The browser agent name.",
                    "type": "String"
                },
                {
                    "name": "version",
                    "description": "The browser agent version.",
                    "type": "Integer"
                },
                {
                    "name": "webRTCType",
                    "description": "The browser agent WebRTC type of implementation.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 97,
            "description": "Stores the user's bandwidth configuration.",
            "itemtype": "attribute",
            "name": "bandwidth",
            "params": [
                {
                    "name": "audio",
                    "description": "The bandwidth audio configuration.",
                    "type": "Integer"
                },
                {
                    "name": "data",
                    "description": "The bandwidth data configuration.",
                    "type": "Integer"
                },
                {
                    "name": "video",
                    "description": "The bandwidth video configuration.",
                    "type": "Integer"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 110,
            "description": "Stores the list of peer connections to user.",
            "itemtype": "attribute",
            "name": "peers",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 121,
            "description": "Function to subscribe to when the user object is ready to use.",
            "itemtype": "method",
            "name": "onstart",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 130,
            "description": "Function to subscribe to when user's custom data is updated.",
            "itemtype": "method",
            "name": "onupdate",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 139,
            "description": "Function to subscribe to when user has an established \"main\" peer connection.",
            "itemtype": "method",
            "name": "onconnect",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 148,
            "description": "Function to subscribe to when user is disconnected from the room.",
            "itemtype": "method",
            "name": "ondisconnect",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 157,
            "description": "Function to subscribe to when a new peer connection is established to user.",
            "itemtype": "method",
            "name": "onaddconnection",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 166,
            "description": "Function to subscribe to when a peer connection to user has added.",
            "itemtype": "method",
            "name": "onremoveconnection",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 175,
            "description": "Function to subscribe to when a new data transfer request is initialized from user.",
            "itemtype": "method",
            "name": "ondatarequest",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 184,
            "description": "Function to subscribe to when a new data is received after transfer is completed from user.",
            "itemtype": "method",
            "name": "ondata",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 193,
            "description": "Function to subscribe to when a new message is received from user.",
            "itemtype": "method",
            "name": "onmessage",
            "eventhandler": "true",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 203,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "method",
            "name": "handler",
            "params": [
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The response data.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 216,
            "description": "Starts a new peer connection to user.",
            "itemtype": "method",
            "name": "addConnection",
            "params": [
                {
                    "name": "data",
                    "description": "The shared peer connection streaming configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "prid",
                            "description": "The shared peer connection id.",
                            "type": "JSON"
                        },
                        {
                            "name": "iceServers",
                            "description": "The ICE servers the connection should use.",
                            "type": "Array"
                        },
                        {
                            "name": "stream",
                            "description": "The streamming configuration for the \"main\" shared peer connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "stream.audio",
                                    "description": "The audio stream configuration.\n   If parsed as a boolean, other configuration settings under the audio\n   configuration would be set as the default setting in the connection.",
                                    "type": "JSON|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "stream.audio.stereo",
                                    "description": "The flag that indiciates\n   if stereo is enabled for this connection.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "stream.audio.sourceId",
                                    "description": "The source id of the audio MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "stream.video",
                                    "description": "The video stream configuration.\n   If parsed as a boolean, other configuration settings under the video\n   configuration would be set as the default setting in the connection.",
                                    "type": "String|Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "stream.video.resolution",
                                    "description": "The video streaming resolution.",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "stream.video.resolution.width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "stream.video.resolution.height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "stream.video.frameRate",
                                    "description": "The video stream framerate.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "stream.video.sourceId",
                                    "description": "The source id of the video MediaStreamTrack\n   used for this connection.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "stream.status",
                                    "description": "The stream MediaStreamTrack status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "stream.status.audioMuted",
                                    "description": "The flag that indicates if audio is muted.\n   If audio is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "stream.status.videoMuted",
                                    "description": "The flag that indicates if video is muted.\n   If video is set to false, this would be set as true.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The bandwidth configuration the peer connections.\n   This does fixes the bandwidth but doesn't prevent alterations done by browser for smoother streaming.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The bandwidth configuration for the audio stream.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The bandwidth configuration for the video stream.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The bandwidth configuration for the data stream.",
                                    "type": "Boolean",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "SDPType",
                            "description": "The session description type that the peer connection would send.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "stream",
                    "description": "The stream object.",
                    "type": "Stream",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 280,
            "description": "Stops a peer connection to user.",
            "itemtype": "method",
            "name": "removeConnection",
            "params": [
                {
                    "name": "peerId",
                    "description": "The shared peer connection id.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 300,
            "description": "Disconnects this user connection.",
            "itemtype": "method",
            "name": "disconnect",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 312,
            "description": "Gets this user information.",
            "itemtype": "method",
            "name": "getInfo",
            "return": {
                "description": "The user streaming configuration and custom data.\n- <code>userData</code> <var>: <b>type</b> String | JSON</var><br>\n  The custom data.\n- <code>agent</code> <var>: <b>type</b> JSON</var><br>\n  The user's browser agent information.\n- <code>agent.name</code> <var>: <b>type</b> String</var><br>\n  The user's browser agent name.\n- <code>agent.version</code> <var>: <b>type</b> Integer</var><br>\n  The user's browser agent version.\n- <code>agent.webRTCType</code> <var>: <b>type</b> String</var><br>\n  The user's browser webrtc implementation type.\n- <code>settings</code> <var>: <b>type</b> JSON</var><br>\n  The list of peer connections streaming.\n- <code>settings.[peerId]</code> <var>: <b>type</b> JSON</var><br>\n  The peer connection streaming information.\n- <code>settings.[peerId].audio</code> <var>: <b>type</b> JSON|Boolean</var><br>\n  The audio streaming information. If there is no stream connection with the peer,\n  it's <code>false</code>.\n- <code>settings.[peerId].audio.stereo</code> <var>: <b>type</b> Boolean</var><br>\n  The flag that indicates if stereo is enabled for this connection. By default,\n  it's <code>false</code>.\n- <code>settings.[peerId].audio.sourceId</code> <var>: <b>type</b> String</var><br>\n  The audio MediaStreamTrack source used for this connection.\n- <code>settings.[peerId].video</code> <var>: <b>type</b> JSON|Boolean</var><br>\n  The video streaming information. If there is no stream connection with the peer,\n  it's <code>false</code>.\n- <code>settings.[peerId].video.resolution</code> <var>: <b>type</b> JSON</var><br>\n  The video stream resolution. \n- <code>settings.[peerId].video.resolution.width</code> <var>: <b>type</b> Integer</var><br>\n  The video stream resolution height.\n- <code>settings.[peerId].video.resolution.height</code> <var>: <b>type</b> Integer</var><br>\n  The video stream resolution width.\n- <code>settings.[peerId].video.frameRate</code> <var>: <b>type</b> Integer</var><br>\n  The video stream resolution framerate.\n- <code>settings.[peerId].video.sourceId</code> <var>: <b>type</b> String</var><br>\n  The video MediaStreamTrack source used for this connection.\n- <code>settings.[peerId].status</code> <var>: <b>type</b> JSON</var><br>\n  The MediaStreamTracks enabled status (muted/unmuted).\n- <code>settings.[peerId].status.audioMuted</code> <var>: <b>type</b> Boolean</var><br>\n  The audio MediaStreamTrack enabled status (muted/unmuted).\n- <code>settings.[peerId].status.audioMuted</code> <var>: <b>type</b> Boolean</var><br>\n  The video MediaStreamTrack enabled status (muted/unmuted).\n- <code>bandwidth</code> <var>: <b>type</b> JSON</var><br>\n  The bandwidth configuration for the peer connections.\n  This does fixes the bandwidth but doesn't prevent alterations done by browser for smoother streaming.\n- <code>bandwidth.data</code> <var>: <b>type</b> Integer</var><br>\n  The bandwidth configuration for data stream.\n- <code>bandwidth.video</code> <var>: <b>type</b> Integer</var><br>\n  The bandwidth configuration for video stream.\n- <code>bandwidth.audio</code> <var>: <b>type</b> Integer</var><br>\n  The bandwidth configuration for audio stream.",
                "type": "JSON"
            },
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 1,
            "description": "Handles all the events received from sub classes.",
            "itemtype": "attribute",
            "name": "UserHandlerReceivedHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 58,
            "description": "Handles all the events to respond to other parent classes.",
            "itemtype": "attribute",
            "name": "UserHandlerResponseHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 67,
            "description": "Event fired when the user object is ready to use.",
            "itemtype": "event",
            "name": "user:start",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 79,
            "description": "Event fired when the user has an established \"main\" peer connection.",
            "itemtype": "event",
            "name": "user:connect",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 91,
            "description": "Event fired when the user has transferred a data successfully.",
            "itemtype": "event",
            "name": "user:data",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 103,
            "description": "Event fired when the user is initiating a data transfer request.",
            "itemtype": "event",
            "name": "user:datarequest",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 115,
            "description": "Event fired when the user's custom data has been updated.",
            "itemtype": "event",
            "name": "user:data",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 127,
            "description": "Event fired when the user has started a peer connection.",
            "itemtype": "event",
            "name": "user:addconnection",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 139,
            "description": "Event fired when the user has ended a peer connection",
            "itemtype": "event",
            "name": "user:removeconnection",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 151,
            "description": "Event fired when the user sends an incoming message.",
            "itemtype": "event",
            "name": "user:message",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 163,
            "description": "Event fired when the user's peer connections has been disconnected.\nUsually fired when user leaves the room.",
            "itemtype": "event",
            "name": "user:disconnect",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 178,
            "description": "Handles all the message events received from socket.",
            "itemtype": "attribute",
            "name": "UserEventMessageHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        },
        {
            "file": "source/UserHandler.js",
            "line": 289,
            "description": "Handles the user class events.",
            "itemtype": "method",
            "name": "UserHandler",
            "params": [
                {
                    "name": "com",
                    "description": "The reference to the class object.",
                    "type": "Object"
                },
                {
                    "name": "event",
                    "description": "The event name.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event data response.",
                    "type": "JSON"
                },
                {
                    "name": "listener",
                    "description": "The listener function.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User",
            "module": "Skylink"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: eventhandler",
            "line": " source/DataChannel.js:50"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/DataChannel.js:59"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/DataChannel.js:68"
        },
        {
            "message": "unknown tag: iceconnectionstate",
            "line": " source/EventList.js:135"
        },
        {
            "message": "unknown tag: unsupported",
            "line": " source/EventList.js:319"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:335"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:351"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:457"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:497"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Request.js:37"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Room.js:276"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Room.js:296"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " source/Room.js:366"
        },
        {
            "message": "replacing incorrect tag: parma with param",
            "line": " source/Socket.js:1"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:200"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:217"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:229"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:242"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:299"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:378"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:394"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:420"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:448"
        },
        {
            "message": "unknown tag: instantiable",
            "line": " source/Stream.js:1"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:71"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:80"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:89"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:98"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:107"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:116"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/Stream.js:125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " source/StreamTrackList.js:1"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:121"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:130"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:139"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:148"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:157"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:166"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:175"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:184"
        },
        {
            "message": "unknown tag: eventhandler",
            "line": " source/User.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " source/User.js:312"
        },
        {
            "message": "Missing item type\nEvent fired when an ICE connection state has changed.",
            "line": " source/EventList.js:135"
        }
    ]
}