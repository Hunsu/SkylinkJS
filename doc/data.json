{
    "project": {
        "name": "skylinkjs",
        "description": "WebRTC real-time video conversation library",
        "version": "0.5.7",
        "url": "https://temasys.github.io/"
    },
    "files": {
        "source/DataChannel.js": {
            "name": "source/DataChannel.js",
            "modules": {},
            "classes": {
                "DataChannel": 1
            },
            "fors": {
                "Skylink": 1,
                "DataChannel": 1,
                "DataMessage": 1
            },
            "namespaces": {}
        },
        "source/EventList.js": {
            "name": "source/EventList.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Globals.js": {
            "name": "source/Globals.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Log.js": {
            "name": "source/Log.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Debugger": 1
            },
            "namespaces": {}
        },
        "source/Peer.js": {
            "name": "source/Peer.js",
            "modules": {},
            "classes": {
                "Peer": 1
            },
            "fors": {
                "Skylink": 1,
                "Peer": 1
            },
            "namespaces": {}
        },
        "source/PeerHandler.js": {
            "name": "source/PeerHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Peer": 1
            },
            "namespaces": {}
        },
        "source/Request.js": {
            "name": "source/Request.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1,
                "Request": 1
            },
            "namespaces": {}
        },
        "source/Room.js": {
            "name": "source/Room.js",
            "modules": {},
            "classes": {
                "Room": 1,
                "Self": 1
            },
            "fors": {
                "Skylink": 1,
                "Room": 1,
                "Self": 1
            },
            "namespaces": {}
        },
        "source/RoomHandler.js": {
            "name": "source/RoomHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Room": 1
            },
            "namespaces": {}
        },
        "source/SDP.js": {
            "name": "source/SDP.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/Socket.js": {
            "name": "source/Socket.js",
            "modules": {},
            "classes": {
                "Socket": 1
            },
            "fors": {
                "Skylink": 1,
                "Socket": 1,
                "Room": 1
            },
            "namespaces": {}
        },
        "source/Stream.js": {
            "name": "source/Stream.js",
            "modules": {},
            "classes": {
                "Stream": 1
            },
            "fors": {
                "Skylink": 1,
                "Stream": 1,
                "User": 1
            },
            "namespaces": {}
        },
        "source/StreamParser.js": {
            "name": "source/StreamParser.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/StreamTrackList.js": {
            "name": "source/StreamTrackList.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/User.js": {
            "name": "source/User.js",
            "modules": {},
            "classes": {},
            "fors": {
                "User": 1
            },
            "namespaces": {}
        },
        "source/UserHandler.js": {
            "name": "source/UserHandler.js",
            "modules": {},
            "classes": {},
            "fors": {
                "User": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "DataChannel": {
            "name": "DataChannel",
            "shortname": "DataChannel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/DataChannel.js",
            "line": 1,
            "description": "Handles the DataChannel connections.",
            "since": "0.6.0"
        },
        "Skylink": {
            "name": "Skylink",
            "shortname": "Skylink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "DataMessage": {
            "name": "DataMessage",
            "shortname": "DataMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Debugger": {
            "name": "Debugger",
            "shortname": "Debugger",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Peer": {
            "name": "Peer",
            "shortname": "Peer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/Peer.js",
            "line": 1,
            "description": "Handles the PeerConnection and Peer data.",
            "since": "0.6.0"
        },
        "Request": {
            "name": "Request",
            "shortname": "Request",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "Room": {
            "name": "Room",
            "shortname": "Room",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/Room.js",
            "line": 1,
            "description": "Handles the room connection.",
            "since": "0.6.0"
        },
        "Self": {
            "name": "Self",
            "shortname": "Self",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/Room.js",
            "line": 404,
            "description": "Handles the self connection to the room.",
            "extends": "Room",
            "since": "0.6.0"
        },
        "Socket": {
            "name": "Socket",
            "shortname": "Socket",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/Socket.js",
            "line": 1,
            "description": "Handles the Socket connection.",
            "since": "0.6.0"
        },
        "Stream": {
            "name": "Stream",
            "shortname": "Stream",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/Stream.js",
            "line": 1,
            "description": "Handles the XMLHttpStream and API function calls.",
            "since": "0.6.0"
        },
        "User": {
            "name": "User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        }
    },
    "classitems": [
        {
            "file": "source/DataChannel.js",
            "line": 13,
            "description": "The datachannel label.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 23,
            "description": "The type of datachannel",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataMessage"
        },
        {
            "file": "source/DataChannel.js",
            "line": 33,
            "description": "The DataChannel object.",
            "itemtype": "attribute",
            "name": "RTCDataChannel",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 43,
            "description": "Binds events to RTCDataChannel object.",
            "itemtype": "method",
            "name": "bind",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 84,
            "description": "Handles the event when DataChannel is opened.",
            "itemtype": "method",
            "name": "onOpen",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 98,
            "description": "Handles the event when DataChannel is closed.",
            "itemtype": "method",
            "name": "onClose",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 112,
            "description": "Handles the event when DataChannel has an exception.",
            "itemtype": "method",
            "name": "onClose",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 127,
            "description": "Handles the event when DataChannel has a message received.",
            "itemtype": "method",
            "name": "onMessage",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/DataChannel.js",
            "line": 142,
            "description": "Sends data over the datachannel.",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "data",
                    "description": "The data to send.",
                    "type": "JSON|String"
                }
            ],
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "DataChannel"
        },
        {
            "file": "source/EventList.js",
            "line": 1,
            "description": "Stores the list of available events.",
            "itemtype": "attribute",
            "name": "Event",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 12,
            "description": "Event fired when the socket connection to the signaling\nserver is open.",
            "itemtype": "event",
            "name": "channelOpen",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 21,
            "description": "Event fired when the socket connection to the signaling\nserver has closed.",
            "itemtype": "event",
            "name": "channelClose",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 30,
            "description": "Event fired when the socket connection received a message\nfrom the signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 40,
            "description": "Event fired when the socket connection has occurred an error.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 49,
            "description": "Event fired when the socket re-tries to connection with fallback ports.",
            "itemtype": "event",
            "name": "channelRetry",
            "params": [
                {
                    "name": "fallbackType",
                    "description": "The type of fallback [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                },
                {
                    "name": "currentAttempt",
                    "description": "The current attempt of the fallback re-try attempt.",
                    "type": "Integer"
                }
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 59,
            "description": "Event fired when the socket connection failed connecting.\n- The difference between this and <b>channelError</b> is that\n  channelError triggers during the connection. This throws\n  when connection failed to be established.",
            "itemtype": "event",
            "name": "socketError",
            "params": [
                {
                    "name": "errorCode",
                    "description": "The error code.\n  [Rel: Skylink.SOCKET_ERROR]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The reconnection attempt or error object.",
                    "type": "Integer|String|Object"
                },
                {
                    "name": "fallbackType",
                    "description": "The type of fallback [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 74,
            "description": "Event fired whether the room is ready for use.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "[Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "status",
                            "description": "Http status when retrieving information.\n  May be empty for other errors.",
                            "type": "Integer"
                        },
                        {
                            "name": "content",
                            "description": "Error message.",
                            "type": "String"
                        },
                        {
                            "name": "errorCode",
                            "description": "Error code.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 89,
            "description": "Event fired when a peer's handshake progress has changed.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "step",
                    "description": "The handshake progress step.\n  [Rel: Skylink.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's handshake progress.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 101,
            "description": "Event fired when an ICE gathering state has changed.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The ice candidate generation state.\n  [Rel: Skylink.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice candidate\n   generation state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 113,
            "description": "Event fired when a peer Connection state has changed.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The peer connection state.\n  [Rel: Skylink.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection state\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 125,
            "description": "Event fired when a peer connection health has changed.",
            "itemtype": "event",
            "name": "peerConnectionHealth",
            "params": [
                {
                    "name": "health",
                    "description": "The peer connection health.\n  [Rel: Skylink.PEER_CONNECTION_HEALTH]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection health\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 136,
            "description": "Event fired when an ICE connection state has changed.",
            "iceconnectionstate": "",
            "params": [
                {
                    "name": "state",
                    "description": "The ice connection state.\n  [Rel: Skylink.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice connection state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 147,
            "description": "Event fired when webcam or microphone media access fails.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 156,
            "description": "Event fired when webcam or microphone media acces passes.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 165,
            "description": "Event fired when it's required to have audio or video access.",
            "itemtype": "event",
            "name": "mediaAccessRequired",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 173,
            "description": "Event fired when media access to MediaStream has stopped.",
            "itemtype": "event",
            "name": "mediaAccessStopped",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 181,
            "description": "Event fired when a peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 216,
            "description": "Event fired when a peer's connection is restarted.",
            "itemtype": "event",
            "name": "peerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is being restarted.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelfInitiateRestart",
                    "description": "Is it us who initiated the restart.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 250,
            "description": "Event fired when a peer information is updated.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had information updaed.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 285,
            "description": "Event fired when a peer leaves the room",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that left.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 320,
            "description": "Event fired when a peer joins the room",
            "itemtype": "event",
            "name": "presenceChanged",
            "params": [
                {
                    "name": "users",
                    "description": "The list of users",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "unsupported": "true",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 331,
            "description": "Event fired when a remote stream has become available.\n- This occurs after the user joins the room.\n- This is changed from <b>addPeerStream</b> event.\n- Note that <b>addPeerStream</b> is removed from the specs.\n- There has been a documentation error whereby the stream it is\n  supposed to be (stream, peerId, isSelf), but instead is received\n  as (peerId, stream, isSelf) in 0.5.0.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the stream.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 349,
            "description": "Event fired when a message being broadcasted is received.\n- This is changed from <b>chatMessageReceived</b>,\n  <b>privateMessage</b> and <b>publicMessage</b> event.\n- Note that <b>chatMessageReceived</b>, <b>privateMessage</b>\n  and <b>publicMessage</b> is removed from the specs.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "Message object that is received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "Data that is broadcasted.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender peer.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "PeerId that is specifically\n  targeted to receive the message.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "Is data received a private message.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is data received from a\n  data channel.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the sender peer.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 396,
            "description": "Event fired when connected to a room and the lock status has changed.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "Is the room locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is locking/unlocking\n  the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 433,
            "description": "Event fired when a peer's datachannel state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The datachannel state.\n  [Rel: Skylink.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of peer that has a datachannel\n  state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 445,
            "description": "Event fired when a data transfer state has changed.\n- Note that <u>transferInfo.data</u> sends the blob data, and\n  no longer a blob url.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The data transfer state.\n  [Rel: Skylink.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "TransferId of the data.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has a data\n  transfer state change.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "Data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "percentage",
                            "description": "The percetange of data being\n  uploaded / downloaded.",
                            "type": "JSON"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender.",
                            "type": "JSON"
                        },
                        {
                            "name": "data",
                            "description": "The blob data. See the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the blob to a download link.",
                            "type": "JSON"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "JSON"
                        },
                        {
                            "name": "size",
                            "description": "Data size.",
                            "type": "JSON"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "message",
                            "description": "Error message thrown.",
                            "type": "String"
                        },
                        {
                            "name": "transferType",
                            "description": "Is error from uploading or downloading.\n  [Rel: Skylink.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/EventList.js",
            "line": 473,
            "description": "Event fired when the signaling server warns the user.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The action that is required for\n  the user to follow. [Rel: Skylink.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The reason for the action.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The reason why the action is given.\n  [Rel: Skylink.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/Globals.js",
            "line": 3,
            "description": "Stores the preferences shared across classes.",
            "itemtype": "attribute",
            "name": "globals",
            "type": "JSON",
            "params": [
                {
                    "name": "apiKey",
                    "description": "The developer API Key.",
                    "type": "String"
                },
                {
                    "name": "region",
                    "description": "The regional server to connect to.",
                    "type": "String"
                },
                {
                    "name": "defaultRoom",
                    "description": "The default room that joinRoom should connect to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Log.js",
            "line": 19,
            "description": "The log key",
            "itemtype": "attribute",
            "name": "LogKey",
            "type": "String",
            "readonly": "",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Log.js",
            "line": 30,
            "description": "The current log level of Skylink.",
            "itemtype": "property",
            "name": "level",
            "type": "Integer",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Log.js",
            "line": 41,
            "description": "The flag that indicates if Skylink should store the debug logs.",
            "itemtype": "property",
            "name": "store",
            "type": "Boolean",
            "since": "0.5.4",
            "class": "Debugger"
        },
        {
            "file": "source/Peer.js",
            "line": 13,
            "description": "The peer id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 23,
            "description": "The peer type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 33,
            "description": "The local description type peer sends.",
            "itemtype": "attribute",
            "name": "SDPType",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 43,
            "description": "The PeerConnection constraints - iceServers.",
            "itemtype": "attribute",
            "name": "constraints",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 53,
            "description": "The local description to be set.",
            "itemtype": "attribute",
            "name": "localDescription",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 63,
            "description": "The remote description to be set.",
            "itemtype": "attribute",
            "name": "remoteDescription",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 73,
            "description": "The datachannels connected to PeerConnection.",
            "itemtype": "attribute",
            "name": "datachannels",
            "params": [
                {
                    "name": "<channelId>",
                    "description": "The datachannel connected to peer.",
                    "type": "DataChannel"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 84,
            "description": "The stream send from this peer.",
            "itemtype": "attribute",
            "name": "stream",
            "type": "Stream",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 94,
            "description": "The PeerConnection session description constraints.",
            "itemtype": "attribute",
            "name": "sdpConstraints",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 109,
            "description": "The PeerConnection session description configuration.",
            "itemtype": "attribute",
            "name": "sdpConfig",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 119,
            "description": "The PeerConnection configuration.",
            "itemtype": "attribute",
            "name": "config",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 133,
            "description": "The PeerConnection object.",
            "itemtype": "attribute",
            "name": "RTCPeerConnection",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 143,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 156,
            "description": "Function to subscribe to when peer's connection has been started.",
            "itemtype": "method",
            "name": "onconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 164,
            "description": "Function to subscribe to when peer's ice connection state changes.",
            "itemtype": "method",
            "name": "oniceconnectionstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 172,
            "description": "Function to subscribe to when peer's ice gathering state changes.",
            "itemtype": "method",
            "name": "onicegatheringstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 180,
            "description": "Function to subscribe to when peer's remote stream is received.",
            "itemtype": "method",
            "name": "onaddstream",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 188,
            "description": "Function to subscribe to when peer's signaling state has changed.",
            "itemtype": "method",
            "name": "onsignalingstatechange",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 196,
            "description": "Function to subscribe to when peer's connection has been restarted.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 204,
            "description": "Function to subscribe to when peer's connection has been restarted.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 212,
            "description": "Function to subscribe to when a peer connection been disconnected.",
            "itemtype": "method",
            "name": "onremoveconnection",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 222,
            "description": "Starts the peer connection.",
            "itemtype": "method",
            "name": "connect",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 251,
            "description": "Restarts the peer connection.",
            "itemtype": "method",
            "name": "reconnect",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 291,
            "description": "Stops the peer connection.",
            "itemtype": "method",
            "name": "disconnect",
            "access": "private",
            "tagname": "",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 306,
            "description": "Binds events to RTCPeerConnection object.",
            "itemtype": "method",
            "name": "bind",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 369,
            "description": "Creates an offer session description.",
            "itemtype": "method",
            "name": "createOffer",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 403,
            "description": "Creates an answer session description.",
            "itemtype": "method",
            "name": "createAnswer",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 432,
            "description": "Sets local description.",
            "itemtype": "method",
            "name": "setLocalDescription",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Peer.js",
            "line": 467,
            "description": "Sets remote description.",
            "itemtype": "method",
            "name": "setRemoteDescription",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 1,
            "description": "Stores the peer class events.",
            "itemtype": "attribute",
            "name": "PeerHandlerEvent",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 8,
            "description": "Handles stream events that will require the peer class to\ntrigger the listener.",
            "itemtype": "property",
            "name": "stream",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 17,
            "description": "Handles the remote stream stop trigger.",
            "itemtype": "property",
            "name": "stop",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 36,
            "description": "Handles the remote stream stop trigger.",
            "itemtype": "property",
            "name": "stop",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 50,
            "description": "Handles events that will require the peer class to\ntrigger peer class events.",
            "itemtype": "property",
            "name": "trigger",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 59,
            "description": "Handles the ice connection state trigger.",
            "itemtype": "property",
            "name": "iceconnectionstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 79,
            "description": "Handles the ice gathering state trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 99,
            "description": "Handles the ice candidate trigger.",
            "itemtype": "property",
            "name": "icecandidate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 125,
            "description": "Handles the signaling state trigger.",
            "itemtype": "property",
            "name": "signalingstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 145,
            "description": "Handles the datachannel state trigger.",
            "itemtype": "property",
            "name": "datachannel",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 165,
            "description": "Handles the stream trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 186,
            "description": "Handles the reconnect state trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 203,
            "description": "Handles the handshake state trigger.",
            "itemtype": "property",
            "name": "handshake",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 234,
            "description": "Handles the disconnected state trigger.",
            "itemtype": "property",
            "name": "mutestream",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 258,
            "description": "Handles the disconnected state trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/PeerHandler.js",
            "line": 277,
            "description": "Handles the peer class events.",
            "itemtype": "attribute",
            "name": "PeerHandler",
            "since": "0.6.0",
            "class": "Peer"
        },
        {
            "file": "source/Request.js",
            "line": 1,
            "description": "Handles the XMLHttpRequest and API function calls.",
            "itemtype": "attribute",
            "name": "Request",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 8,
            "description": "The api server.",
            "itemtype": "property",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 17,
            "description": "The flag to check if request should use XDomainRequest.",
            "itemtype": "property",
            "name": "isXDomainRequest",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 28,
            "description": "The protocol the request uses to connect to.",
            "itemtype": "property",
            "name": "protocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/Request.js",
            "line": 37,
            "description": "Starts the connection to the room.",
            "itemtype": "property",
            "name": "load",
            "type": "Function",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Request",
            "subprops": [
                {
                    "name": "callback",
                    "description": "The callback triggered once request has been completed.",
                    "type": "Function"
                }
            ]
        },
        {
            "file": "source/Room.js",
            "line": 13,
            "description": "The room name.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 23,
            "description": "The room id.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 33,
            "description": "The room token.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 43,
            "description": "The room key.",
            "itemtype": "attribute",
            "name": "key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 53,
            "description": "The room start date timestamp (ISO format) for persistent mode.",
            "itemtype": "attribute",
            "name": "startDateTime",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 63,
            "description": "The room duration for persistent mode.",
            "itemtype": "attribute",
            "name": "duration",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 73,
            "description": "The request path to the api server.",
            "itemtype": "attribute",
            "name": "path",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 83,
            "description": "The room api owner.",
            "itemtype": "attribute",
            "name": "owner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 93,
            "description": "The user set settings for the room.",
            "itemtype": "attribute",
            "name": "credentials",
            "params": [
                {
                    "name": "duration",
                    "description": "The room duration set by user.",
                    "type": "Integer"
                },
                {
                    "name": "hash",
                    "description": "The hashed secret generated by user.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The room start date timestamp (ISO format) set by user.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 106,
            "description": "The self user connection.",
            "itemtype": "attribute",
            "name": "self",
            "type": "Self",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 116,
            "description": "The user self custom user data.",
            "itemtype": "attribute",
            "name": "self",
            "type": "JSON|String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 126,
            "description": "The user self existing local stream connection.",
            "itemtype": "attribute",
            "name": "stream",
            "params": [
                {
                    "name": "<streamId>",
                    "description": "The stream connected to room.",
                    "type": "Stream"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 137,
            "description": "The list of users connected to room.",
            "itemtype": "attribute",
            "name": "users",
            "params": [
                {
                    "name": "<userId>",
                    "description": "The user connected to room.",
                    "type": "User"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 148,
            "description": "The list of components connected to room.\n- E.g. MCU, Recording",
            "itemtype": "attribute",
            "name": "user",
            "params": [
                {
                    "name": "n",
                    "description": "The user connected to room.",
                    "type": "User",
                    "optional": true,
                    "optdefault": "*"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 160,
            "description": "The room duration.",
            "itemtype": "attribute",
            "name": "startDateTime",
            "type": "Socket",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 171,
            "description": "The room readyState.",
            "itemtype": "attribute",
            "name": "readyState",
            "type": "Integer",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 182,
            "description": "The room TURN/STUN servers connection.",
            "itemtype": "attribute",
            "name": "iceServers",
            "params": [
                {
                    "name": "iceServers",
                    "description": "The list of ICE servers.",
                    "type": "Array"
                },
                {
                    "name": "<iceServers.n>",
                    "description": "The ICE server.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 195,
            "description": "The room locked state.",
            "itemtype": "attribute",
            "name": "locked",
            "type": "Boolean",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 206,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 219,
            "description": "Function to subscribe to when room ready state has changed.",
            "itemtype": "method",
            "name": "onreadystatechange",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 227,
            "description": "Function to subscribe to when self has joined the room.",
            "itemtype": "method",
            "name": "onjoin",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 235,
            "description": "Function to subscribe to when self has been kicked out of room.",
            "itemtype": "method",
            "name": "onlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 243,
            "description": "Function to subscribe to when self is warned by server.",
            "itemtype": "method",
            "name": "onunlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 251,
            "description": "Function to subscribe to when room has been locked.",
            "itemtype": "method",
            "name": "onlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 259,
            "description": "Function to subscribe to when room has been unlocked.",
            "itemtype": "method",
            "name": "onunlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 267,
            "description": "Function to subscribe to when self has leave the room.",
            "itemtype": "method",
            "name": "onleave",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 276,
            "description": "Starts the connection to the room.",
            "itemtype": "method",
            "name": "join",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 290,
            "description": "Stops the connection to the room.",
            "itemtype": "method",
            "name": "leave",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 301,
            "description": "Locks the Room.",
            "itemtype": "method",
            "name": "lock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 318,
            "description": "Unlocks the Room.",
            "itemtype": "method",
            "name": "unlock",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 335,
            "description": "Starts the handshake",
            "itemtype": "method",
            "name": "handshake",
            "params": [
                {
                    "name": "data",
                    "description": "The user information.",
                    "type": "JSON"
                }
            ],
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 360,
            "description": "Sends a another stream to users.",
            "itemtype": "method",
            "name": "addStreamConnection",
            "params": [
                {
                    "name": "stream",
                    "description": "The stream object.",
                    "type": "Stream"
                },
                {
                    "name": "targetUsers",
                    "description": "The list of targeted users.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Room.js",
            "line": 415,
            "description": "The self user id.",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 425,
            "description": "The self user data.",
            "itemtype": "attribute",
            "name": "data",
            "type": "String | JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 435,
            "description": "The self user username.",
            "itemtype": "attribute",
            "name": "username",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 445,
            "description": "The self user timestamp (ISO format).",
            "itemtype": "attribute",
            "name": "timeStamp",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 455,
            "description": "The self user credential.",
            "itemtype": "attribute",
            "name": "token",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 465,
            "description": "The self user local stream connection.",
            "itemtype": "attribute",
            "name": "stream",
            "params": [
                {
                    "name": "<connectionId>",
                    "description": "The stream connection to users.",
                    "type": "JSON"
                },
                {
                    "name": "<connectionId.targetUsers>",
                    "description": "The target users.",
                    "type": "Array"
                },
                {
                    "name": "<connectionId.stream>",
                    "description": "The stream connected to room.",
                    "type": "Stream"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 478,
            "description": "The self user browser agent information.",
            "itemtype": "attribute",
            "name": "agent",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 493,
            "description": "Function to subscribe to when self user custom user data is updated.",
            "itemtype": "method",
            "name": "onupdate",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 501,
            "description": "Function to subscribe to when self has added a stream connection.",
            "itemtype": "method",
            "name": "onaddstreamconnection",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 509,
            "description": "Function to subscribe to when self has stopped a stream connection.",
            "itemtype": "method",
            "name": "onaddstream",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 517,
            "description": "Function to subscribe to when self has been disconnected from the room.",
            "itemtype": "method",
            "name": "ondisconnect",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 526,
            "description": "Updates the self user data.",
            "itemtype": "method",
            "name": "update",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 548,
            "description": "Starts a new stream connection.",
            "itemtype": "method",
            "name": "addStreamConnection",
            "params": [
                {
                    "name": "stream",
                    "description": "The stream object.",
                    "type": "Stream"
                },
                {
                    "name": "The",
                    "description": "array or string \"main\".",
                    "type": "Array|String"
                }
            ],
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 575,
            "description": "Stops a stream connection.",
            "itemtype": "method",
            "name": "removeStreamConnection",
            "params": [
                {
                    "name": "connectionId",
                    "description": "The streaming connection id.",
                    "type": "String"
                }
            ],
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/Room.js",
            "line": 621,
            "description": "Gets the self user info.",
            "itemtype": "method",
            "name": "getInfo",
            "since": "0.6.0",
            "class": "Self"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 1,
            "description": "Stores the room class events.",
            "itemtype": "attribute",
            "name": "RoomHandlerEvent",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 89,
            "description": "Handles the ice gathering state trigger.",
            "itemtype": "property",
            "name": "icegatheringstate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 116,
            "description": "Handles the room class events.",
            "itemtype": "attribute",
            "name": "RoomHandler",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 134,
            "description": "Stores the room messaging events.",
            "itemtype": "attribute",
            "name": "MessageHandlerEvent",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 141,
            "description": "Self is in the room.",
            "itemtype": "property",
            "name": "inRoom",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 174,
            "description": "User has sent self an enter.",
            "itemtype": "property",
            "name": "enter",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 198,
            "description": "User has sent self an welcome.",
            "itemtype": "property",
            "name": "enter",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 209,
            "description": "A user has sent an offer to self.",
            "itemtype": "property",
            "name": "offer",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 222,
            "description": "A user has sent an answer to self.",
            "itemtype": "property",
            "name": "answer",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 235,
            "description": "A user has sent an ICE candidate to self.",
            "itemtype": "property",
            "name": "candidate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 248,
            "description": "A user has updated their own custom user data.",
            "itemtype": "property",
            "name": "updateUserEvent",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 261,
            "description": "An audio stream muted status has been updated.",
            "itemtype": "property",
            "name": "muteAudioEvent",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 276,
            "description": "A video stream muted status has been updated.",
            "itemtype": "property",
            "name": "muteVideoEvent",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 291,
            "description": "The room is lock status has been updated.",
            "itemtype": "property",
            "name": "roomLockEvent",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 313,
            "description": "The room is lock status has been updated.",
            "itemtype": "property",
            "name": "roomLockEvent",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 326,
            "description": "The self is redirected or warned.",
            "itemtype": "property",
            "name": "redirect",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 353,
            "description": "The a user or self is disconnected from room.",
            "itemtype": "property",
            "name": "bye",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/RoomHandler.js",
            "line": 368,
            "description": "Handles the room messaging events.",
            "itemtype": "attribute",
            "name": "MessageHandler",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/SDP.js",
            "line": 2,
            "description": "Finds a line in the sdp based on the condition provided",
            "itemtype": "property",
            "name": "SDP.find",
            "type": "Function",
            "return": {
                "description": "[index, line] The sdp line.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "The sdp in array.",
                    "type": "Array"
                },
                {
                    "name": "condition",
                    "description": "The beginning part of the sdp line. E.g. a=fmtp",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 29,
            "description": "Enables the stereo feature if OPUS is enabled.",
            "itemtype": "property",
            "name": "SDP.addStereo",
            "type": "Function",
            "return": {
                "description": "Updated version with Stereo feature",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 59,
            "description": "Sets the audio, video and DataChannel data bitrate in the sdp.\n- In low-environment cases, bandwidth is managed by the browsers\n  and the quality of the resolution or audio may change to suit.",
            "itemtype": "property",
            "name": "SDP.setBitrate",
            "type": "Function",
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 105,
            "description": "Set video stream resolution in the sdp.\n- As noted, this is not working.",
            "itemtype": "property",
            "name": "SDP.setResolution",
            "type": "Function",
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 129,
            "description": "Removes the H264 preference in sdp because other browsers does not support it yet.",
            "itemtype": "property",
            "name": "SDP.removeH264Support",
            "type": "Function",
            "return": {
                "description": "Updated version removing Firefox h264 pref support.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/SDP.js",
            "line": 149,
            "description": "Modifies a local session description with the configuration provided",
            "itemtype": "property",
            "name": "SDP.configure",
            "type": "Function",
            "return": {
                "description": "Updated local session description.",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/Socket.js",
            "line": 13,
            "description": "The signalling server.",
            "itemtype": "attribute",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 23,
            "description": "The signalling server protocol to connect with.",
            "itemtype": "attribute",
            "name": "protocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 33,
            "description": "The signalling server port to connect with.",
            "itemtype": "attribute",
            "name": "server",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 43,
            "description": "The timeout the Socket should wait for before throwing an error.",
            "itemtype": "attribute",
            "name": "timeout",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 53,
            "description": "The interval to wait before sending the next message.",
            "itemtype": "attribute",
            "name": "messageInterval",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 63,
            "description": "The queue of messages (throttle) before sending the next",
            "itemtype": "attribute",
            "name": "messageQueue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 73,
            "description": "The socket readyState.",
            "itemtype": "attribute",
            "name": "readyState",
            "type": "String",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 84,
            "description": "The list of available signalling server ports.",
            "itemtype": "attribute",
            "name": "ports",
            "params": [
                {
                    "name": "http:",
                    "description": "The list of Http ports.",
                    "type": "Array"
                },
                {
                    "name": "https:",
                    "description": "The list of Https ports.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 99,
            "description": "The socket configuratin.",
            "itemtype": "attribute",
            "name": "config",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 109,
            "description": "The type of socket connection.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 119,
            "description": "The Socket.io object.",
            "itemtype": "attribute",
            "name": "Socket",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 129,
            "description": "The responses attached to message events.",
            "itemtype": "attribute",
            "name": "responses",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 140,
            "description": "Function to subscribe to when socket has been connected.",
            "itemtype": "method",
            "name": "onconnect",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 148,
            "description": "Function to subscribe to when socket has been disconnected.",
            "itemtype": "method",
            "name": "ondisconnect",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Socket.js",
            "line": 156,
            "description": "Function to subscribe to when socket has connection error.",
            "itemtype": "method",
            "name": "onconnecterror",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Socket.js",
            "line": 164,
            "description": "Function to subscribe to when socket attempts to reconnect.",
            "itemtype": "method",
            "name": "onreconnect",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Socket.js",
            "line": 172,
            "description": "Function to subscribe to when socket has an exception.",
            "itemtype": "method",
            "name": "onerror",
            "since": "0.6.0",
            "class": "Room"
        },
        {
            "file": "source/Socket.js",
            "line": 181,
            "description": "Starts the connection to the signalling server",
            "itemtype": "method",
            "name": "connect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 198,
            "description": "Stops the connection to the Socket.",
            "itemtype": "method",
            "name": "disconnect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 210,
            "description": "Attaches a listener to a particular socket message event received.",
            "itemtype": "method",
            "name": "when",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 223,
            "description": "Sends a socket data.",
            "itemtype": "method",
            "name": "send",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 242,
            "description": "Handles the event when socket is connected to signaling.",
            "itemtype": "method",
            "name": "bindOnConnect",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 267,
            "description": "Handles the event when socket is disconnected to signaling.",
            "itemtype": "method",
            "name": "bindOnDisconnect",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 284,
            "description": "Handles the event when socket receives a message from signaling.",
            "itemtype": "method",
            "name": "bindOnMessage",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 311,
            "description": "Handles the event when socket have a connection error.",
            "itemtype": "method",
            "name": "bindOnConnectError",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 351,
            "description": "Handles the event when socket catches an exception.",
            "itemtype": "method",
            "name": "bindOnError",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 369,
            "description": "Responses to the attached socket message responses.",
            "itemtype": "method",
            "name": "respond",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 385,
            "description": "Restarts the connection to the Socket.",
            "itemtype": "method",
            "name": "reconnect",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 411,
            "description": "Creates a WebSocket connection in socket.io.",
            "itemtype": "method",
            "name": "WebSocket",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Socket.js",
            "line": 439,
            "description": "Creates a XHR Long-polling connection in socket.io.",
            "itemtype": "method",
            "name": "XHRPolling",
            "trigger": "peerJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Socket"
        },
        {
            "file": "source/Stream.js",
            "line": 13,
            "description": "The stream id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 23,
            "description": "The getUserMedia constraints.",
            "itemtype": "attribute",
            "name": "constraints",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 33,
            "description": "The streaming configuration.",
            "itemtype": "attribute",
            "name": "config",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 43,
            "description": "The stream source type.",
            "itemtype": "attribute",
            "name": "sourceType",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 53,
            "description": "The MediaStream object.",
            "itemtype": "attribute",
            "name": "MediaStream",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 63,
            "description": "The parent handler that redirects the stream object messages to.",
            "itemtype": "attribute",
            "name": "MediaStream",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 73,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/Stream.js",
            "line": 90,
            "description": "Function to subscribe to when stream has ended.",
            "itemtype": "method",
            "name": "onstreamended",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 98,
            "description": "Function to subscribe to when stream track has been ended.",
            "itemtype": "method",
            "name": "ontrackended",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 106,
            "description": "Function to subscribe to when stream track has been muted.",
            "itemtype": "method",
            "name": "ontrackmute",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 114,
            "description": "Function to subscribe to when stream track has been unmuted.",
            "itemtype": "method",
            "name": "ontrackunmute",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 123,
            "description": "Starts a MediaStream object connection with getUserMedia.",
            "itemtype": "method",
            "name": "start",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 140,
            "description": "Binds events to MediaStream object.",
            "itemtype": "method",
            "name": "bind",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 171,
            "description": "Binds events to MediaStreamTrack object.",
            "itemtype": "method",
            "name": "bind",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 228,
            "description": "Attaches the Stream object to a video element.",
            "itemtype": "method",
            "name": "attachElement",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 245,
            "description": "Handles the non-implemented firefox onended event for stream.",
            "itemtype": "method",
            "name": "bindOnStreamEnded",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 321,
            "description": "Mutes all audio MediaStreamTracks.",
            "itemtype": "method",
            "name": "muteAudio",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 349,
            "description": "Unmutes all audio MediaStreamTracks.",
            "itemtype": "method",
            "name": "unmuteAudio",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 377,
            "description": "Stops all audio MediaStreamTracks streaming.",
            "itemtype": "method",
            "name": "stopAudio",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 409,
            "description": "Mutes all video MediaStreamTracks.",
            "itemtype": "method",
            "name": "muteVideo",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 437,
            "description": "Unmutes all video MediaStreamTracks.",
            "itemtype": "method",
            "name": "unmuteVideo",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/Stream.js",
            "line": 465,
            "description": "Stops all video MediaStreamTracks streaming.",
            "itemtype": "method",
            "name": "stopVideo",
            "trigger": "StreamJoined, mediaAccessRequired",
            "since": "0.6.0",
            "class": "Stream"
        },
        {
            "file": "source/StreamParser.js",
            "line": 1,
            "description": "Handles the parsing of Stream / Bandwidth settings.",
            "itemtype": "attribute",
            "name": "StreamParser",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/StreamParser.js",
            "line": 8,
            "description": "Stores the default Stream / Bandwidth settings.",
            "itemtype": "property",
            "name": "defaultConfig",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "audio",
                    "description": "The default audio settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The default flag to indicate if stereo is enabled.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The default video settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The default video resolution.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The default video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "height",
                                    "description": "The default video resolution height.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The default video maximum framerate.",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The default bandwidth streaming settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The default audio bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "video",
                            "description": "The default video bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "data",
                            "description": "The default DataChannel data bandwidth bitrate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 44,
            "description": "Parses the audio configuration for the getUserMedia constraints.",
            "itemtype": "property",
            "name": "parseAudioConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The audio settings or flag if audio is enabled.",
                    "type": "JSON|Boolean",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag to indicate if stereo is enabled.",
                            "type": "Boolean"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 85,
            "description": "Parses the video configuration for the getUserMedia constraints.",
            "itemtype": "property",
            "name": "parseVideoConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The video settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The video resolution.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The video resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "height",
                                    "description": "The video resolution height.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The video maximum framerate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 162,
            "description": "Parses the bandwidth configuration.\n- In low-bandwidth environment, it's mostly managed by the browser.\n  However, this option enables you to set low bandwidth for high-bandwidth\n  environment whichever way is possible.",
            "itemtype": "property",
            "name": "parseBandwidthConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The bandwidth streaming settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The audio bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "video",
                            "description": "The video bandwidth bitrate.",
                            "type": "Integer"
                        },
                        {
                            "name": "data",
                            "description": "The DataChannel data bandwidth bitrate.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamParser.js",
            "line": 198,
            "description": "Parses the stream muted configuration.",
            "itemtype": "property",
            "name": "parseMutedConfig",
            "type": "Function",
            "return": {
                "description": "- options: The configuration.\n- userMedia: The getUserMedia constraints.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "options",
                    "description": "The stream muted settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audioMuted",
                            "description": "The flag to indicate if audio stream is muted.",
                            "type": "Integer"
                        },
                        {
                            "name": "videoMuted",
                            "description": "The flag to indicate if video stream is muted.",
                            "type": "Integer"
                        }
                    ]
                }
            ]
        },
        {
            "file": "source/StreamTrackList.js",
            "line": 1,
            "description": "Stores the list of available StreamTrackList.\n- This is not supported in Firefox yet, but you can select the tracklist\n  in Firefox when getUserMedia is invoked.",
            "itemtype": "attribute",
            "name": "StreamTrackList",
            "return": {
                "description": "Returns an array of audio and video tracks.\n- audio: The audio track list.\n- video: The video track list.",
                "type": "JSON"
            },
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/User.js",
            "line": 7,
            "description": "The user id.",
            "itemtype": "attribute",
            "name": "id",
            "type": "String",
            "readonly": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 17,
            "description": "The user type.",
            "itemtype": "attribute",
            "name": "type",
            "type": "String",
            "readonly": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 27,
            "description": "Stores the user data.",
            "itemtype": "attribute",
            "name": "data",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 37,
            "description": "Stores the browser agent information.",
            "itemtype": "attribute",
            "name": "agent",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 47,
            "description": "Stores the bandwidth configuration.",
            "itemtype": "attribute",
            "name": "bandwidth",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 57,
            "description": "Stores the list of peer connections to user.",
            "itemtype": "attribute",
            "name": "peers",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 67,
            "description": "The handler that manages all triggers or relaying events.",
            "itemtype": "attribute",
            "name": "handler",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 80,
            "description": "Function to subscribe to when user's custom data is updated.",
            "itemtype": "method",
            "name": "onupdate",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 88,
            "description": "Function to subscribe to when user is disconnected from the room.",
            "itemtype": "method",
            "name": "ondisconnect",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 96,
            "description": "Function to subscribe to when a new peer connection is established to user.",
            "itemtype": "method",
            "name": "onaddconnection",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 104,
            "description": "Function to subscribe to when a peer connection to user has added.",
            "itemtype": "method",
            "name": "onremoveconnection",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 112,
            "description": "Function to subscribe to when a new data transfer request is initialized from user.",
            "itemtype": "method",
            "name": "ondatarequest",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 120,
            "description": "Function to subscribe to when a new data is received after transfer is completed from user.",
            "itemtype": "method",
            "name": "ondata",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 128,
            "description": "Function to subscribe to when a new message is received from user.",
            "itemtype": "method",
            "name": "ondatatransfer",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 137,
            "description": "Starts a new peer connection to user.",
            "itemtype": "method",
            "name": "addConnection",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 172,
            "description": "Stops a peer connection to user.",
            "itemtype": "method",
            "name": "addConnection",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 182,
            "description": "Disconnects this user connection.",
            "itemtype": "method",
            "name": "disconnect",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/User.js",
            "line": 194,
            "description": "Gets this user information.",
            "itemtype": "method",
            "name": "getInfo",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 1,
            "description": "Stores the user class events.",
            "itemtype": "attribute",
            "name": "UserHandlerEvent",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 8,
            "description": "Handles stream events that will require the user class to\ntrigger the listener.",
            "itemtype": "property",
            "name": "peer",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 17,
            "description": "Handles the event when peer is connected.",
            "itemtype": "property",
            "name": "connect",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 36,
            "description": "Handles the event when peer is disconnected.",
            "itemtype": "property",
            "name": "disconnect",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 54,
            "description": "Handles transfer events that will require the user class to\ntrigger the listener.",
            "itemtype": "property",
            "name": "transfer",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 63,
            "description": "Handles the event when transfer is completed.",
            "itemtype": "property",
            "name": "complete",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 81,
            "description": "Handles the event when a request transfer is received.",
            "itemtype": "property",
            "name": "request",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 100,
            "description": "Handles events that will require the user class to\ntrigger user class events.",
            "itemtype": "property",
            "name": "trigger",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 109,
            "description": "Handles the update user data trigger.",
            "itemtype": "property",
            "name": "update",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 129,
            "description": "Handles the incoming message trigger.",
            "itemtype": "property",
            "name": "message",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 147,
            "description": "Handles the handshake trigger.",
            "itemtype": "property",
            "name": "handshake",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 193,
            "description": "Handles the candidate trigger.",
            "itemtype": "property",
            "name": "candidate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 217,
            "description": "Handles the mute stream trigger.",
            "itemtype": "property",
            "name": "mutestream",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 230,
            "description": "Handles the peer connection restart trigger.",
            "itemtype": "property",
            "name": "restart",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "User"
        },
        {
            "file": "source/UserHandler.js",
            "line": 245,
            "description": "Handles the user class events.",
            "itemtype": "attribute",
            "name": "UserHandler",
            "since": "0.6.0",
            "class": "User"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:43"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:84"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:98"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:112"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:127"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/DataChannel.js:142"
        },
        {
            "message": "unknown tag: iceconnectionstate",
            "line": " source/EventList.js:136"
        },
        {
            "message": "unknown tag: unsupported",
            "line": " source/EventList.js:320"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:291"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:306"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:369"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Peer.js:403"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Request.js:37"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Room.js:276"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Room.js:290"
        },
        {
            "message": "replacing incorrect tag: extend with extends",
            "line": " source/Room.js:404"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:181"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:198"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:210"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:223"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:284"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:369"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:385"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:411"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Socket.js:439"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:123"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:140"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:171"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:228"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:245"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:321"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:349"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:377"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:409"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:437"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/Stream.js:465"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " source/StreamTrackList.js:1"
        },
        {
            "message": "Missing item type\nEvent fired when an ICE connection state has changed.",
            "line": " source/EventList.js:136"
        }
    ]
}