{
    "project": {
        "name": "skywayjs",
        "description": "WebRTC real-time video conversation library",
        "version": "0.5.2",
        "url": "https://www.temasys.com.sg/"
    },
    "files": {
        "source/skyway.js": {
            "name": "source/skyway.js",
            "modules": {},
            "classes": {
                "Skyway": 1
            },
            "fors": {
                "Skyway": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Skyway": {
            "name": "Skyway",
            "shortname": "Skyway",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/skyway.js",
            "line": 5,
            "description": "Please check on the {{#crossLink \"Skyway/init:method\"}}init(){{/crossLink}}\nfunction on how you can initialize Skyway. Note that:\n- You will have to subscribe all Skyway events first before calling\n  {{#crossLink \"Skyway/init:method\"}}init(){{/crossLink}}.\n- If you need an api key, please [register an api key](http://\n  developer.temasys.com.sg) at our developer console.",
            "is_constructor": 1,
            "example": [
                "\n  // Getting started on how to use Skyway\n  var SkywayDemo = new Skyway();\n  SkywayDemo.init('apiKey');\n\n  SkywayDemo.joinRoom('my_room', {\n    userData: 'My Username',\n    audio: true,\n    video: true\n  });\n\n  SkywayDemo.on('incomingStream', function (peerId, stream, isSelf) {\n    if (isSelf) {\n      attachMediaStream(document.getElementById('selfVideo'), stream);\n    } else {\n      var peerVideo = document.createElement('video');\n      peerVideo.id = peerId;\n      peerVideo.autoplay = 'autoplay';\n      document.getElementById('peersVideo').appendChild(peerVideo);\n      attachMediaStream(peerVideo, stream);\n    }\n  });\n\n  SkywayDemo.on('peerLeft', function (peerId, peerInfo, isSelf) {\n    if (isSelf) {\n      document.getElementById('selfVideo').src = '';\n    } else {\n      var peerVideo = document.getElementById(peerId);\n      document.getElementById('peersVideo').removeChild(peerVideo);\n    }\n  });"
            ],
            "since": "0.5.0"
        }
    },
    "classitems": [
        {
            "file": "source/skyway.js",
            "line": 52,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 53,
            "description": "Version of Skyway",
            "itemtype": "attribute",
            "name": "VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 62,
            "description": "The log levels.\n- Logs are shown based on the level, if the level is highest, it shows logs\n  which level are lower than theirs. If the level is lower, it shows only\n  logs that are lower or are the same level, not the higher ones.\n- Order from lowest to the highest is: error > warn > info > log > debug.",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "DEBUG",
                    "description": "Level 5. Shows debug logs.",
                    "type": "String"
                },
                {
                    "name": "TRACE",
                    "description": "Level 4. Shows trace logs.",
                    "type": "String"
                },
                {
                    "name": "INFO",
                    "description": "Level 3. Show informational logs related to user.",
                    "type": "String"
                },
                {
                    "name": "WARN",
                    "description": "Level 2. Shows warnings.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Level 1. Shows the errors that are thrown during\n  execution.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 87,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 88,
            "description": "The fixed size for each data chunk.",
            "itemtype": "attribute",
            "name": "_CHUNK_FILE_SIZE",
            "type": "Integer",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 100,
            "description": "The fixed for each data chunk for firefox implementation.\n- Firefox the sender chunks 49152 but receives as 16384.",
            "itemtype": "attribute",
            "name": "_MOZ_CHUNK_FILE_SIZE",
            "type": "Integer",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 113,
            "description": "The list of signaling message types.\n- These are the list of available signaling message types expected to\n  be received.\n- These message types are fixed.\n- The available message types are:",
            "itemtype": "attribute",
            "name": "_SIG_MESSAGE_TYPE",
            "type": "JSON",
            "readonly": "",
            "params": [
                {
                    "name": "JOIN_ROOM\n-",
                    "description": "Send: User request to join the room.",
                    "type": "String"
                },
                {
                    "name": "IN_ROOM\n-",
                    "description": "Received: Response from server that user has joined the room.",
                    "type": "String"
                },
                {
                    "name": "ENTER\n-",
                    "description": "Send: Broadcast message to inform other connected peers in the room\n  that the user is the new peer joining the room.\n- Received: A peer has just joined the room.\n  To send a welcome message.",
                    "type": "String"
                },
                {
                    "name": "WELCOME\n-",
                    "description": "Send: Respond to user to request peer to create the offer.\n- Received: Response from peer that peer acknowledges the user has\n  joined the room. To send and create an offer message.",
                    "type": "String"
                },
                {
                    "name": "OFFER\n-",
                    "description": "Send: Respond to peer's request to create an offer.\n- Received: Response from peer's offer message. User to create and\n  send an answer message.",
                    "type": "String"
                },
                {
                    "name": "ANSWER\n-",
                    "description": "Send: Response to peer's offer message.\n- Received: Response from peer's answer message.\n  Connection is established.",
                    "type": "String"
                },
                {
                    "name": "CANDIDATE\n-",
                    "description": "Send: User to send the ICE candidate after onicecandidate is called.\n- Received: User to add peer's ice candidate in addIceCandidate.",
                    "type": "String"
                },
                {
                    "name": "BYE\n-",
                    "description": "Received: Peer has left the room.",
                    "type": "String"
                },
                {
                    "name": "REDIRECT\n-",
                    "description": "Received: Server warning to user.",
                    "type": "String"
                },
                {
                    "name": "ERROR\n-",
                    "description": "Received: Deprecated. Server error occurred.",
                    "type": "String"
                },
                {
                    "name": "UPDATE_USER\n-",
                    "description": "Send: User's custom data is updated and to inform other peers\n  of updated custom data.\n- Received: Peer's user custom data has changed.",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCK\n-",
                    "description": "Send: Room lock action has changed and to inform other peers\n  of updated room lock status.\n- Received: Room lock status has changed.",
                    "type": "String"
                },
                {
                    "name": "MUTE_VIDEO\n-",
                    "description": "Send: User has muted video and to inform other peers\n  of updated muted video stream status.\n- Received: Peer muted video status has changed.",
                    "type": "String"
                },
                {
                    "name": "MUTE_AUDIO\n-",
                    "description": "Send: User has muted audio and to inform other peers\n  of updated muted audio stream status.\n- Received: Peer muted audio status has changed.",
                    "type": "String"
                },
                {
                    "name": "PUBLIC_MESSAGE\n-",
                    "description": "Send: User sends a broadcast message to all peers.\n- Received: User receives a peer's broadcast message.",
                    "type": "String"
                },
                {
                    "name": "PRIVATE_MESSAGE\n-",
                    "description": "Send: User sends a private message to a peer.\n- Received: User receives a private message from a peer.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 197,
            "description": "The list of datachannel message types.\n- These are the list of available datachannel message types expected to\n  be received.\n- These message types are fixed.\n- The available message types are:",
            "itemtype": "attribute",
            "name": "_DC_PROTOCOL_TYPE",
            "type": "JSON",
            "readonly": "",
            "params": [
                {
                    "name": "WRQ\n-",
                    "description": "Send: User request to transfer a data.\n- Received: A peer has requested to transfer a data.",
                    "type": "String"
                },
                {
                    "name": "ACK\n-",
                    "description": "Send: User response to data transfer request.\n- Received: Response from peer towards data transfer.\n  - -1: Peer has rejected data transfer request.\n  - 0: Peer has accepted data transfer request.\n  - >0: Data transfer is going on.",
                    "type": "String"
                },
                {
                    "name": "CANCEL\n-",
                    "description": "Send: User canceled data transfer.\n- Received: A peer has canceled data transfer.",
                    "type": "String"
                },
                {
                    "name": "ERROR\n-",
                    "description": "Send: Timeout waiting for peer response has exceeded limit.\n- Received: Response from peer that timeout has reached its limit.\n  Data transfer has failed.",
                    "type": "String"
                },
                {
                    "name": "MESSAGE\n-",
                    "description": "Send: User sends a P2P message.\n- Received: A peer has sent a P2P message.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 237,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 238,
            "description": "The list of available regional servers.\n- This is for developers to set the nearest region server\n  for Skyway to connect to for faster connectivity.\n- The available regional servers are:",
            "itemtype": "attribute",
            "name": "REGIONAL_SERVER",
            "type": "JSON",
            "params": [
                {
                    "name": "APAC1",
                    "description": "Asia pacific server 1.",
                    "type": "String"
                },
                {
                    "name": "US1",
                    "description": "server 1.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 255,
            "description": "The list of ICE connection states.\n- Check out the [w3 specification documentation](http://dev.w3.org/2011/\n  webrtc/editor/webrtc.html#rtciceconnectionstate-enum).\n- This is the RTCIceConnection state of the peer.\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "ICE_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STARTING",
                    "description": "The ICE agent is gathering addresses\n  and/or waiting for remote candidates to be supplied.",
                    "type": "String"
                },
                {
                    "name": "CHECKING",
                    "description": "The ICE agent has received remote candidates\n  on at least one component, and is checking candidate pairs but has\n  not yet found a connection. In addition to checking, it may also\n  still be gathering.",
                    "type": "String"
                },
                {
                    "name": "CONNECTED",
                    "description": "The ICE agent has found a usable connection\n  for all components but is still checking other candidate pairs to see\n  if there is a better connection. It may also still be gathering.",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "The ICE agent has finished gathering and\n  checking and found a connection for all components.",
                    "type": "String"
                },
                {
                    "name": "FAILED",
                    "description": "The ICE agent is finished checking all\n  candidate pairs and failed to find a connection for at least one\n  component.",
                    "type": "String"
                },
                {
                    "name": "DISCONNECTED",
                    "description": "Liveness checks have failed for one or\n  more components. This is more aggressive than \"failed\", and may\n  trigger intermittently (and resolve itself without action) on\n  a flaky network.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "The ICE agent has shut down and is no\n  longer responding to STUN requests.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 296,
            "description": "The list of peer connection states.\n- Check out the [w3 specification documentation](http://dev.w3.org/2011/\n  webrtc/editor/webrtc.html#rtcpeerstate-enum).\n- This is the RTCSignalingState of the peer.\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STABLE",
                    "description": "There is no offer/answer exchange in progress.\n  This is also the initial state in which case the local and remote\n  descriptions are empty.",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_OFFER",
                    "description": "A local description, of type \"offer\",\n  has been successfully applied.",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_OFFER",
                    "description": "A remote description, of type \"offer\",\n  has been successfully applied.",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_PRANSWER",
                    "description": "A remote description of type \"offer\"\n  has been successfully applied and a local description of type \"pranswer\"\n  has been successfully applied.",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_PRANSWER",
                    "description": "A local description of type \"offer\"\n  has been successfully applied and a remote description of type\n  \"pranswer\" has been successfully applied.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "The connection is closed.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 330,
            "description": "The list of ICE candidate generation states.\n- Check out the [w3 specification documentation](http://dev.w3.org/2011/\n  webrtc/editor/webrtc.html#rtcicegatheringstate-enum).\n- This is RTCIceGatheringState of the peer.\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "CANDIDATE_GENERATION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "NEW",
                    "description": "The object was just created, and no networking\n  has occurred yet.",
                    "type": "String"
                },
                {
                    "name": "GATHERING",
                    "description": "The ICE engine is in the process of gathering\n  candidates for this RTCPeerConnection.",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "The ICE engine has completed gathering. Events\n  such as adding a new interface or a new TURN server will cause the\n  state to go back to gathering.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 354,
            "description": "The list of handshake progress steps.\n- This are the list of steps for the Skyway peer connection.\n- The steps that would occur are:",
            "type": "JSON",
            "itemtype": "attribute",
            "name": "HANDSHAKE_PROGRESS",
            "params": [
                {
                    "name": "ENTER",
                    "description": "Step 1. Received \"enter\" from peer.",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "Step 2. Received \"welcome\" from peer.",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "Step 3. Received \"offer\" from peer.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "Step 4. Received \"answer\" from peer.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Error state.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 376,
            "description": "The list of datachannel states.\n- Check out the [w3 specification documentation](http://dev.w3.org/2011/\n  webrtc/editor/webrtc.html#idl-def-RTCDataChannelState).\n- This is the RTCDataChannelState of the peer.\n- <u>ERROR</u> is an additional implemented state by Skyway\n  for further error tracking.\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "CONNECTING",
                    "description": "The user agent is attempting to establish\n  the underlying data transport. This is the initial state of a\n  RTCDataChannel object created with createDataChannel().",
                    "type": "String"
                },
                {
                    "name": "OPEN",
                    "description": "The underlying data transport is established\n  and communication is possible. This is the initial state of a\n  RTCDataChannel object dispatched as a part of a RTCDataChannelEvent.",
                    "type": "String"
                },
                {
                    "name": "CLOSING",
                    "description": "The procedure to close down the underlying\n  data transport has started.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "The underlying data transport has been closed\n  or could not be established.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Datachannel has occurred an error.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 408,
            "description": "The list of api server data retrieval state.\n- These are the states to inform the state of retrieving the\n  information from the api server required to start the peer\n  connection or if the browser is eligible to start the peer connection.\n- This is the first event that would fired, because Skyway would retrieve\n  information from the api server that is required to start the connection.\n- Once the state is <u>COMPLETED</u>, Skyway is ready to start the call.\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE",
            "type": "JSON",
            "params": [
                {
                    "name": "INIT",
                    "description": "Skyway has just started. No information are\n  retrieved yet.",
                    "type": "Integer"
                },
                {
                    "name": "LOADING",
                    "description": "Skyway is starting the retrieval of the\n  connection information.",
                    "type": "Integer"
                },
                {
                    "name": "COMPLETED",
                    "description": "Skyway has completed retrieving the\n  connection.",
                    "type": "Integer"
                },
                {
                    "name": "ERROR",
                    "description": "Skyway has occurred an error when\n  retrieving the connection information.",
                    "type": "Integer"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 437,
            "description": "The list of ready state change errors.\n- These are the error states from the error object error code.\n- <b>ROOM_LOCKED</b> is deprecated in 0.5.2. Please use\n  {{#crossLink \"Skyway/:attr\"}}leaveRoom(){{/crossLink}}\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "API_INVALID",
                    "description": "Api Key provided does not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_DOMAIN_NOT_MATCH",
                    "description": "Api Key used in domain does\n  not match.",
                    "type": "Integer"
                },
                {
                    "name": "API_CORS_DOMAIN_NOT_MATCH",
                    "description": "Api Key used in CORS\n  domain does not match.",
                    "type": "Integer"
                },
                {
                    "name": "API_CREDENTIALS_INVALID",
                    "description": "Api Key credentials does\n  not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_CREDENTIALS_NOT_MATCH",
                    "description": "Api Key credentials does not\n  match what is expected.",
                    "type": "Integer"
                },
                {
                    "name": "API_INVALID_PARENT_KEY",
                    "description": "Api Key does not have a parent\n  key nor is a root key.",
                    "type": "Integer"
                },
                {
                    "name": "API_NOT_ENOUGH_CREDIT",
                    "description": "Api Key does not have enough\n  credits to use.",
                    "type": "Integer"
                },
                {
                    "name": "API_NOT_ENOUGH_PREPAID_CREDIT",
                    "description": "Api Key does not have\n  enough prepaid credits to use.",
                    "type": "Integer"
                },
                {
                    "name": "API_FAILED_FINDING_PREPAID_CREDIT",
                    "description": "Api Key preapid\n  payments does not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_NO_MEETING_RECORD_FOUND",
                    "description": "Api Key does not have a\n  meeting record at this timing. This occurs when Api Key is a\n  static one.",
                    "type": "Integer"
                },
                {
                    "name": "ROOM_LOCKED",
                    "description": "Room is locked.",
                    "type": "Integer"
                },
                {
                    "name": "NO_SOCKET_IO",
                    "description": "No socket.io dependency is loaded to use.",
                    "type": "Integer"
                },
                {
                    "name": "NO_XMLHTTPREQUEST_SUPPORT",
                    "description": "Browser does not support\n  XMLHttpRequest to use.",
                    "type": "Integer"
                },
                {
                    "name": "NO_WEBRTC_SUPPORT",
                    "description": "Browser does not have WebRTC support.",
                    "type": "Integer"
                },
                {
                    "name": "NO_PATH",
                    "description": "No path is loaded yet.",
                    "type": "Integer"
                },
                {
                    "name": "INVALID_XMLHTTPREQUEST_STATUS",
                    "description": "Invalid XMLHttpRequest\n  when retrieving information.",
                    "type": "Integer"
                }
            ],
            "readonly": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 496,
            "description": "The list of recommended video resolutions.\n- Note that the higher the resolution, the connectivity speed might\n  be affected.\n- The available video resolutions type are:",
            "params": [
                {
                    "name": "QVGA",
                    "description": "QVGA video resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "320",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "180",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "VGA",
                    "description": "VGA video resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "640",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "360",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "HD",
                    "description": "HD video quality",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1280",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "720",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "FHD",
                    "description": "Might not be supported. Full HD video resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1920",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "1080",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "itemtype": "attribute",
            "name": "VIDEO_RESOLUTION",
            "type": "JSON",
            "readonly": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 537,
            "description": "The list of datachannel transfer types.\n- This is used to identify if the stream is an upload stream or\n  a download stream.\n- The available types are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD",
                    "description": "The datachannel transfer is an upload stream.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD",
                    "description": "The datachannel transfer is a download stream.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 553,
            "description": "The list of datachannel transfer state.\n- These are the states to inform the state of the data transfer.\n- The list of states would occur are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD_REQUEST",
                    "description": "Peer has a data transfer request.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_STARTED",
                    "description": "Data transfer of upload has just started.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_STARTED",
                    "description": "Data transfer of download has\n  just started.",
                    "type": "String"
                },
                {
                    "name": "UPLOADING",
                    "description": "Data upload transfer is occurring.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOADING",
                    "description": "Data download transfer is occurring.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_COMPLETED",
                    "description": "Data upload transfer has been completed.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_COMPLETED",
                    "description": "Data download transfer has been\n  completed.",
                    "type": "String"
                },
                {
                    "name": "REJECTED",
                    "description": "Peer rejected user's data transfer request.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Data transfer had an error occurred\n  when uploading or downloading file.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 587,
            "description": "The list of data transfer data types.\n- <b><i>TODO</i></b>: ArrayBuffer and Blob data transfer in\n  datachannel.\n- The available data transfer data types are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_DATA_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "BINARY_STRING",
                    "description": "BinaryString data type.",
                    "type": "String"
                },
                {
                    "name": "ARRAY_BUFFER",
                    "description": "Still-implementing. ArrayBuffer data type.",
                    "type": "String"
                },
                {
                    "name": "BLOB",
                    "description": "Still-implementing. Blob data type.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 606,
            "description": "The list of signaling actions received.\n- These are usually received from the signaling server to warn the user.\n- The system action outcomes are:",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION",
            "type": "JSON",
            "params": [
                {
                    "name": "WARNING",
                    "description": "Server is warning user to take actions.",
                    "type": "String"
                },
                {
                    "name": "REJECT",
                    "description": "Server has rejected user from room.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 622,
            "description": "The list of signaling actions received.\n- These are usually received from the signaling server to warn the user.\n- The system action outcomes are:",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION_REASON",
            "type": "JSON",
            "params": [
                {
                    "name": "FAST_MESSAGE",
                    "description": "User sends quick messages\n  less than a second resulting in a warning. Continuous\n  quick messages results in user being kicked out of the room.",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCKED",
                    "description": "Room is locked and user is locked\n  from joining the room.",
                    "type": "String"
                },
                {
                    "name": "ROOM_FULL",
                    "description": "Persistent meeting. Room is full.",
                    "type": "String"
                },
                {
                    "name": "DUPLICATED_LOGIN",
                    "description": "User has same id",
                    "type": "String"
                },
                {
                    "name": "SERVER_ERROR",
                    "description": "Server has an error",
                    "type": "String"
                },
                {
                    "name": "VERIFICATION",
                    "description": "Verification for roomID",
                    "type": "String"
                },
                {
                    "name": "EXPIRED",
                    "description": "Persistent meeting. Room has\n  expired and user is unable to join the room.",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSED",
                    "description": "Persistent meeting. Room\n  has expired and is closed, user to leave the room.",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSING",
                    "description": "Persistent meeting.\n  Room is closing soon.",
                    "type": "String"
                },
                {
                    "name": "OVER_SEAT_LIMIT",
                    "description": "Seat limit is hit. API Key\n  do not have sufficient seats to continue.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 661,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 662,
            "description": "The log level of Skyway",
            "itemtype": "attribute",
            "name": "_logLevel",
            "type": "String",
            "default": "'warn'",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 673,
            "description": "The path that user is currently connect to.\n- NOTE ALEX: check if last char is '/'",
            "itemtype": "attribute",
            "name": "_path",
            "type": "String",
            "default": "_serverPath",
            "final": 1,
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 686,
            "description": "The regional server that Skyway connects to.",
            "itemtype": "attribute",
            "name": "_serverRegion",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 695,
            "description": "The server that user connects to to make\napi calls to.\n- The reason why users can input this value is to give\n  users the chance to connect to any of our beta servers\n  if available instead of the stable version.",
            "itemtype": "attribute",
            "name": "_roomServer",
            "type": "String",
            "default": "'//api.temasys.com.sg'",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 709,
            "description": "The API Key ID.",
            "itemtype": "attribute",
            "name": "_apiKey",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 718,
            "description": "The default room that the user connects to if no room is provided in\n{{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_defaultRoom",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 728,
            "description": "The room that the user is currently connected to.",
            "itemtype": "attribute",
            "name": "_selectedRoom",
            "type": "String",
            "default": "_defaultRoom",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 738,
            "description": "The static room's meeting starting date and time.\n- The value is in ISO formatted string.",
            "itemtype": "attribute",
            "name": "_roomStart",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 749,
            "description": "The static room's meeting duration.",
            "itemtype": "attribute",
            "name": "_roomDuration",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 759,
            "description": "The credentials required to set the start date and time\nand the duration.",
            "itemtype": "attribute",
            "name": "_roomCredentials",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 770,
            "description": "The current state if ICE trickle is enabled.",
            "itemtype": "attribute",
            "name": "_enableIceTrickle",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 781,
            "description": "The current state if datachannel is enabled.",
            "itemtype": "attribute",
            "name": "_enableDataChannel",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 792,
            "description": "The current state if debugging mode is enabled.",
            "itemtype": "attribute",
            "name": "_enableDebugMode",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 803,
            "description": "The user stream settings.\n- By default, all is false.",
            "itemtype": "attribute",
            "name": "_streamSettings",
            "type": "JSON",
            "default": "{\n  'audio' : false,\n  'video' : false\n}",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 820,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 822,
            "description": "The current Skyway ready state change.\n[Rel: Skyway.READY_STATE_CHANGE]",
            "itemtype": "attribute",
            "name": "_readyState",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 833,
            "description": "The current socket opened state.",
            "itemtype": "attribute",
            "name": "_channelOpen",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 843,
            "description": "The current state if room is locked.",
            "itemtype": "attribute",
            "name": "_roomLocked",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 853,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 854,
            "description": "The received server key.",
            "itemtype": "attribute",
            "name": "_key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 863,
            "description": "The owner's username of the apiKey.",
            "itemtype": "attribute",
            "name": "_apiKeyOwner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 872,
            "description": "The signaling server to connect to.",
            "itemtype": "attribute",
            "name": "_signalingServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 881,
            "description": "The signaling server port to connect to.",
            "itemtype": "attribute",
            "name": "_signalingServerPort",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 890,
            "description": "The actual socket object that handles the connection.",
            "itemtype": "attribute",
            "name": "_socket",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 900,
            "description": "User information, credential and the local stream(s).",
            "itemtype": "attribute",
            "name": "_user",
            "type": "JSON",
            "params": [
                {
                    "name": "uid",
                    "description": "The user's session id.",
                    "type": "String"
                },
                {
                    "name": "sid",
                    "description": "The user's secret id. This is the id used as the peerId.",
                    "type": "String"
                },
                {
                    "name": "timestamp",
                    "description": "The user's timestamp.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The user's access token.",
                    "type": "String"
                },
                {
                    "name": "streams",
                    "description": "The array of user's MediaStream(s).",
                    "type": "Array"
                },
                {
                    "name": "info",
                    "description": "The user's peer information object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "User stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "User audio settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "User has enabled stereo or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "User video settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "User video\n  resolution set. [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "Bolean|JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "User video\n  resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "User video\n  resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "User video minimum\n  frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "User MediaStream(s) status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "Is user's audio muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "Is user's vide muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "User's custom data set.",
                            "type": "String|JSON"
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 932,
            "description": "The room connection information.",
            "itemtype": "attribute",
            "name": "_room",
            "type": "JSON",
            "params": [
                {
                    "name": "id",
                    "description": "The roomId of the room user is connected to.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The token of the room user is connected to.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The startDateTime in ISO string format of the room.",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "The duration of the room.",
                    "type": "String"
                },
                {
                    "name": "connection",
                    "description": "Connection constraints and configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "peerConstraints",
                            "description": "The peerconnection constraints.",
                            "type": "JSON"
                        },
                        {
                            "name": "peerConfig",
                            "description": "The peerconnection configuration.",
                            "type": "JSON"
                        },
                        {
                            "name": "offerConstraints",
                            "description": "The offer constraints.",
                            "type": "JSON"
                        },
                        {
                            "name": "sdpConstraints",
                            "description": "The sdp constraints.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 951,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 952,
            "description": "Internal array of peer connections.",
            "itemtype": "attribute",
            "name": "_peerConnections",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 962,
            "description": "Internal array of peer informations.",
            "itemtype": "attribute",
            "name": "_peerInformations",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 972,
            "description": "Internal array of peer ice candidates queue.",
            "itemtype": "attribute",
            "name": "_peerCandidatesQueue",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 982,
            "description": "Internal array of peer handshake messaging priorities.",
            "itemtype": "attribute",
            "name": "_peerHSPriorities",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 992,
            "description": "Internal array of datachannels.",
            "itemtype": "attribute",
            "name": "_dataChannels",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1002,
            "description": "Internal array of data upload transfers.",
            "itemtype": "attribute",
            "name": "_uploadDataTransfers",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1012,
            "description": "Internal array of data upload sessions.",
            "itemtype": "attribute",
            "name": "_uploadDataSessions",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1022,
            "description": "Internal array of data download transfers.",
            "itemtype": "attribute",
            "name": "_downloadDataTransfers",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1032,
            "description": "Internal array of data download sessions.",
            "itemtype": "attribute",
            "name": "_downloadDataSessions",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1042,
            "description": "Internal array of data transfers timeout.",
            "itemtype": "attribute",
            "name": "_dataTransfersTimeout",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1052,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1053,
            "description": "Syntactically private variables and utility functions.",
            "itemtype": "attribute",
            "name": "_EVENTS",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1063,
            "description": "Event fired when the socket connection to the signaling\nserver is open.",
            "itemtype": "event",
            "name": "channelOpen",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1071,
            "description": "Event fired when the socket connection to the signaling\nserver has closed.",
            "itemtype": "event",
            "name": "channelClose",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1079,
            "description": "Event fired when the socket connection received a message\nfrom the signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1088,
            "description": "Event fired when the socket connection has occurred an error.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1096,
            "description": "Event fired whether the room is ready for use.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "[Rel: Skyway.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "status",
                            "description": "Http status when retrieving information.\n  May be empty for other errors.",
                            "type": "Integer"
                        },
                        {
                            "name": "content",
                            "description": "Error message.",
                            "type": "String"
                        },
                        {
                            "name": "errorCode",
                            "description": "Error code.\n  [Rel: Skyway.READY_STATE_CHANGE_ERROR]",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1110,
            "description": "Event fired when a peer's handshake progress has changed.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "step",
                    "description": "The handshake progress step.\n  [Rel: Skyway.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's handshake progress.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1121,
            "description": "Event fired when an ICE gathering state has changed.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The ice candidate generation state.\n  [Rel: Skyway.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice candidate\n   generation state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1132,
            "description": "Event fired when a peer Connection state has changed.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The peer connection state.\n  [Rel: Skyway.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection state\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1143,
            "description": "Event fired when an ICE connection state has changed.",
            "iceconnectionstate": "",
            "params": [
                {
                    "name": "state",
                    "description": "The ice connection state.\n  [Rel: Skyway.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice connection state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1153,
            "description": "Event fired when webcam or microphone media access fails.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1161,
            "description": "Event fired when webcam or microphone media acces passes.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1169,
            "description": "Event fired when a peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1203,
            "description": "Event fired when a peer information is updated.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had information updaed.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1237,
            "description": "Event fired when a peer leaves the room",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that left.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1271,
            "description": "TODO Event fired when a peer joins the room",
            "itemtype": "event",
            "name": "presenceChanged",
            "params": [
                {
                    "name": "users",
                    "description": "The list of users",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1281,
            "description": "Event fired when a remote stream has become available.\n- This occurs after the user joins the room.\n- This is changed from <b>addPeerStream</b> event.\n- Note that <b>addPeerStream</b> is removed from the specs.\n- There has been a documentation error whereby the stream it is\n  supposed to be (stream, peerId, isSelf), but instead is received\n  as (peerId, stream, isSelf) in 0.5.0.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the stream.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1297,
            "description": "Event fired when a message being broadcasted is received.\n- This is changed from <b>chatMessageReceived</b>,\n  <b>privateMessage</b> and <b>publicMessage</b> event.\n- Note that <b>chatMessageReceived</b>, <b>privateMessage</b>\n  and <b>publicMessage</b> is removed from the specs.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "Message object that is received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "Data that is broadcasted.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender peer.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "PeerId that is specifically\n  targeted to receive the message.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "Is data received a private message.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is data received from a\n  data channel.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the sender peer.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1343,
            "description": "Event fired when connected to a room and the lock status has changed.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "Is the room locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is locking/unlocking\n  the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer's information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer's stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Peer's audio stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "If peer has stereo\n  enabled or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "Peer's video stream\n  settings.",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "Peer's video stream resolution [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Peer's video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Peer's video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "Peer's video stream resolution minimum frame rate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If peer's audio\n  stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If peer's video\n  stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer's custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "Peer's browser agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "Peer's browser agent version.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1379,
            "description": "Event fired when a peer's datachannel state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The datachannel state.\n  [Rel: Skyway.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of peer that has a datachannel\n  state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1390,
            "description": "Event fired when a data transfer state has changed.\n- Note that <u>transferInfo.data</u> sends the blob data, and\n  no longer a blob url.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The data transfer state.\n  [Rel: Skyway.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "TransferId of the data.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has a data\n  transfer state change.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "Data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "percentage",
                            "description": "The percetange of data being\n  uploaded / downloaded.",
                            "type": "JSON"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "PeerId of the sender.",
                            "type": "JSON"
                        },
                        {
                            "name": "data",
                            "description": "The blob data. See the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the blob to a download link.",
                            "type": "JSON"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "JSON"
                        },
                        {
                            "name": "size",
                            "description": "Data size.",
                            "type": "JSON"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "message",
                            "description": "Error message thrown.",
                            "type": "String"
                        },
                        {
                            "name": "transferType",
                            "description": "Is error from uploading or downloading.\n  [Rel: Skyway.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1417,
            "description": "Event fired when the signaling server warns the user.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The action that is required for\n  the user to follow. [Rel: Skyway.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The reason for the action.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The reason why the action is given.\n  [Rel: Skyway.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1432,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1433,
            "description": "Logs all the console information.\n- TODO: Set all interface information.",
            "itemtype": "method",
            "name": "_log",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The log level. [Rel: Skyway.LOG_LEVEL]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The console message.",
                    "type": "JSON|String",
                    "props": [
                        {
                            "name": "target",
                            "description": "The targetPeerId the message is targeted to.",
                            "type": "String"
                        },
                        {
                            "name": "interface",
                            "description": "The interface the message is targeted to.",
                            "type": "String"
                        },
                        {
                            "name": "keys",
                            "description": "The events the message is targeted to.",
                            "type": "Array|String"
                        },
                        {
                            "name": "log",
                            "description": "The log message.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "debugObject",
                    "description": "The console parameter string or object.",
                    "type": "Object|String"
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1494,
            "description": "Stack class of Skyway.",
            "itemtype": "property",
            "name": "SkywayStack",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway",
            "subprops": [
                {
                    "name": "stack",
                    "description": "The stack object.",
                    "type": "Array"
                }
            ]
        },
        {
            "file": "source/skyway.js",
            "line": 1505,
            "description": "Stacks all the caller functions.",
            "author": "codeovertones.com",
            "itemtype": "method",
            "name": "_getStack",
            "return": {
                "description": "SkywayStack object.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1523,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1524,
            "description": "Gets information from api server.",
            "itemtype": "method",
            "name": "_requestServerInfo",
            "params": [
                {
                    "name": "method",
                    "description": "The http method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "The url to do a rest call.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skyway\n  receives a response from the api server.",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "HTTP Params",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1612,
            "description": "Parse the information received from the api server.",
            "itemtype": "method",
            "name": "_parseInfo",
            "params": [
                {
                    "name": "info",
                    "description": "The parsed information from the server.",
                    "type": "JSON"
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1671,
            "description": "Start the loading of information from the api server.",
            "itemtype": "method",
            "name": "_loadInfo",
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1742,
            "description": "Initialize Skyway to retrieve new connection information bbasd on options.",
            "itemtype": "method",
            "name": "_initSelectedRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The room to connect to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired once Skyway is re-initialized.",
                    "type": "Function"
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1783,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1784,
            "description": "Trigger all the callbacks associated with an event.\n- Note that extra arguments can be passed to the callback which\n  extra argument can be expected by callback is documented by each event.",
            "itemtype": "method",
            "name": "_trigger",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skyway event.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1822,
            "description": "Access to user's MediaStream is successful.",
            "itemtype": "method",
            "name": "_onUserMediaSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "MediaStream"
                }
            ],
            "trigger": "mediaAccessSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1853,
            "description": "Access to user's MediaStream failed.",
            "itemtype": "method",
            "name": "_onUserMediaError",
            "params": [
                {
                    "name": "error",
                    "description": "Error object that was thrown.",
                    "type": "Object"
                }
            ],
            "trigger": "mediaAccessFailure",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1869,
            "description": "The remote peer advertised streams, that we are forwarding to the app. This is part\nof the peerConnection's addRemoteDescription() API's callback.",
            "itemtype": "method",
            "name": "_onRemoteStreamAdded",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer that has remote stream to send.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "This is provided directly by the peerconnection API.",
                    "type": "Event"
                }
            ],
            "trigger": "incomingStream",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1916,
            "description": "A candidate has just been generated (ICE gathering) and will be sent to the peer.\nPart of connection establishment.",
            "itemtype": "method",
            "name": "_onIceCandidate",
            "params": [
                {
                    "name": "targetMid",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "This is provided directly by the peerconnection API.",
                    "type": "Event"
                }
            ],
            "trigger": "candidateGenerationState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1969,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1970,
            "description": "Handles everu incoming signaling message received.\n- If it's a SIG_TYPE.GROUP message, break them down to single messages\n  and let {{#crossLink \"Skyway/_processSingleMessage:method\"}}\n  _processSingleMessage(){{/crossLink}} to handle them.",
            "itemtype": "method",
            "name": "_processSigMessage",
            "params": [
                {
                    "name": "messageString",
                    "description": "The message object stringified received.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 1992,
            "description": "Handles the single signaling message received.",
            "itemtype": "method",
            "name": "_processingSingleMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2072,
            "description": "Signaling server sends a redirect message.\n- SIG_TYPE: REDIRECT\n- This occurs when the signaling server is warning us or wanting\n  to move us out when the peer sends too much messages at the\n  same tme.",
            "itemtype": "method",
            "name": "_redirectHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "info",
                            "description": "The reason for this action.",
                            "type": "String"
                        },
                        {
                            "name": "action",
                            "description": "The action to work on.\n  [Rel: Skyway.SYSTEM_ACTION]",
                            "type": "String"
                        },
                        {
                            "name": "reason",
                            "description": "The reason of why the action is worked upon.\n  [Rel: Skyway.SYSTEM_ACTION_REASON]",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "systemAction",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2104,
            "description": "Signaling server sends a updateUserEvent message.\n- SIG_TYPE: UPDATE_USER\n- This occurs when a peer's custom user data is updated.",
            "itemtype": "method",
            "name": "_updateUserEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the\n  updated event.",
                            "type": "String"
                        },
                        {
                            "name": "userData",
                            "description": "The peer's user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2139,
            "description": "Signaling server sends a roomLockEvent message.\n- SIG_TYPE: ROOM_LOCK\n- This occurs when a room lock status has changed.",
            "itemtype": "method",
            "name": "_roomLockEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the\n  updated room lock status.",
                            "type": "String"
                        },
                        {
                            "name": "lock",
                            "description": "If room is locked or not.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "roomLock",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2165,
            "description": "Signaling server sends a muteAudioEvent message.\n- SIG_TYPE: MUTE_AUDIO\n- This occurs when a peer's audio stream muted\n  status has changed.",
            "itemtype": "method",
            "name": "_muteAudioEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending\n  their own updated audio stream status.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "If audio stream is muted or not.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2201,
            "description": "Signaling server sends a muteVideoEvent message.\n- SIG_TYPE: MUTE_VIDEO\n- This occurs when a peer's video stream muted\n  status has changed.",
            "itemtype": "method",
            "name": "_muteVideoEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending\n  their own updated video streams status.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "If video stream is muted or not.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2237,
            "description": "Signaling server sends a bye message.\n- SIG_TYPE: BYE\n- This occurs when a peer left the room.",
            "itemtype": "method",
            "name": "_byeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that has left the room.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2260,
            "description": "Signaling server sends a privateMessage message.\n- SIG_TYPE: PRIVATE_MESSAGE\n- This occurs when a peer sends private message to user.",
            "itemtype": "method",
            "name": "_privateMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The data received.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "CredentialId of the room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending a private\n  broadcast message.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "privateMessage",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2292,
            "description": "Signaling server sends a publicMessage message.\n- SIG_TYPE: PUBLIC_MESSAGE\n- This occurs when a peer broadcasts a public message to\n  all connected peers.",
            "itemtype": "method",
            "name": "_publicMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The data broadcasted",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "CredentialId of the room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending a private\n  broadcast message.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "publicMessage",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2325,
            "description": "Signaling server sends an inRoom message.\n- SIG_TYPE: IN_ROOM\n- This occurs the user has joined the room.",
            "itemtype": "method",
            "name": "_inRoomHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "sid",
                            "description": "PeerId of self.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is\n  sending the joinRoom message.",
                            "type": "String"
                        },
                        {
                            "name": "pc_config",
                            "description": "The peerconnection configuration.",
                            "type": "JSON"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2369,
            "description": "Signaling server sends a enter message.\n- SIG_TYPE: ENTER\n- This occurs when a peer just entered the room.\n- If we don't have a connection with the peer, send a welcome.",
            "itemtype": "method",
            "name": "_enterHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the enter shake.",
                            "type": "String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "Peer's browser version.",
                            "type": "String"
                        },
                        {
                            "name": "userInfo",
                            "description": "Peer's user information.",
                            "type": "String",
                            "props": [
                                {
                                    "name": "settings",
                                    "description": "Peer's stream settings",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "settings.video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "Peer stream status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "If peer's audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "If peer's video stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "userData",
                                    "description": "Peer custom data.",
                                    "type": "String|JSON"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2455,
            "description": "Signaling server sends a welcome message.\n- SIG_TYPE: WELCOME\n- This occurs when we've just received a welcome.\n- If there is no existing connection with this peer,\n  create one, then set the remotedescription and answer.",
            "itemtype": "method",
            "name": "_welcomeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the welcome shake.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "Peer to receive only",
                            "type": "Boolean"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "Option to enable Ice trickle or not",
                            "type": "Boolean"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "Option to enable DataChannel or not",
                            "type": "Boolean"
                        },
                        {
                            "name": "userInfo",
                            "description": "Peer Skyway._user.info data.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "settings",
                                    "description": "Peer stream settings",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "settings.video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "Peer stream status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "userData",
                                    "description": "Peer custom data",
                                    "type": "String|JSON"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "Browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "Browser version.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "PeerId of the peer targeted to receieve this message.",
                            "type": "String"
                        },
                        {
                            "name": "weight",
                            "description": "The weight of the message.",
                            "type": "Integer"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2562,
            "description": "Signaling server sends an offer message.\n- SIG_TYPE: OFFER\n- This occurs when we've just received an offer.\n- If there is no existing connection with this peer, create one,\n  then set the remotedescription and answer.",
            "itemtype": "method",
            "name": "_offerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the offer shake.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "Offer sessionDescription",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2623,
            "description": "Signaling server sends a candidate message.\n- SIG_TYPE: CANDIDATE\n- This occurs when a peer sends an ice candidate.",
            "itemtype": "method",
            "name": "_candidateHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the\n  offer shake.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "Offer sessionDescription.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "PeerId that is specifically\n  targeted to receive the message.",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "Peer's ICE candidate id.",
                            "type": "String"
                        },
                        {
                            "name": "candidate",
                            "description": "Peer's ICE candidate object.",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "Peer's ICE candidate label.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2710,
            "description": "Signaling server sends an answer message.\n- SIG_TYPE: ANSWER\n- This occurs when a peer sends an answer message is received.",
            "itemtype": "method",
            "name": "_answerHandler",
            "params": [
                {
                    "name": "message.type",
                    "description": "Message type",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "Answer sessionDescription",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the enter shake.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2765,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2766,
            "description": "We have a peer, this creates a peerconnection object to handle the call.\nif we are the initiator, we then starts the O/A handshake.",
            "itemtype": "method",
            "name": "_addPeer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer we should connect to.",
                    "type": "String"
                },
                {
                    "name": "peerBrowser",
                    "description": "The peer browser information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "agent",
                            "description": "The peer browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The peer browser version.",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "toOffer",
                    "description": "Whether we should start the O/A or wait.",
                    "type": "Boolean"
                },
                {
                    "name": "restartConn",
                    "description": "Whether connection is restarted.",
                    "type": "Boolean"
                },
                {
                    "name": "receiveOnly",
                    "description": "Should they only receive?",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2813,
            "description": "Actually clean the peerconnection and trigger an event.\nCan be called by _byHandler and leaveRoom.",
            "itemtype": "method",
            "name": "_removePeer",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has left.",
                    "type": "String"
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2847,
            "description": "It then sends it to the peer. Handshake step 3 (offer) or 4 (answer)",
            "itemtype": "method",
            "name": "_doOffer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send offer to.",
                    "type": "String"
                },
                {
                    "name": "peerBrowser",
                    "description": "The peer browser information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "agent",
                            "description": "The peer browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The peer browser version.",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2921,
            "description": "We have succesfully received an offer and set it locally. This function will take care\nof cerating and sendng the corresponding answer. Handshake step 4.",
            "itemtype": "method",
            "name": "_doAnswer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send answer to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2960,
            "description": "Adds ice candidate to queue.",
            "itemtype": "method",
            "name": "_addIceCandidateToQueue",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The peerId of the target peer.",
                    "type": "String"
                },
                {
                    "name": "candidate",
                    "description": "The ice candidate object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 2978,
            "description": "Adds all ice candidate from the queue.",
            "itemtype": "method",
            "name": "_addIceCandidateFromQueue",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The peerId of the target peer.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3006,
            "description": "This takes an offer or an aswer generated locally and set it in the peerconnection\nit then sends it to the peer. Handshake step 3 (offer) or 4 (answer)",
            "itemtype": "method",
            "name": "_setLocalAndSendMessage",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send offer/answer to.",
                    "type": "String"
                },
                {
                    "name": "sessionDescription",
                    "description": "This should be provided by the peerconnection API.\n  User might 'tamper' with it, but then , the setLocal may fail.",
                    "type": "JSON"
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3111,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3112,
            "description": "Sets the STUN server specially for Firefox for ICE Connection.",
            "itemtype": "method",
            "name": "_setFirefoxIceServers",
            "params": [
                {
                    "name": "config",
                    "description": "Ice configuration servers url object.",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "Updated configuration",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3151,
            "description": "Finds a line in the SDP and returns it.\n- To set the value to the line, add an additional parameter to the method.",
            "itemtype": "method",
            "name": "_findSDPLine",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                },
                {
                    "name": "condition",
                    "description": "The conditions.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "Value to set Sdplines to",
                    "type": "String"
                }
            ],
            "return": {
                "description": "[index, line] - Returns the sdpLines based on the condition",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3178,
            "description": "Adds stereo feature to the SDP.\n- This requires OPUS to be enabled in the SDP or it will not work.",
            "itemtype": "method",
            "name": "_addStereo",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Updated version with Stereo feature",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3208,
            "description": "Set Audio, Video and Data Bitrate in SDP",
            "itemtype": "method",
            "name": "_setSDPBitrate",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3239,
            "description": "Removes Firefox 32 H264 preference in sdp.\n- As noted in bugzilla as bug in [here](https://bugzilla.mozilla.org/show_bug.cgi?id=1064247).",
            "itemtype": "method",
            "name": "_removeFirefoxH264Pref",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Updated version removing Firefox h264 pref support.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3258,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3259,
            "description": "Parse stream settings",
            "itemtype": "method",
            "name": "_parseStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "Optional. User custom data.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Enabled stereo or not",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Bandwidth settings",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "video",
                                    "description": "Video Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "data",
                                    "description": "Data Bandwidth",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3354,
            "description": "Opens or closes existing MediaStreams.",
            "itemtype": "method",
            "name": "_setLocalMediaStreams",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "Enable audio or not",
                            "type": "JSON"
                        },
                        {
                            "name": "video",
                            "description": "Enable video or not",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Whether we should re-fetch mediaStreams or not",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3397,
            "description": "Sends our Local MediaStreams to other Peers.\nBy default, it sends all it's other stream",
            "itemtype": "method",
            "name": "_addLocalMediaStreams",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer to send local stream to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3435,
            "description": "Handles all audio and video mute events.\n- If there is no available audio or video stream, it will call\n  {{#crossLink \"Skyway/leaveRoom:method\"}}leaveRoom(){{/crossLink}}\n  and call {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  to join user in the room to send their audio and video stream.",
            "itemtype": "method",
            "name": "_handleLocalMediaStreams",
            "params": [
                {
                    "name": "mediaType",
                    "description": "Media types expected to receive.\n  [Rel: 'audio' or 'video']",
                    "type": "String"
                },
                {
                    "name": "enableMedia",
                    "description": "Enable it or disable it",
                    "type": "Boolean"
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3501,
            "description": "Waits for MediaStream.\n- Once the stream is loaded, callback is called\n- If there's not a need for stream, callback is called",
            "itemtype": "method",
            "name": "_waitForLocalMediaStream",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback after requested constraints are loaded.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "Optional. User custom data.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Enabled stereo or not",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Bandwidth settings",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "video",
                                    "description": "Video Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "data",
                                    "description": "Data Bandwidth",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3578,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3579,
            "description": "Creates a peerconnection to communicate with the peer whose ID is 'targetMid'.\nAll the peerconnection callbacks are set up here. This is a quite central piece.",
            "itemtype": "method",
            "name": "_createPeerConnection",
            "params": [
                {
                    "name": "targetMid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created peer connection object.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3657,
            "description": "// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  self._log(self.LOG_LEVEL.DEBUG, {\n    target: targetMid,\n    interface: 'RTCIceConnectionState',\n    log: 'Ice connection state failed. Re-negotiating connection'\n  });\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self._user.info,\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3702,
            "description": "Create a DataChannel. Only SCTPDataChannel support",
            "itemtype": "method",
            "name": "_createDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer which the datachannel is connected to",
                    "type": "String"
                },
                {
                    "name": "dc",
                    "description": "The datachannel object received.",
                    "type": "Object"
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3785,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3786,
            "description": "Sends a message to the signaling server.\n- Not to be confused with method\n  {{#crossLink \"Skyway/sendMessage:method\"}}sendMessage(){{/crossLink}}\n  that broadcasts messages. This is for sending socket messages.",
            "itemtype": "method",
            "name": "_sendChannelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3808,
            "description": "Initiate a socket signaling connection.",
            "itemtype": "method",
            "name": "_openChannel",
            "trigger": "channelMessage, channelOpen, channelError, channelClose",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3863,
            "description": "Closes the socket signaling connection.",
            "itemtype": "method",
            "name": "_closeChannel",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3878,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3879,
            "description": "Sends data to the datachannel.",
            "itemtype": "method",
            "name": "_sendDataChannelMessage",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's datachannel to send data.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to send.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3920,
            "description": "Closes the datachannel.",
            "itemtype": "method",
            "name": "_closeDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's datachannel to close.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3943,
            "description": "Sets the datachannel timeout.\n- If timeout is met, it will send the 'ERROR' message",
            "itemtype": "method",
            "name": "_setDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the datachannel to set timeout.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The timeout to set in seconds.",
                    "type": "Integer"
                },
                {
                    "name": "isSender",
                    "description": "Is peer the sender or the receiver?",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 3993,
            "description": "Clears the datachannel timeout.",
            "itemtype": "method",
            "name": "_clearDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the datachannel to clear timeout.",
                    "type": "String"
                },
                {
                    "name": "isSender",
                    "description": "Is peer the sender or the receiver?",
                    "type": "Boolean"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4011,
            "description": "Sends blob data to individual peer.\n- This sends the {{#crossLink \"Skyway/WRQ:event\"}}WRQ{{/crossLink}}\n  and to initiate the TFTP protocol.",
            "itemtype": "method",
            "name": "_sendBlobDataToPeer",
            "params": [
                {
                    "name": "data",
                    "description": "The blob data to be sent over.",
                    "type": "Blob"
                },
                {
                    "name": "dataInfo",
                    "description": "The data information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "transferId",
                            "description": "TransferId of the data.",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "Data timeout to wait for packets.\n  [Default is 60].",
                            "type": "Integer"
                        },
                        {
                            "name": "size",
                            "description": "Data size",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId targeted to receive data.\n  Leave blank to send to all peers.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4058,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4059,
            "description": "Handles all datachannel protocol events.",
            "itemtype": "method",
            "name": "_dataChannelProtocolHandler",
            "params": [
                {
                    "name": "data",
                    "description": "The data received from datachannel.",
                    "type": "String|Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4116,
            "description": "The user receives a blob request.\nFrom here, it's up to the user to accept or reject it",
            "itemtype": "method",
            "name": "_WRQProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the request.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "agent",
                            "description": "The peer's browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The peer's browser version.",
                            "type": "Integer"
                        },
                        {
                            "name": "name",
                            "description": "The data name.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The data size.",
                            "type": "Integer"
                        },
                        {
                            "name": "chunkSize",
                            "description": "The data chunk size expected to receive.",
                            "type": "Integer"
                        },
                        {
                            "name": "timeout",
                            "description": "The timeout to wait for packet response.",
                            "type": "Integer"
                        },
                        {
                            "name": "isPrivate",
                            "description": "Is the data sent private.",
                            "type": "Boolean"
                        },
                        {
                            "name": "sender",
                            "description": "The sender's peerId.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of datachannel message.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4165,
            "description": "The user receives an acknowledge of the blob request.",
            "itemtype": "method",
            "name": "_ACKProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the acknowledgement.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "ackN",
                            "description": "The acknowledge request number.\n- 0: Request accepted. First packet sent.\n- 0 and above: Transfer is going on.\n- -1: Request rejected.",
                            "type": "String"
                        },
                        {
                            "name": "sender",
                            "description": "The sender's peerId.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of datachannel message.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4227,
            "description": "The user receives a datachannel broadcast message.",
            "itemtype": "method",
            "name": "_MESSAGEProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending a broadcast message.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "target",
                            "description": "The target peerId to receive the data.",
                            "type": "String"
                        },
                        {
                            "name": "data",
                            "description": "The data to be received.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "sender",
                            "description": "The sender's peerId.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of datachannel message.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4257,
            "description": "The user receives a timeout error.",
            "itemtype": "method",
            "name": "_ERRORProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the error.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "name",
                            "description": "The data name.",
                            "type": "String"
                        },
                        {
                            "name": "content",
                            "description": "The error message.",
                            "type": "String"
                        },
                        {
                            "name": "isUploadError",
                            "description": "Is the error occurring at upload state.",
                            "type": "Boolean"
                        },
                        {
                            "name": "sender",
                            "description": "The sender's peerId.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of datachannel message.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4291,
            "description": "The user receives a timeout error.",
            "itemtype": "method",
            "name": "_CANCELProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the error.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "name",
                            "description": "The data name.",
                            "type": "String"
                        },
                        {
                            "name": "content",
                            "description": "The error message.",
                            "type": "String"
                        },
                        {
                            "name": "sender",
                            "description": "The sender's peerId.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of datachannel message.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4325,
            "description": "This is when the data is sent from the sender to the receiving user.",
            "itemtype": "method",
            "name": "_DATAProtocolHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the data.",
                    "type": "String"
                },
                {
                    "name": "dataString",
                    "description": "The data received.",
                    "type": "ArrayBuffer|Blob|String"
                },
                {
                    "name": "dataType",
                    "description": "The data type received from datachannel.\n  [Rel: Skyway.DATA_TRANSFER_DATA_TYPE]",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4441,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4442,
            "description": "Converts base64 string to raw binary data.\n- Doesn't handle URLEncoded DataURIs\n- See StackOverflow answer #6850276 for code that does this\nThis is to convert the base64 binary string to a blob",
            "author": "Code from devnull69 @ stackoverflow.com",
            "itemtype": "method",
            "name": "_base64ToBlob",
            "params": [
                {
                    "name": "dataURL",
                    "description": "Blob base64 dataurl.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4465,
            "description": "Chunks blob data into chunks.",
            "itemtype": "method",
            "name": "_chunkBlobData",
            "params": [
                {
                    "name": "blob",
                    "description": "The blob data to chunk.",
                    "type": "Blob"
                },
                {
                    "name": "blobByteSize",
                    "description": "The blob data size.",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4494,
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4495,
            "description": "Sets the debugging log level.\n- The default log level is Skyway.LOG_LEVEL.WARN",
            "itemtype": "method",
            "name": "setLogLevel",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The log level. [Rel: Skyway.LOG_LEVEL]",
                    "type": "String"
                }
            ],
            "example": [
                "\n  SkywayDemo.setLogLevel(SkywayDemo.LOG_LEVEL.TRACE);"
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4523,
            "description": "Sets Skyway in debugging mode to display stack trace.\n- By default, debugging mode is turned off.",
            "itemtype": "method",
            "name": "setDebugMode",
            "params": [
                {
                    "name": "isDebugMode",
                    "description": "If debugging mode is turned on or off.",
                    "type": "Boolean"
                }
            ],
            "example": [
                "\n  SkywayDemo.setDebugMode(true);"
            ],
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4536,
            "description": "To register a callback function to an event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skyway event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after the event is triggered.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkywayDemo.on('peerJoined', function (peerId, peerInfo) {\n     alert(peerId + ' has joined the room');\n  });"
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4559,
            "description": "To unregister a callback function from an event.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skyway event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after the event is triggered.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkywayDemo.off('peerJoined', callback);"
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4593,
            "description": "Intiailize Skyway to retrieve connection information.\n- <b><i>IMPORTANT</i></b>: Please call this method to load all server\n  information before joining the room or doing anything else.\n- If you would like to set the start time and duration of the room,\n  you have to generate the credentials. In example 3, we use the\n   [CryptoJS](https://code.google.com/p/crypto-js/) library.\n  - Step 1: Generate the hash. It is created by using the roomname,\n    duration and the timestamp (in ISO String format).\n  - Step 2: Generate the Credentials. It is is generated by converting\n    the hash to a Base64 string and then encoding it to a URI string.\n  - Step 3: Initialize Skyway",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "Connection options or API Key ID",
                    "type": "String|JSON",
                    "props": [
                        {
                            "name": "apiKey",
                            "description": "API Key ID to identify with the Temasys\n  backend server",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "Optional. The default room to connect\n  to if there is no room provided in\n  {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
                            "type": "String"
                        },
                        {
                            "name": "roomServer",
                            "description": "Optional. Path to the Temasys\n  backend server. If there's no room provided, default room would be used.",
                            "type": "String"
                        },
                        {
                            "name": "region",
                            "description": "Optional. The regional server that user\n  chooses to use. [Rel: Skyway.REGIONAL_SERVER]",
                            "type": "String"
                        },
                        {
                            "name": "iceTrickle",
                            "description": "Optional. The option to enable\n  ICE trickle or not.\n- Default is true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "dataChannel",
                            "description": "Optional. The option to enable\n  datachannel or not.\n- Default is true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "credentials",
                            "description": "Optional. Credentials options for\n  setting a static meeting.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "The start timing of the\n  meeting in Date ISO String",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "The duration of the meeting",
                                    "type": "Integer"
                                },
                                {
                                    "name": "credentials",
                                    "description": "The credentials required\n  to set the timing and duration of a meeting.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Note: Default room is apiKey when no room\n  // Example 1: To initalize without setting any default room.\n  SkywayDemo.init('apiKey');\n\n  // Example 2: To initialize with apikey, roomServer and defaultRoom\n  SkywayDemo.init({\n    'apiKey' : 'apiKey',\n    'roomServer' : 'http://xxxx.com',\n    'defaultRoom' : 'mainHangout'\n  });\n\n  // Example 3: To initialize with credentials to set startDateTime and\n  // duration of the room\n  var hash = CryptoJS.HmacSHA1(roomname + '_' + duration + '_' +\n    (new Date()).toISOString(), token);\n  var credentials = encodeURIComponent(hash.toString(CryptoJS.enc.Base64));\n  SkywayDemo.init({\n    'apiKey' : 'apiKey',\n    'roomServer' : 'http://xxxx.com',\n    'defaultRoom' : 'mainHangout'\n    'credentials' : {\n       'startDateTime' : (new Date()).toISOString(),\n       'duration' : 500,\n       'credentials' : credentials\n    }\n  });"
            ],
            "trigger": "readyStateChange",
            "required": 1,
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4735,
            "description": "Gets the default webcam and microphone.\n- Please do not be confused with the [MediaStreamConstraints](http://dev.w3.\n  org/2011/webrtc/editor/archives/20140817/getusermedia.html#dictionary\n  -mediastreamconstraints-members) specified in the original w3c specs.\n- This is an implemented function for Skyway.",
            "itemtype": "method",
            "name": "getUserMedia",
            "params": [
                {
                    "name": "options",
                    "description": "Optional. MediaStream constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "Option to allow audio stream.",
                            "type": "JSON|Boolean",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Option to enable stereo\n   during call.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "Option to allow video stream.",
                            "type": "JSON|Boolean",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "The resolution of video stream.\n- Check out <a href=\"#attr_VIDEO_RESOLUTION\">VIDEO_RESOLUTION</a>.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The video stream mininum frameRate.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Default is to get both audio and video\n  // Example 1: Get both audio and video by default.\n  SkywayDemo.getUserMedia();\n\n  // Example 2: Get the audio stream only\n  SkywayDemo.getUserMedia({\n    'video' : false,\n    'audio' : true\n  });\n\n  // Example 3: Set the stream settings for the audio and video\n  SkywayDemo.getUserMedia({\n    'video' : {\n       'resolution': SkywayDemo.VIDEO_RESOLUTION.HD,\n       'frameRate': 50\n     },\n    'audio' : {\n      'stereo': true\n    }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError",
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4840,
            "description": "User to join the room.\n- You may call {{#crossLink \"Skyway/getUserMedia:method\"}}\n  getUserMedia(){{/crossLink}} first if you want to get\n  MediaStream and joining Room seperately.\n- If <b>joinRoom()</b> parameters is empty, it simply uses\n  any previous media or user data settings.\n- If no room is specified, user would be joining the default room.",
            "itemtype": "method",
            "name": "joinRoom",
            "params": [
                {
                    "name": "room",
                    "description": "Optional. Room to join user in.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "Optional. User custom data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio stream.",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Option to enable stereo\n   during call.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video stream.",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "The resolution of video stream.\n  [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The video stream resolution width.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The video stream resolution height.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The video stream mininum frameRate.",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Stream bandwidth settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio stream bandwidth in kbps.\n- Recommended: 50 kbps.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video",
                                    "description": "Video stream bandwidth in kbps.\n- Recommended: 256 kbps.",
                                    "type": "Integer"
                                },
                                {
                                    "name": "data",
                                    "description": "Data stream bandwidth in kbps.\n- Recommended: 1638400 kbps.",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // To just join the default room without any video or audio\n  // Note that calling joinRoom without any parameters\n  // Still sends any available existing MediaStreams allowed.\n  // See Examples 2, 3, 4 and 5 etc to prevent video or audio stream\n  SkywayDemo.joinRoom();\n\n  // To just join the default room with bandwidth settings\n  SkywayDemo.joinRoom({\n    'bandwidth': {\n      'data': 14440\n    }\n  });\n\n  // Example 1: To call getUserMedia and joinRoom seperately\n  SkywayDemo.getUserMedia();\n  SkywayDemo.on('mediaAccessSuccess', function (stream)) {\n    attachMediaStream($('.localVideo')[0], stream);\n    SkywayDemo.joinRoom();\n  });\n\n  // Example 2: Join a room without any video or audio\n  SkywayDemo.joinRoom('room');\n\n  // Example 3: Join a room with audio only\n  SkywayDemo.joinRoom('room', {\n    'audio' : true,\n    'video' : false\n  });\n\n  // Example 4: Join a room with prefixed video width and height settings\n  SkywayDemo.joinRoom('room', {\n    'audio' : true,\n    'video' : {\n      'resolution' : {\n        'width' : 640,\n        'height' : 320\n      }\n    }\n  });\n\n  // Example 5: Join a room with userData and settings with audio, video\n  // and bandwidth\n  SkwayDemo.joinRoom({\n    'userData': {\n      'item1': 'My custom data',\n      'item2': 'Put whatever, string or JSON or array'\n    },\n    'audio' : {\n       'stereo' : true\n     },\n    'video' : {\n       'res' : SkywayDemo.VIDEO_RESOLUTION.VGA,\n       'frameRate' : 50\n    },\n    'bandwidth' : {\n       'audio' : 48,\n       'video' : 256,\n       'data' : 14480\n     }\n  });"
            ],
            "trigger": "peerJoined",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 4987,
            "description": "User to leave the room.",
            "itemtype": "method",
            "name": "leaveRoom",
            "example": [
                "\n  SkywayDemo.leaveRoom();"
            ],
            "trigger": "peerLeft, channelClose",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5015,
            "description": "Broadcast a message to all peers.\n- <b><i>WARNING</i></b>: Map arrays data would be lost when stringified\n  in JSON, so refrain from using map arrays.",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message data to send.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId of the peer to send a private\n  message data to.",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkywayDemo.sendMessage('Hi there!');\n\n  // Example 2: Send to a targeted peer\n  SkywayDemo.sendMessage('Hi there peer!', targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5058,
            "description": "Start a data transfer with peer(s).\n- Note that peers have the option to download or reject receiving the blob data.\n- This method is ideal for sending files.\n- To send a private file to a peer, input the peerId after the\n  data information.",
            "itemtype": "method",
            "name": "sendBlobData",
            "params": [
                {
                    "name": "data",
                    "description": "The data to be sent over. Data has to be a blob.",
                    "type": "Object"
                },
                {
                    "name": "dataInfo",
                    "description": "The data information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "transferId",
                            "description": "transferId of the data.",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The timeout to wait for packets.\n  [Default is 60].",
                            "type": "Integer"
                        },
                        {
                            "name": "size",
                            "description": "The data size",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId targeted to receive data.\n  Leave blank to send to all peers.",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Send file to all peers connected\n  SkywayDemo.sendBlobData(file, 67);\n\n  // Send file to individual peer\n  SkywayDemo.sendBlobData(blob, 87, targetPeerId);"
            ],
            "trigger": "dataTransferState",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5150,
            "description": "User's response to accept or reject data transfer request.",
            "itemtype": "method",
            "name": "respondBlobRequest",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is expected to receive\n  the request response.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The response of the user to accept the data\n  transfer or not.",
                    "type": "Boolean"
                }
            ],
            "trigger": "dataTransferState",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5194,
            "description": "Reject file transfer for cancel.",
            "itemtype": "method",
            "name": "cancelBlobTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is expected to receive\n  the request response.",
                    "type": "String"
                },
                {
                    "name": "transferType",
                    "description": "Transfer type [Rel: DATA_TRANSFER_TYPE]",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5229,
            "description": "Broadcasts to all P2P datachannel messages and sends to a\npeer only when targetPeerId is provided.\n- This is ideal for sending strings or json objects lesser than 16KB\n  [as noted in here](http://www.webrtc.org/chrome).\n- For huge data, please check out function\n  {{#crossLink \"Skyway/sendBlobData:method\"}}sendBlobData(){{/crossLink}}.\n- <b><i>WARNING</i></b>: Map arrays data would be lost when stringified\n  in JSON, so refrain from using map arrays.",
            "itemtype": "method",
            "name": "sendP2PMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message data to send.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "Optional. Provide if you want to send to\n  only one peer",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkywayDemo.sendP2PMessage('Hi there! This is from a DataChannel!');\n\n  // Example 2: Send to specific peer\n  SkywayDemo.sendP2PMessage('Hi there peer! This is from a DataChannel!', targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "since": "0.5.2",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5285,
            "description": "Updates the user custom data.\n- Please note that the custom data would be overrided so please call\n  {{#crossLink \"Skyway/getUserData:method\"}}getUserData(){{/crossLink}}\n  and then modify the information you want individually.\n- {{#crossLink \"Skyway/peerUpdated:event\"}}peerUpdated{{/crossLink}}\n  only fires after <b>setUserData()</b> is fired.\n  after the user joins the room.",
            "itemtype": "method",
            "name": "setUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "User custom data.",
                    "type": "JSON|String"
                }
            ],
            "example": [
                "\n  // Example 1: Intial way of setting data before user joins the room\n  SkywayDemo.setUserData({\n    displayName: 'Bobby Rays',\n    fbUserId: 'blah'\n  });\n\n // Example 2: Way of setting data after user joins the room\n  var userData = SkywayDemo.getUserData();\n  userData.displayName = 'New Name';\n  userData.fbUserId = 'another Id';\n  SkywayDemo.setUserData(userData);"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.1",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5341,
            "description": "Gets the user custom data.",
            "itemtype": "method",
            "name": "getUserData",
            "return": {
                "description": "User custom data.",
                "type": "JSON|String"
            },
            "example": [
                "\n  var userInfo = SkywayDemo.getUserData();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5355,
            "description": "Gets the peer information.\n- If input peerId is user's id or empty, <b>getPeerInfo()</b>\n  would return user's peer information.",
            "itemtype": "method",
            "name": "getPeerInfo",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer information to retrieve.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Peer information.",
                "type": "JSON"
            },
            "example": [
                "\n  // Example 1: To get other peer's information\n  var peerInfo = SkywayDemo.getPeerInfo(peerId);\n\n  // Example 2: To get own information\n  var userInfo = SkywayDemo.getPeerInfo();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5376,
            "description": "Lock the room to prevent peers from joining the room.",
            "itemtype": "method",
            "name": "lockRoom",
            "example": [
                "\n  SkywayDemo.lockRoom();"
            ],
            "trigger": "lockRoom",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5396,
            "description": "Unlock the room to allow peers to join the room.",
            "itemtype": "method",
            "name": "unlockRoom",
            "example": [
                "\n  SkywayDemo.unlockRoom();"
            ],
            "trigger": "lockRoom",
            "since": "0.5.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5416,
            "description": "Enable microphone.\n- If microphone is not enabled from the beginning, user would have to reinitate the\n  {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  process and ask for microphone again.",
            "itemtype": "method",
            "name": "enableAudio",
            "trigger": "peerUpdated",
            "example": [
                "\n  SkywayDemo.enableAudio();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5431,
            "description": "Disable microphone.\n- If microphone is not enabled from the beginning, there is no effect.",
            "itemtype": "method",
            "name": "disableAudio",
            "example": [
                "\n  SkywayDemo.disableAudio();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5444,
            "description": "Enable webcam video.\n- If webcam is not enabled from the beginning, user would have to reinitate the\n  {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  process and ask for webcam again.",
            "itemtype": "method",
            "name": "enableVideo",
            "example": [
                "\n  SkywayDemo.enableVideo();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source/skyway.js",
            "line": 5459,
            "description": "Disable webcam video.\n- If webcam is not enabled from the beginning, there is no effect.\n- Note that in a Chrome-to-chrome session, each party's peer audio\n  may appear muted in when the audio is muted.\n- You may follow up the bug on [here](https://github.com/Temasys/SkywayJS/issues/14).",
            "itemtype": "method",
            "name": "disableVideo",
            "example": [
                "\n  SkywayDemo.disableVideo();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: iceconnectionstate",
            "line": " source/skyway.js:1143"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1612"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1671"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1742"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1822"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1853"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1869"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:1916"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2072"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2104"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2139"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2165"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2201"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2237"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2260"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2292"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2325"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2369"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2455"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2562"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2710"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:2813"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:3006"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:3435"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:3702"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:3808"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4116"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4165"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4227"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4257"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4291"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4325"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4593"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4735"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4840"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:4987"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5015"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5058"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5150"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5194"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5229"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5285"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5376"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5396"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5416"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5431"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5444"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/skyway.js:5459"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:52"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:87"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:237"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:661"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:820"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:853"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:951"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:1052"
        },
        {
            "message": "Missing item type\nEvent fired when an ICE connection state has changed.",
            "line": " source/skyway.js:1143"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:1432"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:1523"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:1783"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:1969"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:2765"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:3111"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:3258"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:3578"
        },
        {
            "message": "Missing item type\n// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  self._log(self.LOG_LEVEL.DEBUG, {\n    target: targetMid,\n    interface: 'RTCIceConnectionState',\n    log: 'Ice connection state failed. Re-negotiating connection'\n  });\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self._user.info,\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "line": " source/skyway.js:3657"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:3785"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:3878"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:4058"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:4441"
        },
        {
            "message": "Missing item type",
            "line": " source/skyway.js:4494"
        }
    ]
}