{
    "project": {
        "name": "skywayjs",
        "description": "WebRTC real-time video conversation library",
        "version": "0.4.1",
        "url": "https://www.temasys.com.sg/"
    },
    "files": {
        "source\\skyway.js": {
            "name": "source\\skyway.js",
            "modules": {},
            "classes": {
                "Skyway": 1
            },
            "fors": {
                "Skyway": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Skyway": {
            "name": "Skyway",
            "shortname": "Skyway",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source\\skyway.js",
            "line": 5,
            "description": "Please check on the {{#crossLink \"Skyway/init:method\"}}init(){{/crossLink}} function\non how you can initialize Skyway. Note that:\n- You will have to subscribe all Skyway events first before calling\n  {{#crossLink \"Skyway/init:method\"}}init(){{/crossLink}}.\n- If you need an api key, please [register an api key](http://\n  developer.temasys.com.sg) at our developer console.",
            "is_constructor": 1,
            "example": [
                "\n  // Getting started on how to use Skyway\n  var SkywayDemo = new Skyway();\n  SkywayDemo.init('apiKey');"
            ],
            "since": "0.1.0"
        }
    },
    "classitems": [
        {
            "file": "source\\skyway.js",
            "line": 24,
            "description": "Version of Skyway",
            "itemtype": "attribute",
            "name": "VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 32,
            "description": "List of regional server for Skyway to connect to.\nDefault server is US1. Servers:",
            "itemtype": "attribute",
            "name": "REGIONAL_SERVER",
            "type": "JSON",
            "params": [
                {
                    "name": "US1",
                    "description": "USA server 1. Default server if region is not provided.",
                    "type": "String"
                },
                {
                    "name": "US2",
                    "description": "USA server 2",
                    "type": "String"
                },
                {
                    "name": "SG",
                    "description": "Singapore server",
                    "type": "String"
                },
                {
                    "name": "EU",
                    "description": "Europe server",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 50,
            "description": "ICE Connection States. States that would occur are:",
            "itemtype": "attribute",
            "name": "ICE_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STARTING",
                    "description": "ICE Connection to Peer initialized",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "ICE Connection to Peer has been closed",
                    "type": "String"
                },
                {
                    "name": "FAILED",
                    "description": "ICE Connection to Peer has failed",
                    "type": "String"
                },
                {
                    "name": "CHECKING",
                    "description": "ICE Connection to Peer is still in checking status",
                    "type": "String"
                },
                {
                    "name": "DISCONNECTED",
                    "description": "ICE Connection to Peer has been disconnected",
                    "type": "String"
                },
                {
                    "name": "CONNECTED",
                    "description": "ICE Connection to Peer has been connected",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "ICE Connection to Peer has been completed",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 73,
            "description": "Peer Connection States. States that would occur are:",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STABLE",
                    "description": "Initial stage. No local or remote description is applied",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_OFFER",
                    "description": "\"Offer\" local description is applied",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_OFFER",
                    "description": "\"Offer\" remote description is applied",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_PRANSWER",
                    "description": "\"Answer\" local description is applied",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_PRANSWER",
                    "description": "\"Answer\" remote description is applied",
                    "type": "String"
                },
                {
                    "name": "ESTABLISHED",
                    "description": "All description is set and is applied",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "Connection closed.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 96,
            "description": "ICE Candidate Generation States. States that would occur are:",
            "itemtype": "attribute",
            "name": "CANDIDATE_GENERATION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "GATHERING",
                    "description": "ICE Gathering to Peer has just started",
                    "type": "String"
                },
                {
                    "name": "DONE",
                    "description": "ICE Gathering to Peer has been completed",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 109,
            "description": "Handshake Progress Steps. Steps that would occur are:",
            "type": "JSON",
            "itemtype": "attribute",
            "name": "HANDSHAKE_PROGRESS",
            "params": [
                {
                    "name": "ENTER",
                    "description": "Step 1. Received enter from Peer",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "Step 2. Received welcome from Peer",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "Step 3. Received offer from Peer",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "Step 4. Received answer from Peer",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Error state",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 128,
            "description": "Data Channel Connection States. Steps that would occur are:",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "NEW",
                    "description": "Step 1. DataChannel has been created.",
                    "type": "String"
                },
                {
                    "name": "LOADED",
                    "description": "Step 2. DataChannel events has been loaded.",
                    "type": "String"
                },
                {
                    "name": "OPEN",
                    "description": "Step 3. DataChannel is connected. [WebRTC Standard]",
                    "type": "String"
                },
                {
                    "name": "CONNECTING",
                    "description": "DataChannel is connecting. [WebRTC Standard]",
                    "type": "String"
                },
                {
                    "name": "CLOSING",
                    "description": "DataChannel is closing. [WebRTC Standard]",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "DataChannel has been closed. [WebRTC Standard]",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "DataChannel has an error ocurring.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 151,
            "description": "System actions received from Signaling server. System action outcomes are:",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION",
            "type": "JSON",
            "params": [
                {
                    "name": "WARNING",
                    "description": "System is warning user that the room is closing",
                    "type": "String"
                },
                {
                    "name": "REJECT",
                    "description": "System has rejected user from room",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "System has closed the room",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 166,
            "description": "State to check if Skyway initialization is ready. Steps that would occur are:",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "INIT",
                    "description": "Step 1. Init state. If ReadyState fails, it goes to 0.",
                    "type": "Integer"
                },
                {
                    "name": "LOADING",
                    "description": "Step 2. RTCPeerConnection exists. Roomserver,\n  API ID provided is not empty",
                    "type": "Integer"
                },
                {
                    "name": "COMPLETED",
                    "description": "Step 3. Retrieval of configuration is complete.\n  Socket.io begins connection.",
                    "type": "Integer"
                },
                {
                    "name": "ERROR",
                    "description": "Error state. Occurs when ReadyState fails loading.",
                    "type": "Integer"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 186,
            "description": "Error states that occurs when retrieving server information. States are:",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "API_INVALID",
                    "description": "Api Key provided does not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_DOMAIN_NOT_MATCH",
                    "description": "Api Key used in domain does not match.",
                    "type": "Integer"
                },
                {
                    "name": "API_CORS_DOMAIN_NOT_MATCH",
                    "description": "Api Key used in CORS domain does\n  not match.",
                    "type": "Integer"
                },
                {
                    "name": "API_CREDENTIALS_INVALID",
                    "description": "Api Key credentials does not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_CREDENTIALS_NOT_MATCH",
                    "description": "Api Key credentials does not\n  match what is expected.",
                    "type": "Integer"
                },
                {
                    "name": "API_INVALID_PARENT_KEY",
                    "description": "Api Key does not have a parent key\n  nor is a root key.",
                    "type": "Integer"
                },
                {
                    "name": "API_NOT_ENOUGH_CREDIT",
                    "description": "Api Key does not have enough credits\n  to use.",
                    "type": "Integer"
                },
                {
                    "name": "API_NOT_ENOUGH_PREPAID_CREDIT",
                    "description": "Api Key does not have enough\n  prepaid credits to use.",
                    "type": "Integer"
                },
                {
                    "name": "API_FAILED_FINDING_PREPAID_CREDIT",
                    "description": "Api Key preapid payments\n  does not exist.",
                    "type": "Integer"
                },
                {
                    "name": "API_NO_MEETING_RECORD_FOUND",
                    "description": "Api Key does not have a meeting\n  record at this timing. This occurs when Api Key is a static one.",
                    "type": "Integer"
                },
                {
                    "name": "ROOM_LOCKED",
                    "description": "Room is locked.",
                    "type": "Integer"
                },
                {
                    "name": "NO_SOCKET_IO",
                    "description": "No socket.io dependency is loaded to use.",
                    "type": "Integer"
                },
                {
                    "name": "NO_XMLHTTPREQUEST_SUPPORT",
                    "description": "Browser does not support\n  XMLHttpRequest to use.",
                    "type": "Integer"
                },
                {
                    "name": "NO_WEBRTC_SUPPORT",
                    "description": "Browser does not have WebRTC support.",
                    "type": "Integer"
                },
                {
                    "name": "NO_PATH",
                    "description": "No path is loaded yet.",
                    "type": "Integer"
                },
                {
                    "name": "INVALID_XMLHTTPREQUEST_STATUS",
                    "description": "Invalid XMLHttpRequest\n  when retrieving information.",
                    "type": "Integer"
                }
            ],
            "readonly": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 238,
            "description": "Data Channel Transfer Type. Types are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD",
                    "description": "Error occurs at UPLOAD state",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD",
                    "description": "Error occurs at DOWNLOAD state",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 251,
            "description": "Data Channel Transfer State. State that would occur are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD_STARTED",
                    "description": "Data Transfer of Upload has just started",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_STARTED",
                    "description": "Data Transfer od Download has just started",
                    "type": "String"
                },
                {
                    "name": "REJECTED",
                    "description": "Peer rejected User's Data Transfer request",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Error occurred when uploading or downloading file",
                    "type": "String"
                },
                {
                    "name": "UPLOADING",
                    "description": "Data is uploading",
                    "type": "String"
                },
                {
                    "name": "DOWNLOADING",
                    "description": "Data is downloading",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_COMPLETED",
                    "description": "Data Transfer of Upload has completed",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_COMPLETED",
                    "description": "Data Transfer of Download has completed",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 277,
            "description": "TODO : ArrayBuffer and Blob in DataChannel.\nData Channel Transfer Data type. Data Types are:",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_DATA_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "BINARY_STRING",
                    "description": "BinaryString data",
                    "type": "String"
                },
                {
                    "name": "ARRAY_BUFFER",
                    "description": "ArrayBuffer data",
                    "type": "String"
                },
                {
                    "name": "BLOB",
                    "description": "Blob data",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 293,
            "description": "Signaling message type.\n- These message types are fixed.\n- (Legend: S - Send only. R - Received only. SR - Can be Both).\nSignaling types are:",
            "itemtype": "attribute",
            "name": "SIG_TYPE",
            "type": "JSON",
            "readonly": "",
            "params": [
                {
                    "name": "JOIN_ROOM",
                    "description": "[S] Join the Room",
                    "type": "String"
                },
                {
                    "name": "IN_ROOM",
                    "description": "[R] User has already joined the Room",
                    "type": "String"
                },
                {
                    "name": "ENTER",
                    "description": "[SR] Enter from handshake",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "[SR] Welcome from handshake",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "[SR] Offer from handshake",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "[SR] Answer from handshake",
                    "type": "String"
                },
                {
                    "name": "CANDIDATE",
                    "description": "[SR] Candidate received",
                    "type": "String"
                },
                {
                    "name": "BYE",
                    "description": "[R] Peer left the room",
                    "type": "String"
                },
                {
                    "name": "CHAT",
                    "description": "[SR] Deprecated. Chat message relaying",
                    "type": "String"
                },
                {
                    "name": "REDIRECT",
                    "description": "[R] Server redirecting User",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "[R] Server occuring an error",
                    "type": "String"
                },
                {
                    "name": "UPDATE_USER",
                    "description": "[SR] Update of User information",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCK",
                    "description": "[SR] Locking of Room",
                    "type": "String"
                },
                {
                    "name": "MUTE_VIDEO",
                    "description": "[SR] Muting of User's video",
                    "type": "String"
                },
                {
                    "name": "MUTE_AUDIO",
                    "description": "[SR] Muting of User's audio",
                    "type": "String"
                },
                {
                    "name": "PUBLIC_MESSAGE",
                    "description": "[SR] Sending a public broadcast message.",
                    "type": "String"
                },
                {
                    "name": "PRIVATE_MESSAGE",
                    "description": "[SR] Sending a private message",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 341,
            "description": "Lock Action States",
            "itemtype": "attribute",
            "name": "LOCK_ACTION",
            "type": "JSON",
            "params": [
                {
                    "name": "LOCK",
                    "description": "Lock the room",
                    "type": "String"
                },
                {
                    "name": "UNLOCK",
                    "description": "Unlock the room",
                    "type": "String"
                },
                {
                    "name": "STATUS",
                    "description": "Get the status of the room if it's locked or not",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 356,
            "description": "Video Resolutions. Resolution types are:",
            "params": [
                {
                    "name": "QVGA",
                    "description": "QVGA video quality",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "320",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "180",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "VGA",
                    "description": "VGA video quality",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "640",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "360",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "HD",
                    "description": "HD video quality",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1280",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "720",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "FHD",
                    "description": "Might not be supported. FullHD video quality.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1920",
                            "type": "Integer"
                        },
                        {
                            "name": "height",
                            "description": "1080",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "itemtype": "attribute",
            "name": "VIDEO_RESOLUTION",
            "type": "JSON",
            "readonly": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 393,
            "description": "NOTE ALEX: check if last char is '/'",
            "itemtype": "attribute",
            "name": "_path",
            "type": "String",
            "default": "_serverPath",
            "final": 1,
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 404,
            "description": "Url Skyway makes API calls to",
            "itemtype": "attribute",
            "name": "_serverPath",
            "type": "String",
            "final": 1,
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 414,
            "description": "The server region the room connects to",
            "itemtype": "attribute",
            "name": "_serverRegion",
            "type": "String",
            "default": "REGIONAL_SERVER.US1",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 423,
            "description": "The Room server User connects to",
            "itemtype": "attribute",
            "name": "_roomServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 431,
            "description": "The Application Key ID",
            "itemtype": "attribute",
            "name": "_apiKey",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 439,
            "description": "The default room that the User connects to",
            "itemtype": "attribute",
            "name": "_defaultRoom",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 447,
            "description": "The room that the User connects to",
            "itemtype": "attribute",
            "name": "_selectedRoom",
            "type": "String",
            "default": "_defaultRoom",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 456,
            "description": "The room start datetime in ISO format",
            "itemtype": "attribute",
            "name": "_roomStart",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 465,
            "description": "The room duration before closing",
            "itemtype": "attribute",
            "name": "_roomDuration",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 474,
            "description": "The room credentials to set the start time and duration",
            "itemtype": "attribute",
            "name": "_roomCredentials",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 483,
            "description": "The Server Key",
            "itemtype": "attribute",
            "name": "_key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 491,
            "description": "The actual socket that handle the connection",
            "itemtype": "attribute",
            "name": "_socket",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 500,
            "description": "The socket version of the socket.io used",
            "itemtype": "attribute",
            "name": "_socketVersion",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 508,
            "description": "User Information, credential and the local stream(s).",
            "itemtype": "attribute",
            "name": "_user",
            "type": "JSON",
            "params": [
                {
                    "name": "id",
                    "description": "User Session ID",
                    "type": "String"
                },
                {
                    "name": "peer",
                    "description": "PeerConnection object",
                    "type": "Object"
                },
                {
                    "name": "sid",
                    "description": "User Secret Session ID",
                    "type": "String"
                },
                {
                    "name": "apiOwner",
                    "description": "Owner of the room",
                    "type": "String"
                },
                {
                    "name": "streams",
                    "description": "Array of User's MediaStream",
                    "type": "Array"
                },
                {
                    "name": "timestamp",
                    "description": "User's timestamp",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "User access token",
                    "type": "String"
                },
                {
                    "name": "info",
                    "description": "Optional. User information",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer stream settings",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "Bolean|JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer custom data",
                            "type": "String|JSON"
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 537,
            "itemtype": "attribute",
            "name": "_room",
            "type": "JSON",
            "params": [
                {
                    "name": "room",
                    "description": "Room Information, and credentials.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "id",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "token",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "tokenTimestamp",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "signalingServer",
                            "description": "",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "ip",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "port",
                                    "description": "",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "pcHelper",
                            "description": "Holder for all the constraints objects used\n  in a peerconnection lifetime. Some are initialized by default, some are initialized by\n  internal methods, all can be overriden through updateUser. Future APIs will help user\nmodifying specific parts (audio only, video only, ...) separately without knowing the\nintricacies of constraints.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "pcConstraints",
                                    "description": "",
                                    "type": "JSON"
                                },
                                {
                                    "name": "pcConfig",
                                    "description": "Will be provided upon connection to a room",
                                    "type": "JSON"
                                },
                                {
                                    "name": "pcConfig.mandatory",
                                    "description": "",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "pcConfig.optional",
                                    "description": "Ex: [{DtlsSrtpKeyAgreement: true}]",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "offerConstraints",
                                    "description": "",
                                    "type": "JSON"
                                },
                                {
                                    "name": "offerConstraints.mandatory",
                                    "description": "Ex: {MozDontOfferDataChannel:true}",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "offerConstraints.optional",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                },
                                {
                                    "name": "sdpConstraints",
                                    "description": "",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sdpConstraints.mandatory",
                                    "description": "Ex: { 'OfferToReceiveAudio':true, 'OfferToReceiveVideo':true }",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "sdpConstraints.optional",
                                    "description": "",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 570,
            "description": "Internal array of peer connections",
            "itemtype": "attribute",
            "name": "_peerConnections",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 579,
            "description": "Internal array of peer informations",
            "itemtype": "attribute",
            "name": "_peerInformations",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 588,
            "description": "Internal array of dataChannels",
            "itemtype": "attribute",
            "name": "_dataChannels",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 597,
            "description": "Internal array of dataChannel peers",
            "itemtype": "attribute",
            "name": "_dataChannelPeers",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 606,
            "description": "The current ReadyState\n[Rel: Skyway.READY_STATE_CHANGE]",
            "itemtype": "attribute",
            "name": "_readyState",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 616,
            "description": "State if Channel is opened or not",
            "itemtype": "attribute",
            "name": "_channel_open",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 625,
            "description": "State if Room is locked or not",
            "itemtype": "attribute",
            "name": "_room_lock",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 634,
            "description": "State if User is in room or not",
            "itemtype": "attribute",
            "name": "_in_room",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 643,
            "description": "Stores the upload data chunks",
            "itemtype": "attribute",
            "name": "_uploadDataTransfers",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 652,
            "description": "Stores the upload data session information",
            "itemtype": "attribute",
            "name": "_uploadDataSessions",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 661,
            "description": "Stores the download data chunks",
            "itemtype": "attribute",
            "name": "_downloadDataTransfers",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 670,
            "description": "Stores the download data session information",
            "itemtype": "attribute",
            "name": "_downloadDataSessions",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 679,
            "description": "Stores the data transfers timeout",
            "itemtype": "attribute",
            "name": "_dataTransfersTimeout",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 688,
            "description": "Standard File Size of each chunk",
            "itemtype": "attribute",
            "name": "_chunkFileSize",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 698,
            "description": "Standard File Size of each chunk for Firefox",
            "itemtype": "attribute",
            "name": "_mozChunkFileSize",
            "type": "Integer",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 708,
            "description": "If ICE trickle should be disabled or not",
            "itemtype": "attribute",
            "name": "_enableIceTrickle",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 718,
            "description": "If DataChannel should be disabled or not",
            "itemtype": "attribute",
            "name": "_enableDataChannel",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 728,
            "description": "User stream settings. By default, all is false.",
            "itemtype": "attribute",
            "name": "_streamSettings",
            "type": "JSON",
            "default": "{\n  'audio' : false,\n  'video' : false\n}",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 743,
            "description": "Get information from server",
            "itemtype": "method",
            "name": "_requestServerInfo",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP Method",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "Path url to make request to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "Callback function after request is laoded",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "HTTP Params",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 775,
            "description": "Parse information from server",
            "itemtype": "method",
            "name": "_parseInfo",
            "params": [
                {
                    "name": "info",
                    "description": "Parsed Information from the server",
                    "type": "JSON"
                },
                {
                    "name": "self",
                    "description": "Skyway object",
                    "type": "Skyway"
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 834,
            "description": "Load information from server",
            "itemtype": "method",
            "name": "_loadInfo",
            "params": [
                {
                    "name": "self",
                    "description": "Skyway object",
                    "type": "Skyway"
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 905,
            "description": "To register a callback function to an event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skyway event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback everytime the event is fired.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkywayDemo.on('peerJoined', function (peerId, peerInfo) {\n     console.info(peerId + ' has joined the room');\n     console.log('Peer information are:');\n     console.info(peerInfo);\n  });"
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 925,
            "description": "To unregister a callback function from an event.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skyway event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback everytime the event is fired.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkywayDemo.off('peerJoined', callback);"
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 949,
            "description": "Trigger all the callbacks associated with an event\n- Note that extra arguments can be passed to the callback which\n  extra argument can be expected by callback is documented by each event.",
            "itemtype": "method",
            "name": "_trigger",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 978,
            "description": "Initialize Skyway\n- <b><i>IMPORTANT</i></b>: Please call this method to load all server\n  information before joining the room or doing anything else.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "Connection options or API Key ID",
                    "type": "String|JSON",
                    "props": [
                        {
                            "name": "apiKey",
                            "description": "API Key ID to identify with the Temasys backend server",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "Optional. The default room to connect to if there is\n  no room provided in {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
                            "type": "String"
                        },
                        {
                            "name": "roomServer",
                            "description": "Optional. Path to the Temasys backend server\n  If there's no room provided, default room would be used.",
                            "type": "String"
                        },
                        {
                            "name": "region",
                            "description": "Optional. The regional server that user chooses to use.\n  [Rel: Skyway.REGIONAL_SERVER]",
                            "type": "String"
                        },
                        {
                            "name": "iceTrickle",
                            "description": "Optional. The option to enable iceTrickle or not.\n  Default is true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "dataChannel",
                            "description": "Optional. The option to enable dataChannel or not.\n  Default is true.",
                            "type": "Boolean"
                        },
                        {
                            "name": "credentials",
                            "description": "Optional. Credentials options",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "The Start timing of the\n  meeting in Date ISO String",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "The duration of the meeting",
                                    "type": "Integer"
                                },
                                {
                                    "name": "credentials",
                                    "description": "The credentials required\n  to set the timing and duration of a meeting.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Note: Default room is apiKey when no room\n  // Example 1: To initalize without setting any default room.\n  SkywayDemo.init('apiKey');\n\n  // Example 2: To initialize with apikey, roomServer and defaultRoom\n  SkywayDemo.init({\n    'apiKey' : 'apiKey',\n    'roomServer' : 'http://xxxx.com',\n    'defaultRoom' : 'mainHangout'\n  });\n\n  // Example 3: To initialize with credentials to set startDateTime and\n  // duration of the room\n  // If you would like to set the start time and duration of the room,\n  // you have to generate the credentials. In this example, we use the\n  // CryptoJS library\n  // ------------------------------------------------------------------------\n  // Step 1: Generate the hash. It is created by using the roomname,\n  // duration and the timestamp (in ISO String format).\n  var hash = CryptoJS.HmacSHA1(roomname + '_' + duration + '_' +\n    (new Date()).toISOString(), token);\n  // ------------------------------------------------------------------------\n  // Step 2: Generate the Credentials. It is is generated by converting\n  // the hash to a Base64 string and then encoding it to a URI string.\n  var credentials = encodeURIComponent(hash.toString(CryptoJS.enc.Base64));\n  // ------------------------------------------------------------------------\n  // Step 3: Initialize Skyway\n  SkywayDemo.init({\n    'apiKey' : 'apiKey',\n    'roomServer' : 'http://xxxx.com',\n    'defaultRoom' : 'mainHangout'\n    'credentials' : {\n       'startDateTime' : (new Date()).toISOString(),\n       'duration' : 500,\n       'credentials' : credentials\n    }\n  });"
            ],
            "trigger": "readyStateChange",
            "required": 1,
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1107,
            "description": "Re-initialize Skyway signaling credentials.",
            "itemtype": "method",
            "name": "_reinit",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "roomserver",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "apiKey",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "room",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "region",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "iceTrickle",
                            "description": "",
                            "type": "Boolean"
                        },
                        {
                            "name": "dataChannel",
                            "description": "",
                            "type": "Boolean"
                        },
                        {
                            "name": "credentials",
                            "description": "",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "credentials",
                                    "description": "",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "Once everything is initialized.",
                    "type": "Function"
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1234,
            "description": "Updates the User information.\n- Please note that the custom data would be overrided so please call\n  {{#crossLink \"Skyway/getUserData:method\"}}getUserData(){{/crossLink}}\n  and then modify the information you want individually.\n- {{#crossLink \"Skyway/peerUpdated:event\"}}peerUpdated{{/crossLink}}\n  only fires after <b>setUserData()</b> is fired\n  after the user joins the room.",
            "itemtype": "method",
            "name": "setUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "User custom data",
                    "type": "JSON"
                }
            ],
            "example": [
                "\n  // Example 1: Intial way of setting data before user joins the room\n  SkywayDemo.setUserData({\n    displayName: 'Bobby Rays',\n    fbUserId: 'blah'\n  });\n\n // Example 2: Way of setting data after user joins the room\n  var userData = SkywayDemo.getUserData();\n  userData.userData.displayName = 'New Name';\n  userData.userData.fbUserId = 'another Id';\n  SkywayDemo.setUserData(userData);"
            ],
            "trigger": "peerUpdated",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1281,
            "description": "Gets the user information.",
            "itemtype": "method",
            "name": "getUserData",
            "return": {
                "description": "User information",
                "type": "JSON|"
            },
            "example": [
                "\n  var userInfo = SkywayDemo.getUserData();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1295,
            "description": "Gets the peer information.\n- If input peerId is user's id or empty, <b>getPeerInfo()</b>\n  would return user's peer information.",
            "itemtype": "method",
            "name": "getPeerInfo",
            "params": [
                {
                    "name": "peerId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Peer information",
                "type": "JSON"
            },
            "example": [
                "\n  // Example 1: To get other peer's information\n  var peerInfo = SkywayDemo.getPeerInfo(peerId);\n\n  // Example 2: To get own information\n  var userInfo = SkywayDemo.getPeerInfo();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1318,
            "description": "Event fired when a successfull connection channel has been established\nwith the signaling server",
            "itemtype": "event",
            "name": "channelOpen",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1325,
            "description": "Event fired when the channel has been closed.",
            "itemtype": "event",
            "name": "channelClose",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1331,
            "description": "Event fired when we received a message from the signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1338,
            "description": "Event fired when there was an error with the connection channel to the sig server.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1345,
            "description": "Event fired whether the room is ready for use",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "[Rel: Skyway.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error object thrown.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "status",
                            "description": "HTTP status when retrieving information.\n  May be empty for other errors.",
                            "type": "Integer"
                        },
                        {
                            "name": "content",
                            "description": "A short description of the error",
                            "type": "String"
                        },
                        {
                            "name": "errorCode",
                            "description": "The error code for the type of error\n  [Rel: Skyway.READY_STATE_CHANGE_ERROR]",
                            "type": "Integer"
                        }
                    ]
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1358,
            "description": "Event fired when a step of the handshake has happened. Usefull for diagnostic\nor progress bar.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "step",
                    "description": "The current handshake progress step.\n  [Rel: Skyway.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's handshake progress.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "JSON|Object|String"
                }
            ],
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1369,
            "description": "Event fired during ICE gathering",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The current ice candidate generation state.\n  [Rel: Skyway.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice candidate\n   generation state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1379,
            "description": "Event fired during Peer Connection state change",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The current peer connection state.\n  [Rel: Skyway.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had a peer connection state\n   change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1389,
            "description": "Event fired during ICE connection",
            "iceconnectionstate": "",
            "params": [
                {
                    "name": "state",
                    "description": "The current ice connection state.\n  [Rel: Skyway.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had an ice connection state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1399,
            "description": "Event fired when allowing webcam media stream fails",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "Error message or object thrown.",
                    "type": "Object|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1406,
            "description": "Event fired when allowing webcam media stream passes",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1413,
            "description": "Event fired when a peer joins the room. Inactive audio or video means that the\naudio is muted or video is muted.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer Information of the peer",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer stream settings",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer custom data",
                            "type": "String|JSON"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the Peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1435,
            "description": "Event fired when a peer information is updated. Inactive audio or video means that the\naudio is muted or video is muted.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that had information updaed.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer Information of the peer",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer stream settings",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer custom data",
                            "type": "String|JSON"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1457,
            "description": "Event fired when a peer leaves the room",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that left.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer Information of the peer",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer stream settings",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer custom data",
                            "type": "String|JSON"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1478,
            "description": "TODO Event fired when a peer joins the room",
            "itemtype": "event",
            "name": "presenceChanged",
            "params": [
                {
                    "name": "users",
                    "description": "The list of users",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1488,
            "description": "Event fired when a remote stream has become available.\n- This occurs after the user joins the room.\n- This is changed from <b>addPeerStream</b> event. Note that\n  <b>addPeerStream</b> is removed from the specs.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "stream",
                    "description": "MediaStream object.",
                    "type": "Object"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the stream.",
                    "type": "String"
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1500,
            "description": "Event fired when a message being broadcasted is received.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "Message object that is received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "Data that is broadcasted.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "sendPeerId",
                            "description": "PeerId of the sender peer.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "PeerId that is specifically\n  targeted to receive the message.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "Is data received a private message.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is data received from a data channel.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the sender peer.",
                    "type": "String"
                },
                {
                    "name": "isSelf",
                    "description": "Check if message is sent to self",
                    "type": "Boolean"
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1515,
            "description": "Event fired when a room lock status has changed.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "Is the room locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is locking/unlocking the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "Peer Information of the peer",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "settings",
                            "description": "Peer stream settings",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "Peer stream status.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "userData",
                            "description": "Peer custom data",
                            "type": "String|JSON"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "Is the peer self.",
                    "type": "Boolean"
                }
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1538,
            "description": "Event fired when a peer's datachannel state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The current datachannel state.\n  [Rel: Skyway.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of peer that has a datachannel state change.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1547,
            "description": "Event fired when a data transfer state has changed.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The current data transfer state.\n  [Rel: Skyway.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "TransferId of the data",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has a data\n  transfer state change.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "Transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "percentage",
                            "description": "The percetange of data being\n  uploaded / downloaded",
                            "type": "JSON"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "",
                            "type": "JSON"
                        },
                        {
                            "name": "data",
                            "description": "Blob data URL",
                            "type": "JSON"
                        },
                        {
                            "name": "name",
                            "description": "Blob data name",
                            "type": "JSON"
                        },
                        {
                            "name": "size",
                            "description": "Blob data size",
                            "type": "JSON"
                        },
                        {
                            "name": "message",
                            "description": "Error object thrown.",
                            "type": "JSON"
                        },
                        {
                            "name": "type",
                            "description": "Where the error message occurred.\n  [Rel: Skyway.DATA_TRANSFER_TYPE]",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1568,
            "description": "Event fired when the Signalling server responds to user regarding\nthe state of the room",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The action that is required for the current peer to\n  follow. [Rel: Skyway.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "Reason for the action",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1581,
            "description": "Fired when a datachannel is successfully connected.",
            "itemtype": "event",
            "name": "Datachannel: CONN",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "String"
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1590,
            "description": "Fired when a datachannel has a blob data send request.",
            "itemtype": "event",
            "name": "Datachannel: WRQ",
            "params": [
                {
                    "name": "userAgent",
                    "description": "The user's browser agent.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The blob data name.",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "The blob data size.",
                    "type": "Integer"
                },
                {
                    "name": "chunkSize",
                    "description": "The expected chunk size.",
                    "type": "Integer"
                },
                {
                    "name": "timeout",
                    "description": "The timeout in seconds.",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1602,
            "description": "Fired when a datachannel has a blob data send request acknowledgement.\n- 0: User accepts the request.\n- -1: User rejects the request.\n- Above 0: User acknowledges the blob data packet.",
            "itemtype": "event",
            "name": "Datachannel: ACK",
            "params": [
                {
                    "name": "ackN",
                    "description": "The acknowledge number.",
                    "type": "Integer"
                },
                {
                    "name": "userAgent",
                    "description": "The user's browser agent.",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1614,
            "description": "Fired when a datachannel transfer has an error occurred.",
            "itemtype": "event",
            "name": "Datachannel: ERROR",
            "params": [
                {
                    "name": "message",
                    "description": "The error message.",
                    "type": "String"
                },
                {
                    "name": "isSender",
                    "description": "If user's the uploader.",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1623,
            "description": "Fired when a datachannel chat has been received.",
            "itemtype": "event",
            "name": "Datachannel: CHAT",
            "params": [
                {
                    "name": "type",
                    "description": "If the message is a private or group message.\n- PRIVATE: This message is a private message targeted to a peer.\n- GROUP: This message is to be sent to all peers.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "PeerId of the sender.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message data or object.",
                    "type": "JSON|String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1637,
            "description": "Broadcast a message to all peers.\n- <b><i>WARNING</i></b>: Map arrays data would be lost when stringified\n  in JSON, so refrain from using map arrays.",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message data to send.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId of the peer to send a private\n  message data to.",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkywayDemo.sendMessage('Hi there!');\n\n  // Example 2: Send to a targeted peer\n  SkywayDemo.sendMessage('Hi there peer!', targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1676,
            "description": "Broadcasts to all P2P datachannel messages and broadcasts to a\npeer only when targetPeerId is provided.\n- This is ideal for sending strings or json objects lesser than 40KB.\n  For huge data, please check out\n  {{#crossLink \"Skyway/sendBlobData:method\"}}sendBlobData(){{/crossLink}}.\n- <b><i>WARNING</i></b>: Map arrays data would be lost when stringified\n  in JSON, so refrain from using map arrays.",
            "itemtype": "method",
            "name": "sendP2PMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message data to send.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "Optional. Provide if you want to send to\n  only one peer",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkywayDemo.sendP2PMessage('Hi there! This is from a DataChannel!');\n\n  // Example 2: Send to specific peer\n  SkywayDemo.sendP2PMessage('Hi there peer! This is from a DataChannel!', targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1718,
            "description": "Get the default webcam and microphone",
            "itemtype": "method",
            "name": "getUserMedia",
            "params": [
                {
                    "name": "options",
                    "description": "Optional. Media constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "",
                            "type": "JSON|Boolean",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Stereo option in audio",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "",
                            "type": "JSON|Boolean",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "Check out the types of [Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Default is to get both audio and video\n  // Example 1: Get both audio and video by default.\n  SkywayDemo.getUserMedia();\n\n  // Example 2: Get the audio stream only\n  SkywayDemo.getUserMedia({\n    'video' : false,\n    'audio' : true\n  });\n\n  // Example 3: Set the stream settings for the audio and video\n  SkywayDemo.getUserMedia({\n    'video' : {\n       'resolution': SkywayDemo.VIDEO_RESOLUTION.HD,\n       'frameRate': 50\n     },\n    'audio' : { stereo: true }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1811,
            "description": "Stream is available, let's throw the corresponding event with the stream attached.",
            "itemtype": "method",
            "name": "_onUserMediaSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The acquired stream",
                    "type": "MediaStream"
                },
                {
                    "name": "self",
                    "description": "A convenience pointer to the Skyway object for callbacks",
                    "type": "Skyway"
                }
            ],
            "trigger": "mediaAccessSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1838,
            "description": "getUserMedia could not succeed.",
            "itemtype": "method",
            "name": "_onUserMediaError",
            "params": [
                {
                    "name": "e",
                    "description": "error",
                    "type": "Object"
                },
                {
                    "name": "self",
                    "description": "A convenience pointer to the Skyway object for callbacks",
                    "type": "Skyway"
                }
            ],
            "trigger": "mediaAccessFailure",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1859,
            "description": "Handle every incoming message. If it's a bundle, extract single messages\n- Eventually handle the message(s) to\n  {{#crossLink \"Skyway/_processSingleMessage:method\"}}\n  _processSingleMessage(){{/crossLink}}",
            "itemtype": "method",
            "name": "_processSigMessage",
            "params": [
                {
                    "name": "messageString",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1881,
            "description": "This dispatch all the messages from the infrastructure to their respective handler",
            "itemtype": "method",
            "name": "_processingSingleMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1955,
            "description": "Signaling server error message",
            "itemtype": "method",
            "name": "_errorHandler",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the error message.",
                            "type": "String"
                        },
                        {
                            "name": "kind",
                            "description": "The error kind.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1971,
            "description": "Signaling server wants us to move out.",
            "itemtype": "method",
            "name": "_redirectHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "url",
                            "description": "Deprecated. Url to redirect to.",
                            "type": "String"
                        },
                        {
                            "name": "info",
                            "description": "The reason for redirect",
                            "type": "String"
                        },
                        {
                            "name": "action",
                            "description": "The action of the redirect\n  [Rel: Skyway.SYSTEM_ACTION]",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "systemAction",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 1990,
            "description": "User information is updated.",
            "itemtype": "method",
            "name": "_updateUserEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the\n  updated event.",
                            "type": "String"
                        },
                        {
                            "name": "userData",
                            "description": "The peer's user data.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2013,
            "description": "Room lock status is changed.",
            "itemtype": "method",
            "name": "_roomLockEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the\n  updated room lock status.",
                            "type": "String"
                        },
                        {
                            "name": "lock",
                            "description": "If room is locked or not",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "roomLock",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2033,
            "description": "Peer Audio is muted/unmuted.",
            "itemtype": "method",
            "name": "_muteAudioEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending\n  their own updated audio stream status.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "If audio stream is muted or not",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2056,
            "description": "Peer Video is muted/unmuted.",
            "itemtype": "method",
            "name": "_muteVideoEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending\n  their own updated video streams status.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "If video stream is muted or not",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2079,
            "description": "A peer left, let's clean the corresponding connection, and trigger an event.",
            "itemtype": "method",
            "name": "_byeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that has left the room.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2096,
            "description": "Throw an event with the received private message",
            "itemtype": "method",
            "name": "_privateMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The data broadcasted",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "CredentialId of the room",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending a private\n  broadcast message",
                            "type": "String"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is the message sent from datachannel",
                            "type": "Boolean"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "privateMessage",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2121,
            "description": "Throw an event with the received private message",
            "itemtype": "method",
            "name": "_publicMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The data broadcasted",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "CredentialId of the room",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending a private\n  broadcast message",
                            "type": "String"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "Is the message sent from datachannel",
                            "type": "Boolean"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "publicMessage",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2146,
            "description": "Actually clean the peerconnection and trigger an event.\nCan be called by _byHandler and leaveRoom.",
            "itemtype": "method",
            "name": "_removePeer",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that has left.",
                    "type": "String"
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2164,
            "description": "We just joined a room! Let's send a nice message to all to let them know I'm in.",
            "itemtype": "method",
            "name": "_inRoomHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "sid",
                            "description": "PeerId of self.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is",
                            "type": "String"
                        },
                        {
                            "name": "pc_config",
                            "description": "The peerconnection configuration\n  sending the joinRoom message.",
                            "type": "JSON"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2206,
            "description": "Someone just entered the room. If we don't have a connection with him/her,\nsend him a welcome. Handshake step 2 and 3.",
            "itemtype": "method",
            "name": "_enterHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the enter shake.",
                            "type": "String"
                        },
                        {
                            "name": "agent",
                            "description": "Peer's browser agent.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "Peer's browser version.",
                            "type": "String"
                        },
                        {
                            "name": "userInfo",
                            "description": "Peer's user information.",
                            "type": "String",
                            "props": [
                                {
                                    "name": "settings",
                                    "description": "Peer's stream settings",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "settings.video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "Peer stream status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "If peer's audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "If peer's video stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "userData",
                                    "description": "Peer custom data",
                                    "type": "String|JSON"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "description": "Message type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2270,
            "description": "We have just received a welcome. If there is no existing connection with this peer,\ncreate one, then set the remotedescription and answer.",
            "itemtype": "method",
            "name": "_welcomeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the welcome shake.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "targetPeerId",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "Peer to receive only",
                            "type": "Boolean"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "Option to enable Ice trickle or not",
                            "type": "Boolean"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "Option to enable DataChannel or not",
                            "type": "Boolean"
                        },
                        {
                            "name": "userInfo",
                            "description": "Peer Skyway._user.info data.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "settings",
                                    "description": "Peer stream settings",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "settings.video",
                                    "description": "",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "",
                                    "type": "Integer"
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "Peer stream status.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "If Peer's Audio stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "If Peer's Video stream is muted.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "userData",
                                    "description": "Peer custom data",
                                    "type": "String|JSON"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "Browser agent",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Message type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2326,
            "description": "We have just received an offer. If there is no existing connection with this peer,\ncreate one, then set the remotedescription and answer.",
            "itemtype": "method",
            "name": "_offerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId of the connected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "PeerId of the peer that is sending the offer shake.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "Offer sessionDescription",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The type of message received.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2361,
            "description": "We have succesfully received an offer and set it locally. This function will take care\nof cerating and sendng the corresponding answer. Handshake step 4.",
            "itemtype": "method",
            "name": "_doAnswer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send answer to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2389,
            "description": "We have a peer, this creates a peerconnection object to handle the call.\nif we are the initiator, we then starts the O/A handshake.",
            "itemtype": "method",
            "name": "_openPeer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer we should connect to.",
                    "type": "String"
                },
                {
                    "name": "peerAgentBrowser",
                    "description": "Peer's browser",
                    "type": "String"
                },
                {
                    "name": "toOffer",
                    "description": "Wether we should start the O/A or wait.",
                    "type": "Boolean"
                },
                {
                    "name": "receiveOnly",
                    "description": "Should they only receive?",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2422,
            "description": "Sends our Local MediaStream to other Peers.\nBy default, it sends all it's other stream",
            "itemtype": "method",
            "name": "_addLocalStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer to send local stream to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2449,
            "description": "The remote peer advertised streams, that we are forwarding to the app. This is part\nof the peerConnection's addRemoteDescription() API's callback.",
            "itemtype": "method",
            "name": "_onRemoteStreamAdded",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer that has remote stream to send.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "This is provided directly by the peerconnection API.",
                    "type": "Event"
                }
            ],
            "trigger": "incomingStream",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2464,
            "description": "It then sends it to the peer. Handshake step 3 (offer) or 4 (answer)",
            "itemtype": "method",
            "name": "_doCall",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send offer to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2495,
            "description": "Finds a line in the SDP and returns it.\n- To set the value to the line, add an additional parameter to the method.",
            "itemtype": "method",
            "name": "_findSDPLine",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                },
                {
                    "name": "condition",
                    "description": "The conditions.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "Value to set Sdplines to",
                    "type": "String"
                }
            ],
            "return": {
                "description": "[index, line] - Returns the sdpLines based on the condition",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2522,
            "description": "Adds stereo feature to the SDP.\n- This requires OPUS to be enabled in the SDP or it will not work.",
            "itemtype": "method",
            "name": "_addStereo",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Updated version with Stereo feature",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2552,
            "description": "Set Audio, Video and Data Bitrate in SDP",
            "itemtype": "method",
            "name": "_setSDPBitrate",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "Sdp received.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Updated version with custom Bandwidth settings",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2583,
            "description": "This takes an offer or an aswer generated locally and set it in the peerconnection\nit then sends it to the peer. Handshake step 3 (offer) or 4 (answer)",
            "itemtype": "method",
            "name": "_setLocalAndSendMessage",
            "params": [
                {
                    "name": "targetMid",
                    "description": "PeerId of the peer to send offer/answer to.",
                    "type": "String"
                },
                {
                    "name": "sessionDescription",
                    "description": "This should be provided by the peerconnection API.\n  User might 'tamper' with it, but then , the setLocal may fail.",
                    "type": "JSON"
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2646,
            "description": "Sets the STUN server specially for Firefox for ICE Connection.",
            "itemtype": "method",
            "name": "_setFirefoxIceServers",
            "params": [
                {
                    "name": "config",
                    "description": "Ice configuration servers url object.",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "Updated configuration",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2683,
            "description": "Waits for MediaStream.\n- Once the stream is loaded, callback is called\n- If there's not a need for stream, callback is called",
            "itemtype": "method",
            "name": "_waitForMediaStream",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback after requested constraints are loaded.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "user",
                            "description": "Optional. User custom data.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Enabled stereo or not",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Bandwidth settings",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "video",
                                    "description": "Video Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "data",
                                    "description": "Data Bandwidth",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2733,
            "description": "Opens or closes existing MediaStreams.",
            "itemtype": "method",
            "name": "_setStreams",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "Enable audio or not",
                            "type": "JSON"
                        },
                        {
                            "name": "video",
                            "description": "Enable video or not",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "return": {
                "description": "Whether we should re-fetch mediaStreams or not",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2776,
            "description": "Creates a peerconnection to communicate with the peer whose ID is 'targetMid'.\nAll the peerconnection callbacks are set up here. This is a quite central piece.",
            "itemtype": "method",
            "name": "_createPeerConnection",
            "params": [
                {
                    "name": "targetMid",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created peer connection object.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2857,
            "description": "A candidate has just been generated (ICE gathering) and will be sent to the peer.\nPart of connection establishment.",
            "itemtype": "method",
            "name": "_onIceCandidate",
            "params": [
                {
                    "name": "targetMid",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "This is provided directly by the peerconnection API.",
                    "type": "Event"
                }
            ],
            "trigger": "candidateGenerationState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2903,
            "description": "Handles the reception of a candidate. handshake done, connection ongoing.",
            "itemtype": "method",
            "name": "_candidateHandler",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "TargetMid.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "targetPeerId",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "IceCandidate Id",
                            "type": "String"
                        },
                        {
                            "name": "candidate",
                            "description": "IceCandidate object",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "IceCandidate label",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Message type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2950,
            "description": "Handles the reception of an answer (to a previous offer). handshake step 4.",
            "itemtype": "method",
            "name": "_answerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "RoomId",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "TargetMid.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "targetPeerId",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "Answer sessionDescription",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Message type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 2980,
            "description": "Sends a message to the signaling server.\n- Not to be confused with method\n  {{#crossLink \"Skyway/sendMessage:method\"}}sendMessage(){{/crossLink}}\n  that broadcasts messages. This is for sending socket messages.",
            "itemtype": "method",
            "name": "_sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3000,
            "description": "Initiate a socket signaling connection.",
            "itemtype": "method",
            "name": "_openChannel",
            "trigger": "channelMessage, channelOpen, channelError, channelClose",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3049,
            "description": "Closes the socket signaling connection.",
            "itemtype": "method",
            "name": "_closeChannel",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3064,
            "description": "Create a DataChannel. Only SCTPDataChannel support",
            "itemtype": "method",
            "name": "_createDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer which the datachannel is connected to",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired when datachannel is created.",
                    "type": "Function"
                },
                {
                    "name": "dc",
                    "description": "The datachannel object received.",
                    "type": "Object"
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3116,
            "description": "Checks datachannel ready state.\n- If ready, it sends a\n  {{#crossLink \"Skyway/CONN:event\"}}CONN{{/crossLink}}.",
            "itemtype": "method",
            "name": "_checkDataChannelStatus",
            "params": [
                {
                    "name": "dc",
                    "description": "The datachannel object.",
                    "type": "Object"
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3140,
            "description": "Sends data to the datachannel.",
            "itemtype": "method",
            "name": "_sendDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's datachannel to send data.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to send.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3177,
            "description": "Obtains the peerId of the peer connected to the datachannel.",
            "itemtype": "method",
            "name": "_dataChannelPeer",
            "params": [
                {
                    "name": "channel",
                    "description": "The datachannel name.",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "access": "private",
            "tagname": "",
            "deprecated": true,
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3190,
            "description": "Closes the datachannel.",
            "itemtype": "method",
            "name": "_closeDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer's datachannel to close.",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3209,
            "description": "Handles all datachannel protocol events.",
            "itemtype": "method",
            "name": "_dataChannelHandler",
            "params": [
                {
                    "name": "data",
                    "description": "The data received from datachannel.",
                    "type": "String|Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3250,
            "description": "The user receives a blob request.\nFrom here, it's up to the user to accept or reject it",
            "itemtype": "method",
            "name": "_dataChannelWRQHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the request.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3286,
            "description": "User's response to accept or reject file.",
            "itemtype": "method",
            "name": "respondBlobRequest",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is expected to receive\n  the request response.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "Accept the Blob download request or not.",
                    "type": "Boolean"
                }
            ],
            "trigger": "dataTransferState",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3313,
            "description": "The user receives an acknowledge of the blob request.",
            "itemtype": "method",
            "name": "_dataChannelACKHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the acknowledgement.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3368,
            "description": "The user receives a datachannel broadcast message.",
            "itemtype": "method",
            "name": "_dataChannelCHATHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending a broadcast message.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3416,
            "description": "The user receives a timeout error.",
            "itemtype": "method",
            "name": "_dataChannelERRORHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the error.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from datachannel.",
                    "type": "Array"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3440,
            "description": "This is when the data is sent from the sender to the receiving user.",
            "itemtype": "method",
            "name": "_dataChannelDATAHandler",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the peer that is sending the data.",
                    "type": "String"
                },
                {
                    "name": "dataString",
                    "description": "The data received.",
                    "type": "ArrayBuffer|Blob|String"
                },
                {
                    "name": "dataType",
                    "description": "The data type received from datachannel.\n  [Rel: Skyway.DATA_TRANSFER_DATA_TYPE]",
                    "type": "String"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3518,
            "description": "Sets the datachannel timeout.\n- If timeout is met, it will send the 'ERROR' message",
            "itemtype": "method",
            "name": "_setDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the datachannel to set timeout.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The timeout to set in seconds.",
                    "type": "Integer"
                },
                {
                    "name": "isSender",
                    "description": "Is peer the sender or the receiver?",
                    "type": "Boolean"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3555,
            "description": "Clears the datachannel timeout.",
            "itemtype": "method",
            "name": "_clearDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "PeerId of the datachannel to clear timeout.",
                    "type": "String"
                },
                {
                    "name": "isSender",
                    "description": "Is peer the sender or the receiver?",
                    "type": "Boolean"
                },
                {
                    "name": "self",
                    "description": "Skyway object.",
                    "type": "Skyway"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3573,
            "description": "Converts base64 string to raw binary data.\n- Doesn't handle URLEncoded DataURIs\n- See StackOverflow answer #6850276 for code that does this\nThis is to convert the base64 binary string to a blob",
            "author": "Code from devnull69 @ stackoverflow.com",
            "itemtype": "method",
            "name": "_base64ToBlob",
            "params": [
                {
                    "name": "dataURL",
                    "description": "Blob base64 dataurl.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3596,
            "description": "Chunks blob data into chunks.",
            "itemtype": "method",
            "name": "_chunkFile",
            "params": [
                {
                    "name": "blob",
                    "description": "The blob data to chunk.",
                    "type": "Blob"
                },
                {
                    "name": "blobByteSize",
                    "description": "The blob data size.",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3625,
            "description": "Removes non-alphanumeric characters from a string.",
            "itemtype": "method",
            "name": "_stripNonAlphanumeric",
            "params": [
                {
                    "name": "input",
                    "description": "String to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Updated string from non-alphanumeric characters",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3651,
            "description": "Check if a string consist of only alphanumeric characters.\n- If alphanumeric characters are found, it will return true,\n  else it returns false.",
            "itemtype": "method",
            "name": "_alphanumeric",
            "params": [
                {
                    "name": "input",
                    "description": "String to check.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "If string contains only alphanumeric characters.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3669,
            "description": "Sends blob data to peer(s).\n- Note that peers have the option to download or reject receiving the blob data.\n- This method is ideal for sending files.\n- To send a private file to a peer, input the peerId after the\n  data information.",
            "itemtype": "method",
            "name": "sendBlobData",
            "params": [
                {
                    "name": "data",
                    "description": "The blob data to be sent over.",
                    "type": "Blob"
                },
                {
                    "name": "dataInfo",
                    "description": "The data information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "transferId",
                            "description": "TransferId of the data.",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "Data timeout to wait for packets.\n  [Default is 60].",
                            "type": "Integer"
                        },
                        {
                            "name": "size",
                            "description": "Data size",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId targeted to receive data.\n  Leave blank to send to all peers.",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Send file to all peers connected\n  SkywayDemo.sendBlobData(file, {\n    'name' : file.name,\n    'size' : file.size,\n    'timeout' : 67\n  });\n\n  // Send file to individual peer\n  SkywayDemo.sendBlobData(blob, {\n    'name' : 'My Html',\n    'size' : blob.size,\n    'timeout' : 87\n  }, targetPeerId);"
            ],
            "trigger": "dataTransferState",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3755,
            "description": "Sends blob data to individual peer.\n- This sends the {{#crossLink \"Skyway/WRQ:event\"}}WRQ{{/crossLink}}\n  and to initiate the TFTP protocol.",
            "itemtype": "method",
            "name": "_sendBlobDataToPeer",
            "params": [
                {
                    "name": "data",
                    "description": "The blob data to be sent over.",
                    "type": "Blob"
                },
                {
                    "name": "dataInfo",
                    "description": "The data information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "transferId",
                            "description": "TransferId of the data.",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "Data name.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "Data timeout to wait for packets.\n  [Default is 60].",
                            "type": "Integer"
                        },
                        {
                            "name": "size",
                            "description": "Data size",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "targetPeerId",
                    "description": "PeerId targeted to receive data.\n  Leave blank to send to all peers.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3793,
            "description": "Handles all the room lock events.",
            "itemtype": "method",
            "name": "_handleLock",
            "params": [
                {
                    "name": "lockAction",
                    "description": "Lock action to send to server for response.\n  [Rel: SkywayDemo.LOCK_ACTION]",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback to return the response after\n  everything's loaded.",
                    "type": "Function"
                }
            ],
            "trigger": "roomLock",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3843,
            "description": "Handles all audio and video mute events.\n- If there is no available audio or video stream, it will call\n  {{#crossLink \"Skyway/leaveRoom:method\"}}leaveRoom(){{/crossLink}}\n  and call {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  to join user in the room to send their audio and video stream.",
            "itemtype": "method",
            "name": "_handleAV",
            "params": [
                {
                    "name": "mediaType",
                    "description": "Media types expected to receive.\n  [Rel: 'audio' or 'video']",
                    "type": "String"
                },
                {
                    "name": "enableMedia",
                    "description": "Enable it or disable it",
                    "type": "Boolean"
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3906,
            "description": "Lock the room to prevent peers from joining.",
            "itemtype": "method",
            "name": "lockRoom",
            "example": [
                "\n  SkywayDemo.lockRoom();"
            ],
            "trigger": "lockRoom",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3918,
            "description": "Unlock the room to allow peers to join.",
            "itemtype": "method",
            "name": "unlockRoom",
            "example": [
                "\n  SkywayDemo.unlockRoom();"
            ],
            "trigger": "lockRoom",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3930,
            "description": "Get the lock status of the room.\n- <b><i>WARNING</i></b>: If there's too many peers toggling the\n  room lock feature at the same time, the returned results may not\n  be completely correct since while retrieving the room lock status,\n  another peer may be toggling it.",
            "itemtype": "method",
            "name": "isRoomLocked",
            "example": [
                "\n  if(SkywayDemo.isRoomLocked()) {\n    SkywayDemo.unlockRoom();\n  } else {\n    SkywayDemo.lockRoom();\n  }"
            ],
            "beta": 1,
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3952,
            "description": "Enable microphone.\n- If microphone is not enabled from the beginning, user would have to reinitate the\n  {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  process and ask for microphone again.",
            "itemtype": "method",
            "name": "enableAudio",
            "trigger": "peerUpdated",
            "example": [
                "\n  SkywayDemo.enableAudio();"
            ],
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3967,
            "description": "Disable microphone.\n- If microphone is not enabled from the beginning, there is no effect.",
            "itemtype": "method",
            "name": "disableAudio",
            "example": [
                "\n  SkywayDemo.disableAudio();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3980,
            "description": "Enable webcam video.\n- If webcam is not enabled from the beginning, user would have to reinitate the\n  {{#crossLink \"Skyway/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  process and ask for webcam again.",
            "itemtype": "method",
            "name": "enableVideo",
            "example": [
                "\n  SkywayDemo.enableVideo();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 3995,
            "description": "Disable webcam video.\n- If webcam is not enabled from the beginning, there is no effect.",
            "itemtype": "method",
            "name": "disableVideo",
            "example": [
                "\n  SkywayDemo.disableVideo();"
            ],
            "trigger": "peerUpdated",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 4008,
            "description": "Parse stream settings",
            "itemtype": "method",
            "name": "_parseStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "user",
                            "description": "Optional. User custom data.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Enabled stereo or not",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Bandwidth settings",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "video",
                                    "description": "Video Bandwidth",
                                    "type": "String"
                                },
                                {
                                    "name": "data",
                                    "description": "Data Bandwidth",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 4097,
            "description": "User to join the room.\n- You may call {{#crossLink \"Skyway/getUserMedia:method\"}}\n  getUserMedia(){{/crossLink}} first if you want to get\n  MediaStream and joining Room seperately.\n- If <b>joinRoom()</b> parameters is empty, it simply uses\n  any previous media or user data settings.",
            "itemtype": "method",
            "name": "joinRoom",
            "params": [
                {
                    "name": "room",
                    "description": "Room to join",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional. Media Constraints.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "user",
                            "description": "Optional. User custom data.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "This call requires audio",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "Enabled stereo or not",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "This call requires video",
                            "type": "Boolean|JSON",
                            "props": [
                                {
                                    "name": "resolution",
                                    "description": "[Rel: Skyway.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "Video width",
                                    "type": "Integer"
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "Video height",
                                    "type": "Integer"
                                },
                                {
                                    "name": "frameRate",
                                    "description": "Mininum frameRate of Video",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "Bandwidth settings",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "Audio Bandwidth",
                                    "type": "Integer"
                                },
                                {
                                    "name": "video",
                                    "description": "Video Bandwidth",
                                    "type": "Integer"
                                },
                                {
                                    "name": "data",
                                    "description": "Data Bandwidth",
                                    "type": "Integer"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // To just join the default room without any video or audio\n  // Note that calling joinRoom without any parameters\n  // Still sends any available existing MediaStreams allowed.\n  // See Examples 2, 3, 4 and 5 etc to prevent video or audio stream\n  SkywayDemo.joinRoom();\n\n  // To just join the default room with bandwidth settings\n  SkywayDemo.joinRoom({\n    'bandwidth': {\n      'data': 14440\n    }\n  });\n\n  // Example 1: To call getUserMedia and joinRoom seperately\n  SkywayDemo.getUserMedia();\n  SkywayDemo.on('mediaAccessSuccess', function (stream)) {\n    attachMediaStream($('.localVideo')[0], stream);\n    SkywayDemo.joinRoom();\n  });\n\n  // Example 2: Join a room without any video or audio\n  SkywayDemo.joinRoom('room');\n\n  // Example 3: Join a room with audio only\n  SkywayDemo.joinRoom('room', {\n    'audio' : true,\n    'video' : false\n  });\n\n  // Example 4: Join a room with prefixed video width and height settings\n  SkywayDemo.joinRoom('room', {\n    'audio' : true,\n    'video' : {\n      'resolution' : {\n        'width' : 640,\n        'height' : 320\n      }\n    }\n  });\n\n  // Example 5: Join a room with userData and settings with audio, video and bandwidth\n  SkwayDemo.joinRoom({\n    'user': {\n      'item1': 'My custom data',\n      'item2': 'Put whatever, string or JSON or array'\n    },\n    'audio' : {\n       'stereo' : true\n     },\n    'video' : {\n       'res' : SkywayDemo.VIDEO_RESOLUTION.VGA,\n       'frameRate' : 50\n    },\n    'bandwidth' : {\n       'audio' : 48,\n       'video' : 256,\n       'data' : 14480\n     }\n  });"
            ],
            "trigger": "peerJoined",
            "since": "0.2.0",
            "class": "Skyway"
        },
        {
            "file": "source\\skyway.js",
            "line": 4228,
            "description": "User to leave the room.",
            "itemtype": "method",
            "name": "leaveRoom",
            "example": [
                "\n  SkywayDemo.leaveRoom();"
            ],
            "trigger": "peerLeft, channelClose",
            "since": "0.1.0",
            "class": "Skyway"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:775"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:834"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:978"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1107"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1234"
        },
        {
            "message": "unknown tag: iceconnectionstate",
            "line": " source\\skyway.js:1389"
        },
        {
            "message": "param name missing: {String}",
            "line": " source\\skyway.js:1581"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1581"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1637"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1676"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1718"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1811"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1838"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1971"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:1990"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2013"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2033"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2056"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2079"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2096"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2121"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2146"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2164"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2206"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2270"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2326"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2449"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2583"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2857"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:2950"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3000"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3064"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3116"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3250"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3286"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3313"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3368"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3416"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3440"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3669"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3793"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3843"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3906"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3918"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3952"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3967"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3980"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:3995"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:4097"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source\\skyway.js:4228"
        },
        {
            "message": "Missing item type\nEvent fired during ICE connection",
            "line": " source\\skyway.js:1389"
        }
    ]
}