{
    "project": {
        "name": "skylinkjs",
        "description": "SkylinkJS is an open-source client-side library for your web-browser that enables any website to easily leverage the capabilities of WebRTC and its direct data streaming powers between peers for audio/video conferencing or file transfer.",
        "version": "0.6.1",
        "url": "https://temasys.github.io/"
    },
    "files": {
        "source/template/header.js": {
            "name": "source/template/header.js",
            "modules": {},
            "classes": {
                "Skylink": 1
            },
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-channel.js": {
            "name": "source/data-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-process.js": {
            "name": "source/data-process.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-transfer.js": {
            "name": "source/data-transfer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-candidate.js": {
            "name": "source/ice-candidate.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-connection.js": {
            "name": "source/ice-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-connection.js": {
            "name": "source/peer-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-data.js": {
            "name": "source/peer-data.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-handshake.js": {
            "name": "source/peer-handshake.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-privileged.js": {
            "name": "source/peer-privileged.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-connection.js": {
            "name": "source/room-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-init.js": {
            "name": "source/room-init.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-debug.js": {
            "name": "source/skylink-debug.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-events.js": {
            "name": "source/skylink-events.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-channel.js": {
            "name": "source/socket-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-message.js": {
            "name": "source/socket-message.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-media.js": {
            "name": "source/stream-media.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-sdp.js": {
            "name": "source/stream-sdp.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Skylink": {
            "name": "Skylink",
            "shortname": "Skylink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/template/header.js",
            "line": 94,
            "description": "<h2>Before using Skylink</h2>\nPlease invoke {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}} method\nfirst to initialise the Application Key before using any functionalities in Skylink.\n\nIf you do not have an Application Key, you may\n[register for a Skylink platform developer account](http://developer.temasys.com.sg).<br>\n\nTo get started you may [visit the getting started page](https://temasys.github.io/how-to/2014/08/08/\nGetting_started_with_WebRTC_and_SkylinkJS/), or alternatively fork a ready made demo application\nthat uses Skylink Web SDK at [getaroom.io](http://getaroom.io/).\n\nFor tips on writing better application with Skylink or troubleshooting issues, please\n  [click here](http://support.temasys.com.sg/support/solutions/folders/5000267498).",
            "is_constructor": 1,
            "example": [
                "\n  // Here's a simple example on how you can start using Skylink\n  var SkylinkDemo = new Skylink();\n\n  // Subscribe all events first before init()\n  SkylinkDemo.on(\"incomingStream\", function (peerId, stream, peerInfo, isSelf) {\n    if (isSelf) {\n      attachMediaStream(document.getElementById(\"selfVideo\"), stream);\n    } else {\n      var peerVideo = document.createElement(\"video\");\n      peerVideo.id = peerId;\n      peerVideo.autoplay = \"autoplay\";\n      document.getElementById(\"peersVideo\").appendChild(peerVideo);\n      attachMediaStream(peerVideo, stream);\n    }\n  });\n\n  SkylinkDemo.on(\"peerLeft\", function (peerId, peerInfo, isSelf) {\n    if (!isSelf) {\n      var peerVideo = document.getElementById(peerId);\n      // do a check if peerVideo exists first\n      if (peerVideo) {\n        document.getElementById(\"peersVideo\").removeChild(peerVideo);\n      } else {\n        console.error(\"Peer video for \" + peerId + \" is not found.\");\n      }\n    }\n  });\n\n // never call joinRoom in readyStateChange event subscription.\n // call joinRoom after init() callback if you want to joinRoom instantly.\n SkylinkDemo.on(\"readyStateChange\", function (state, room) {\n   console.log(\"Room (\" + room + \") state: \", room);\n })\n\n // always remember to call init()\n SkylinkDemo.init(\"YOUR_APP_KEY_HERE\", function (error, success) {\n   // do a check for error or success\n   if (error) {\n     console.error(\"Init failed: \", error);\n   } else {\n     SkylinkDemo.joinRoom(\"my_room\", {\n       userData: \"My Username\",\n       audio: true,\n       video: true\n     });\n   }\n });"
            ],
            "since": "0.5.0"
        }
    },
    "classitems": [
        {
            "file": "source/template/header.js",
            "line": 166,
            "description": "The current version of Skylink Web SDK.",
            "itemtype": "attribute",
            "name": "VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 176,
            "description": "Helper function that generates an Unique ID (UUID) string.",
            "itemtype": "method",
            "name": "generateUUID",
            "return": {
                "description": "Generated Unique ID (UUID) string.",
                "type": "String"
            },
            "example": [
                "\n   // Get Unique ID (UUID)\n   var uuid = SkylinkDemo.generateUUID();"
            ],
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 1,
            "description": "The list of Skylink DataChannel connection triggered states.\nRefer to [w3c WebRTC Specification Draft](http://w3c.github.io/webrtc-pc/#idl-def-RTCDataChannelState).<br>\n<code>ERROR</code> state is a provided state by Skylink to\n  inform exception in RTCDataChannel error handler.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "CONNECTING",
                    "description": "Attempting to establish a connection.",
                    "type": "String"
                },
                {
                    "name": "OPEN",
                    "description": "Connection is established.",
                    "type": "String"
                },
                {
                    "name": "CLOSING",
                    "description": "Connection is closing.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "Connection is closed.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Connection have met with an exception.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "DataChannel",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 26,
            "description": "The types of Skylink DataChannel that serves different functionalities.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "MESSAGING",
                    "description": "DataChannel that is used for messaging only.\n  This is the sole channel for sending P2P messages in\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.\n  This connection will always be kept alive until the PeerConnection has\n  ended.",
                    "type": "String"
                },
                {
                    "name": "DATA",
                    "description": "DataChannel that is used temporarily for a data transfer.\n  This is using caused by methods\n  {{#crossLink \"Skylink/sendBlobData:method\"}}sendBlobData(){{/crossLink}}\n  and {{#crossLink \"Skylink/sendURLData:method\"}}sendURLData(){{/crossLink}}.\n  This connection will be closed once the transfer has completed or terminated.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "DataChannel",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 50,
            "description": "The flag that indicates if PeerConnections should have any\n  DataChannel connections.",
            "itemtype": "attribute",
            "name": "_enableDataChannel",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataChannel",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 64,
            "description": "Stores the list of DataChannel connections.",
            "itemtype": "attribute",
            "name": "_dataChannels",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The list of DataChannel connections with the\n  associated PeerConnection.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "main",
                            "description": "RTCDataChannel connection object\n  that is used for messaging only associated with the PeerConnection.\n  This is the sole channel for sending P2P messages in\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.\n  This connection will always be kept alive until the PeerConnection has\n  ended. The channel ID for this reserved key is <code>\"main\"</code>.",
                            "type": "Object"
                        },
                        {
                            "name": "(#channelName)",
                            "description": "RTCDataChannel connection\n  object that is used temporarily for a data transfer associated with the\n  PeerConnection. This is using caused by methods\n  {{#crossLink \"Skylink/sendBlobData:method\"}}sendBlobData(){{/crossLink}}\n  and {{#crossLink \"Skylink/sendURLData:method\"}}sendURLData(){{/crossLink}}.\n  This connection will be closed once the transfer has completed or terminated.\n  The channel ID is usually the data transfer ID.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "UNKNOWN",
                    "description": ""
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataChannel",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 92,
            "description": "Starts a DataChannel connection with a PeerConnection. If the\n  DataChannel is provided in the parameter, it simply appends\n  event handlers to check the current state of the DataChannel.",
            "itemtype": "method",
            "name": "_createDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to start the\n  DataChannel with or associate the provided DataChannel object\n  connection with.",
                    "type": "String"
                },
                {
                    "name": "channelType",
                    "description": "The DataChannel functionality type.\n  [Rel: Skylink.DATA_CHANNEL_TYPE]",
                    "type": "String"
                },
                {
                    "name": "dataChannel",
                    "description": "The RTCDataChannel object received\n  in the PeerConnection <code>.ondatachannel</code> event.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "customChannelName",
                    "description": "The custom RTCDataChannel label\n  name to identify the different opened channels.",
                    "type": "String"
                }
            ],
            "trigger": "dataChannelState",
            "return": {
                "description": "The DataChannel connection object associated with\n  the provided PeerConnection ID.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "component": "DataChannel",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 269,
            "description": "Sends data over the DataChannel associated with the PeerConnection.\nThe current supported data type is <code>string</code>. <code>Blob</code>,\n  <code>ArrayBuffer</code> types support is not yet currently handled or\n  implemented.",
            "itemtype": "method",
            "name": "_sendDataChannelMessage",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to send the data to the\n  associated DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to send over. <code>string</code> is only\n  used to send binary data string over. <code>JSON</code> is primarily used\n  for the {{#crossLink \"Skylink/DT_PROTOCOL_VERSION:attribute\"}}DT Protocol{{/crossLink}}\n  that Skylink follows for P2P messaging and transfers.",
                    "type": "JSON|String"
                },
                {
                    "name": "channelKey",
                    "description": "The DataChannel ID of the connection\n  to send the data over to. The datachannel to send messages to. By default,\n  if the DataChannel ID is not provided, the DataChannel connection associated\n  with the ID <code>\"main\"</code> would be used.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"main\""
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "component": "DataChannel",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 342,
            "description": "Stops DataChannel connection(s) associated with a PeerConnection\n  and remove any object references to the DataChannel connection(s).",
            "itemtype": "method",
            "name": "_closeDataChannel",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the DataChannel\n  connection(s) to close.",
                    "type": "String"
                },
                {
                    "name": "channelName",
                    "description": "The targeted DataChannel ID to close the\n  connection with. If channelName is not provided, all associated DataChannel\n  connections with the PeerConnection would be closed.",
                    "type": "String",
                    "optional": true
                }
            ],
            "trigger": "dataChannelState",
            "access": "private",
            "tagname": "",
            "component": "DataChannel",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 1,
            "description": "The fixed data chunk size for\n  [<code>Blob</code>](https://developer.mozilla.org/en/docs/Web/API/Blob)\n  data type for transfers using DataChannel connection.",
            "itemtype": "attribute",
            "name": "_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "component": "DataProcess",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 16,
            "description": "The fixed data chunk size for\n  [<code>dataURL</code>](https://developer.mozilla.org/en-US/docs/Web/HTTP/data_URIs)\n  (which is a type of \"string\" and known as data URIs)\n  data type for transfers using DataChannel connection.",
            "itemtype": "attribute",
            "name": "_CHUNK_DATAURL_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "component": "DataProcess",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 32,
            "description": "The fixed data chunk size for\n  [<code>Blob</code>](https://developer.mozilla.org/en/docs/Web/API/Blob)\n  data type for transfers using DataChanel connection on\n  Firefox based browsers.\nLimitations is different for Firefox as tested in some PCs (linux predominantly)\n  that sending a packet size of <code>49152</code>kb from another browser\n  reflects as <code>16384</code>kb packet size when received.",
            "itemtype": "attribute",
            "name": "_MOZ_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "final": 1,
            "required": 1,
            "component": "DataProcess",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 51,
            "description": "The list of data types that is transferred using the DataChannel connection.\nThe current supported data type is <code>string</code>. <code>Blob</code>,\n  <code>ArrayBuffer</code> types support is not yet currently handled or\n  implemented.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_DATA_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "BINARY_STRING",
                    "description": "Data is transferred using\n  [binary converted strings](https://developer.mozilla.org/en-US/\n  docs/Web/HTTP/data_URIs).",
                    "type": "String"
                },
                {
                    "name": "ARRAY_BUFFER",
                    "description": "Data is transferred using\n  [ArrayBuffers](https://developer.mozilla.org/en-US/docs/Web/JavaScript\n /Reference/Global_Objects/ArrayBuffer).",
                    "type": "String"
                },
                {
                    "name": "BLOB",
                    "description": "Data is transferred using\n  [Blobs](https://developer.mozilla.org/en/docs/Web/API/Blob).",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "DataProcess",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 77,
            "description": "Converts a binary string (base64) string derived from\n [dataURL conversion](https://developer.mozilla.org/en-US\n  /docs/Web/API/FileReader/readAsDataURL)\n  to a Blob data object.<br>\n<i>Author: devnull69@stackoverflow.com #6850276</i>",
            "itemtype": "method",
            "name": "_base64ToBlob",
            "params": [
                {
                    "name": "dataURL",
                    "description": "The binary string (base64) to convert.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The converted Blob data object.",
                "type": "Blob"
            },
            "access": "private",
            "tagname": "",
            "component": "DataProcess",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 103,
            "description": "Converts a Blob data object into a binary string (base64) using\n  [dataURL conversion](https://developer.mozilla.org/en-US\n  /docs/Web/API/FileReader/readAsDataURL)",
            "itemtype": "method",
            "name": "_blobToBase64",
            "params": [
                {
                    "name": "data",
                    "description": "The Blob data object to convert.",
                    "type": "Blob"
                },
                {
                    "name": "callback",
                    "description": "The callback triggered when Blob data\n  conversion to binary string (base64) has completed.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "data",
                            "description": "The converted binary string (base64).",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "DataProcess",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 127,
            "description": "Chunks a huge Blob data object into smaller Blob data object chunks\n  based on the chunk sizes provided.\nIf provided Blob data object is smaller than chunk sizes, it will return an array\n  length of <code>1</code> with the Blob data object.",
            "itemtype": "method",
            "name": "_chunkBlobData",
            "params": [
                {
                    "name": "blob",
                    "description": "The huge Blob binary data object.",
                    "type": "Blob"
                },
                {
                    "name": "chunkSize",
                    "description": "The chunk size that the Blob binary data should be cut\n  into.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The array of chunked Blob data objects based on the Blob data\n  object provided.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "DataProcess",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 166,
            "description": "Chunks a huge dataURL string (base64 binary string)\n into smaller strings based on the chunk length provided.\nIf provided dataURL string is smaller than chunk length, it will return an array\n  length of <code>1</code> with the dataURL string.",
            "itemtype": "method",
            "name": "_chunkDataURL",
            "params": [
                {
                    "name": "dataURL",
                    "description": "The huge dataURL string (binary string).",
                    "type": "String"
                },
                {
                    "name": "chunkSize",
                    "description": "The string (chunk) length that the dataURL string\n  should be cut into.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The array of chunked dataURL strings (base64 binary string)\n  based on the dataURL string provided.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "DataProcess",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 207,
            "description": "Assemble the string chunks of a chunked dataURL string (base64 binary string)\n  into the original huge dataURL string.",
            "itemtype": "method",
            "name": "_assembleDataURL",
            "params": [
                {
                    "name": "dataURLArray",
                    "description": "The array of chunked dataURL strings\n  (base64 binary string) based on the dataURL string provided.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The original huge dataURL string (base64 binary string).",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "component": "DataProcess",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1,
            "description": "The current version of DT (Data Transfer) Protocol\n  that the SDK is using.",
            "itemtype": "attribute",
            "name": "DT_PROTOCOL_VERSION",
            "type": "String",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 13,
            "description": "The fixed delimiter that is used in Skylink to\n  concat the DataChannel ID and actual transfer ID together based\n  on the transfer ID provided in\n  {{#crossLink \"Skylink/dataTransferState:event\"}}dataTransferState{{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_TRANSFER_DELIMITER",
            "type": "String",
            "required": 1,
            "final": 1,
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 29,
            "description": "The list of Protocol types that is used for transfers and messaging using\n  the DataChannel connection.",
            "itemtype": "attribute",
            "name": "_DC_PROTOCOL_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "WRQ",
                    "description": "Protocol to initiate a transfer request on the current\n  DataChannel connection. Data transfer step 1.",
                    "type": "String"
                },
                {
                    "name": "ACK",
                    "description": "Protocol to accept or reject the transfer request.\n  Data transfer step 2.",
                    "type": "String"
                },
                {
                    "name": "DATA",
                    "description": "Actual binary data or string send based on the\n  <code>ackN</code> in the <code>ACK</code> packet received.\n  Data transfer step 3. This may not occur is step 2 is rejected.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "Protocol to terminate an ongoing transfer.\n  This data transfer step can happen after step 2 or 3.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Protocol that is sent when a transfer occurs an exception\n  which using causes it to be terminated.\n  This data transfer step can happen after step 2 or 3.",
                    "type": "String"
                },
                {
                    "name": "MESSAGE",
                    "description": "Protocol that is used to send P2P message objects\n  over the DataChannel connection.\n  This is not related to any data transfer step, but for messaging purposes.",
                    "type": "String"
                }
            ],
            "final": 1,
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 63,
            "description": "The list of platforms that Skylink should fallback to use the\n  {{#crossLink \"Skylink/DATA_CHANNEL_TYPE:attr\"}}<code>\n  DATA_CHANNEL_TYPE.MESSAGING</code>{{/crossLink}}\n  channel for transfers instead of using multi-transfers\n  due to the lack of support in the platform implementations.",
            "itemtype": "attribute",
            "name": "_INTEROP_MULTI_TRANSFERS",
            "type": "Array",
            "final": 1,
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 79,
            "description": "The types of data transfers to indicate if the DataChannel is\n  uploading or downloading the data transfer.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD",
                    "description": "The DataChannel connection is uploading data packets to\n  receiving end.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD",
                    "description": "The DataChannel connection is downloading data packets\n  from sending point.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "DataTransfer",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 98,
            "description": "The states of a data transfer in a DataChannel connection.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "UPLOAD_REQUEST",
                    "description": "Request to start a data transfer.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_STARTED",
                    "description": "Request to start the data transfer has been accepted\n  and data transfer is starting to upload data packets to receiving end.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_STARTED",
                    "description": "Request to start the data transfer has been accepted\n  and data transfer is starting to receive data packets from sending point.",
                    "type": "String"
                },
                {
                    "name": "REJECTED",
                    "description": "Request to start a data transfer is rejected.",
                    "type": "String"
                },
                {
                    "name": "UPLOADING",
                    "description": "The data transfer upload is ongoing with receiving end.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOADING",
                    "description": "The data transfer download is ongoing with sending point.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_COMPLETED",
                    "description": "The data transfer uploaded to receiving end has\n  been completed successfully.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_COMPLETED",
                    "description": "The data transfer downloaded from sending point\n  has been completed successfully.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "The ongoing data transfer has cancelled from receiving end\n  or sending point and has been terminated.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "The ongoing data transfer has occurred an exception and\n  has been terminated.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "DataTransfer",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 136,
            "description": "Stores the list of ongoing data transfers data packets (chunks) to be sent to receiving end\n  in a DataChannel connection based on the associated DataChannel ID.",
            "itemtype": "attribute",
            "name": "_uploadDataTransfers",
            "params": [
                {
                    "name": "(#channelName)",
                    "description": "The ongoing data transfer packets to be sent to\n  receiving end associated with the DataChannel connection.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The packet index of chunked Blob data object or\n  dataURL string (base64 binary string) to be sent to received end.",
                            "type": "Blob|String"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 153,
            "description": "Stores the list of ongoing data transfer state informations that is sent to receiving end\n  in a DataChannel connection based on the associated DataChannel ID.",
            "itemtype": "attribute",
            "name": "_uploadDataSessions",
            "params": [
                {
                    "name": "(#channelName)",
                    "description": "The ongoing data transfer information that is sent\n  to receiving end associated with the DataChannel connection.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The data transfer name.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The expected data size of the\n  completed data transfer.",
                            "type": "Number"
                        },
                        {
                            "name": "isUpload",
                            "description": "The flag that indicates if the\n  transfer is an upload data transfer.\n  In this case, the value should be <code>true</code>.",
                            "type": "Boolean"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "The PeerConnection uploader ID.",
                            "type": "String"
                        },
                        {
                            "name": "transferId",
                            "description": "The data transfer ID.",
                            "type": "String"
                        },
                        {
                            "name": "percentage",
                            "description": "The data transfer percentage.",
                            "type": "Number"
                        },
                        {
                            "name": "timeout",
                            "description": "The data transfer timeout.",
                            "type": "Number"
                        },
                        {
                            "name": "chunkSize",
                            "description": "The data transfer packet (chunk) size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The data transfer packet (chunk) data type.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 180,
            "description": "Stores the list of ongoing data transfers data packets (chunks) to be received from\n  sending point in a DataChannel connection based on the associated DataChannel ID.",
            "itemtype": "attribute",
            "name": "_downloadDataTransfers",
            "params": [
                {
                    "name": "(#channelName)",
                    "description": "The ongoing data transfer packets received\n  associated with DataChannel.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The packet index of chunked Blob data object or\n  dataURL string (base64 binary string) received from sending point.",
                            "type": "Blob|String"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 197,
            "description": "Stores the list of ongoing data transfer state informations that is received from\n  the sender point in a DataChannel connection based on the associated DataChannel ID.",
            "itemtype": "attribute",
            "name": "_downloadDataSessions",
            "params": [
                {
                    "name": "(#channelName)",
                    "description": "The ongoing data transfer information that is sent\n  to receiving end associated with the DataChannel connection.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The data transfer name.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The expected data size of the\n  completed data transfer.",
                            "type": "Number"
                        },
                        {
                            "name": "isUpload",
                            "description": "The flag that indicates if the\n  transfer is an upload data transfer.\n  In this case, the value should be <code>false</code>.",
                            "type": "Boolean"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "The PeerConnection uploader ID.",
                            "type": "String"
                        },
                        {
                            "name": "transferId",
                            "description": "The data transfer ID.",
                            "type": "String"
                        },
                        {
                            "name": "percentage",
                            "description": "The data transfer percentage.",
                            "type": "Number"
                        },
                        {
                            "name": "timeout",
                            "description": "The data transfer timeout to wait for response\n  before throwing a timeout error.",
                            "type": "Number"
                        },
                        {
                            "name": "chunkSize",
                            "description": "The data transfer packet (chunk) size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The data transfer packet (chunk) data type.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 225,
            "description": "Stores the list of ongoing data transfer timeouts using the\n  <code>setTimeout</code> objects for each DataChannel connection transfer.",
            "itemtype": "attribute",
            "name": "_dataTransfersTimeout",
            "params": [
                {
                    "name": "(#channelName)",
                    "description": "The timeout for the associated DataChannel\n  connection.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "DataTransfer",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 240,
            "description": "Sets a waiting timeout for every response sent to DataChannel connection receiving\n  end. Once the timeout has ended, a timeout error will be thrown and\n  data transfer will be terminated.",
            "itemtype": "method",
            "name": "_setDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The waiting timeout in seconds.",
                    "type": "Number"
                },
                {
                    "name": "isSender",
                    "description": "The flag thats indicates if the response\n  is related to a downloading or uploading data transfer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 293,
            "description": "Stops and clears the waitig timeout for the associated DataChannel connection.",
            "itemtype": "method",
            "name": "_clearDataChannelTimeout",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "isSender",
                    "description": "The flag thats indicates if the response\n  is related to a downloading or uploading data transfer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 316,
            "description": "Starts a data transfer with a PeerConnection. If multi-transfer is supported,\n  Skylink would open a new DataChannel connection with PeerConnection to start\n  data transfer. If mutli-transfer is not supported in\n  {{#crossLink \"Skylink/_INTEROP_MULTI_TRANSFERS:attr\"}}_INTEROP_MULTI_TRANSFERS{{/crossLink}},\n  the data transfer would start in the {{#crossLink \"Skylink/DATA_CHANNEL_TYPE:attr\"}}<code>\n  DATA_CHANNEL_TYPE.MESSAGING</code>{{/crossLink}} channel instead.",
            "itemtype": "method",
            "name": "_sendBlobDataToPeer",
            "params": [
                {
                    "name": "data",
                    "description": "The Blob data object to send.",
                    "type": "Blob"
                },
                {
                    "name": "dataInfo",
                    "description": "The data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "transferId",
                            "description": "The transfer ID of the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "name",
                            "description": "The transfer Blob data object name.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The timeout set to await in seconds\n  for response from DataChannel connection.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "60"
                        },
                        {
                            "name": "size",
                            "description": "The Blob data binary size expected to be received in the receiving end.",
                            "type": "Number"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "targetPeerId",
                    "description": "The receiving PeerConnection ID. Array is used for\n  MCU connection where multi-targeted PeerConnections are used. By default, the\n  value is <code>null</code>, which indicates that the data transfer is requested with all\n  connected PeerConnections.",
                    "type": "String|Array",
                    "optional": true,
                    "optdefault": "null"
                }
            ],
            "return": {
                "description": "The DataChannel connection ID associated with the transfer. If returned\n  as <code>null</code> or empty, it indicates an error.",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 551,
            "description": "Routes the data received to the relevant Protocol handler based on the data received.",
            "itemtype": "method",
            "name": "_dataChannelProtocolHandler",
            "params": [
                {
                    "name": "data",
                    "description": "The data received from the DataChannel connection.",
                    "type": "String|Object"
                },
                {
                    "name": "senderPeerId",
                    "description": "The DataChannel connection associated with the PeerConnection.",
                    "type": "String"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID.",
                    "type": "String"
                },
                {
                    "name": "channelType",
                    "description": "The DataChannel connection functionality type.\n  [Rel: Skylink.DATA_CHANNEL_TYPE]",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 623,
            "description": "Handles the WRQ Protocol request received from the DataChannel connection.",
            "itemtype": "method",
            "name": "_WRQProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from the DataChannel connection.\n  This should contain the <code>WRQ</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "agent",
                            "description": "The sender PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The sender PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "name",
                            "description": "The transfer data object name.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data object expected received size.",
                            "type": "Number"
                        },
                        {
                            "name": "chunkSize",
                            "description": "The expected data transfer packet (chunk) size.",
                            "type": "Number"
                        },
                        {
                            "name": "timeout",
                            "description": "The timeout set to await in seconds\n  for response from DataChannel connection.",
                            "type": "Number"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                            "type": "Boolean"
                        },
                        {
                            "name": "sender",
                            "description": "The sender PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"WRQ\"</code>.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 694,
            "description": "Handles the ACK Protocol request received from the DataChannel connection.",
            "itemtype": "method",
            "name": "_ACKProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from the DataChannel connection.\n  This should contain the <code>ACK</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "ackN",
                            "description": "The ACK response of the current data transfer.\n  If <code>0</code>, it means that the request has been accepted and the sending PeerConnection\n  has to send the first data transfer packet (chunk). If it's greater than <code>0</code>,\n  it means that the previous data transfer packet (chunk) has been received and is expecting\n  for the next data transfer packet. The number always increment based on the number of data\n  packets the receiving end has received. If it's <code>-1</code>, it means that the data\n  transfer request has been rejected and the data transfer will be terminated.",
                            "type": "Number"
                        },
                        {
                            "name": "sender",
                            "description": "The sender PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"ACK\"</code>.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 856,
            "description": "Handles the MESSAGE Protocol request received from the DataChannel connection.",
            "itemtype": "method",
            "name": "_MESSAGEProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from the DataChannel connection.\n  This should contain the <code>MESSAGE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "data",
                            "description": "The message object.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "sender",
                            "description": "The sender PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"MESSAGE\"</code>.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 886,
            "description": "Handles the ERROR Protocol request received from the DataChannel connection.",
            "itemtype": "method",
            "name": "_ERRORProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from the DataChannel connection.\n  This should contain the <code>ERROR</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.",
                            "type": "String"
                        },
                        {
                            "name": "content",
                            "description": "The error message.",
                            "type": "String"
                        },
                        {
                            "name": "isUploadError",
                            "description": "The flag thats indicates if the response\n  is related to a downloading or uploading data transfer.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sender",
                            "description": "The sender PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"ERROR\"</code>.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 937,
            "description": "Handles the CANCEL Protocol request received from the DataChannel connection.",
            "itemtype": "method",
            "name": "_CANCELProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data object received from the DataChannel connection.\n  This should contain the <code>CANCEL</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.",
                            "type": "String"
                        },
                        {
                            "name": "content",
                            "description": "The reason for termination as a message.",
                            "type": "String"
                        },
                        {
                            "name": "sender",
                            "description": "The sender PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"CANCEL\"</code>.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1026,
            "description": "Handles the DATA Protocol request received from the DataChannel connection.\nIn this handler, it actually handles and manipulates the received data transfer packet.",
            "itemtype": "method",
            "name": "_DATAProtocolHandler",
            "params": [
                {
                    "name": "senderPeerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "dataString",
                    "description": "The data transfer packet (chunk) received.",
                    "type": "ArrayBuffer|Blob|String"
                },
                {
                    "name": "dataType",
                    "description": "The data transfer packet (chunk) data type received.\n  [Rel: Skylink.DATA_TRANSFER_DATA_TYPE]",
                    "type": "String"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID associated with the transfer.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1259,
            "description": "Starts a [Blob](https://developer.mozilla.org/en/docs/Web/API/Blob) data transfer\n  with PeerConnections using the DataChannel connection.\nYou can transfer files using the <code>input</code> [fileupload object](\n  http://www.w3schools.com/jsref/dom_obj_fileupload.asp) and accessing the receiving\n  files using [FileUpload files property](http://www.w3schools.com/jsref/prop_fileupload_files.asp).\nThe [File](https://developer.mozilla.org/en/docs/Web/API/File) object inherits from\n  the Blob interface which is passable in this method as a Blob object.\nThe receiving PeerConnections have the option to accept or reject the data transfer.",
            "itemtype": "method",
            "name": "sendBlobData",
            "params": [
                {
                    "name": "data",
                    "description": "The Blob data object to transfer to PeerConnections.",
                    "type": "Blob"
                },
                {
                    "name": "timeout",
                    "description": "The waiting timeout in seconds that the DataChannel connection\n  data transfer should wait before throwing an exception and terminating the data transfer.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "60"
                },
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to transfer the\n  data object to. Alternatively, you may provide this parameter as a string to a specific\n  targeted PeerConnection to transfer the data object.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after all the data transfers is completed\n  successfully or met with an exception. The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#event_dataTransferState\">dataTransferState</a>\n  when the error has occurred. This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "error",
                                    "description": "<i>Deprecated</i>. The error received when the\n  data transfer fails. This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "Object|String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the failed data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of errors occurred based on per PeerConnection\n  basis.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.(#peerId)",
                                    "description": "The error that occurred when having\n  a DataChannel connection data transfer with associated PeerConnection.",
                                    "type": "Object|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#event_dataTransferState\">dataTransferState</a>\n  when the data transfer has been completed successfully.\n  This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the successful data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Send file to all peers connected\n  SkylinkDemo.sendBlobData(file, 67);\n\n  // Example 2: Send file to individual peer\n  SkylinkDemo.sendBlobData(blob, 87, targetPeerId);\n\n  // Example 3: Send file with callback\n  SkylinkDemo.sendBlobData(data,{\n     name: data.name,\n     size: data.size\n   },function(error, success){\n    if (error){\n      console.error(\"Error happened. Could not send file\", error);\n    }\n    else{\n      console.info(\"Successfully uploaded file\");\n    }\n  });"
            ],
            "trigger": "incomingData, incomingDataRequest, dataTransferState, dataChannelState",
            "since": "0.5.5",
            "component": "DataTransfer",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1502,
            "description": "Starts the actual data transfers with the array of PeerConnections provided\n  and based on the data transfer type to start the DataChannel connection data transfer.",
            "itemtype": "method",
            "name": "_startDataTransfer",
            "params": [
                {
                    "name": "data",
                    "description": "The transfer data object.",
                    "type": "Blob|String"
                },
                {
                    "name": "dataInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "transferId",
                            "description": "The data transfer ID.",
                            "type": "String"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "listOfPeers",
                    "description": "The array of targeted PeerConnections to transfer the\n  data object to.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after all the data transfers is completed\n  successfully or met with an exception. The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#event_dataTransferState\">dataTransferState</a>\n  when the error has occurred. This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "error",
                                    "description": "<i>Deprecated</i>. The error received when the\n  data transfer fails. This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "Object|String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the failed data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of errors occurred based on per PeerConnection\n  basis.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.(#peerId)",
                                    "description": "The error that occurred when having\n  a DataChannel connection data transfer with associated PeerConnection.",
                                    "type": "Object|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  The received type would be <code>\"blob\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#event_dataTransferState\">dataTransferState</a>\n  when the data transfer has been completed successfully.\n  This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the successful data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  The received type would be <code>\"blob\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "DataTransfer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1830,
            "description": "Responds to a data transfer request by rejecting or accepting\n  the data transfer request initiated by a PeerConnection.",
            "itemtype": "method",
            "name": "respondBlobRequest",
            "params": [
                {
                    "name": "peerId",
                    "description": "The sender PeerConnection ID.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID of the data transfer request\n  to accept or reject.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The flag that indicates <code>true</code> as a response\n  to accept the data transfer and <code>false</code> as a response to reject the\n  data transfer request.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "incomingData, dataTransferState",
            "component": "DataTransfer",
            "deprecated": true,
            "deprecationMessage": "Use .acceptDataTransfer()",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1847,
            "description": "Responds to a data transfer request by rejecting or accepting\n  the data transfer request initiated by a PeerConnection.",
            "itemtype": "method",
            "name": "acceptDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The sender PeerConnection ID.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID of the data transfer request\n  to accept or reject.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The flag that indicates <code>true</code> as a response\n  to accept the data transfer and <code>false</code> as a response to reject the\n  data transfer request.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "incomingData, dataTransferState",
            "component": "DataTransfer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1935,
            "description": "Terminates an ongoing DataChannel connection data transfer.",
            "itemtype": "method",
            "name": "cancelBlobTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID of the data transfer request\n  to terminate the request.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "component": "DataTransfer",
            "deprecated": true,
            "deprecationMessage": "Use .cancelDataTransfer()",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1948,
            "description": "Terminates an ongoing DataChannel connection data transfer.",
            "itemtype": "method",
            "name": "cancelDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID of the data transfer request\n  to terminate the request.",
                    "type": "String"
                }
            ],
            "trigger": "dataTransferState",
            "component": "DataTransfer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 2035,
            "description": "Send a message object or string using the DataChannel connection\n  associated with the list of targeted PeerConnections.\nThe maximum size for the message object would be<code>16Kb</code>.<br>\nTo send a string length longer than <code>16kb</code>, please considered\n  to use {{#crossLink \"Skylink/sendURLData:method\"}}sendURLData(){{/crossLink}}\n  to send longer strings (for that instance base64 binary strings are long).\nTo send message objects with platform signaling socket connection, see\n  {{#crossLink \"Skylink/sendMessage:method\"}}sendMessage(){{/crossLink}}.",
            "itemtype": "method",
            "name": "sendP2PMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to\n  transfer the message object to. Alternatively, you may provide this parameter\n  as a string to a specific targeted PeerConnection to transfer the message object.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkylinkDemo.sendP2PMessage(\"Hi there! This is from a DataChannel connection!\"\");\n\n  // Example 2: Send to specific peer\n  SkylinkDemo.sendP2PMessage(\"Hi there peer! This is from a DataChannel connection!\", targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "since": "0.5.5",
            "component": "DataTransfer",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 2130,
            "description": "Starts a [dataURL](https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n  /readAsDataURL) data transfer with PeerConnections using the DataChannel connection.\nThe receiving PeerConnections have the option to accept or reject the data transfer.",
            "itemtype": "method",
            "name": "sendURLData",
            "params": [
                {
                    "name": "data",
                    "description": "The dataURL (base64 binary string) string to transfer to PeerConnections.",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "The waiting timeout in seconds that the DataChannel connection\n  data transfer should wait before throwing an exception and terminating the data transfer.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "60"
                },
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to transfer the\n  data object to. Alternatively, you may provide this parameter as a string to a specific\n  targeted PeerConnection to transfer the data object.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after all the data transfers is completed\n  successfully or met with an exception. The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#event_dataTransferState\">dataTransferState</a>\n  when the error has occurred. This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "error",
                                    "description": "<i>Deprecated</i>. The error received when the\n  data transfer fails. This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "Object|String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the failed data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of errors occurred based on per PeerConnection\n  basis.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.(#peerId)",
                                    "description": "The error that occurred when having\n  a DataChannel connection data transfer with associated PeerConnection.",
                                    "type": "Object|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The data transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  The received type would be <code>\"dataURL\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "state",
                                    "description": "<i>Deprecated</i>. The\n  <a href=\"#method_dataTransferState\">dataTransferState</a>\n  when the data transfer has been completed successfully.\n  This only triggers for a single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "transferId",
                                    "description": "The transfer ID of the successful data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The single targeted PeerConnection ID for the data transfer.\n  This only triggers for single targeted PeerConnection data transfer.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "null"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the data transfer has been\n  initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The transfer data object information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferInfo.name",
                                    "description": "The data transfer ID.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "transferId"
                                },
                                {
                                    "name": "transferInfo.size",
                                    "description": "The transfer data size.",
                                    "type": "Number"
                                },
                                {
                                    "name": "transferInfo.transferId",
                                    "description": "The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.dataType",
                                    "description": "The type of data transfer initiated.\n  The received type would be <code>\"dataURL\"</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.timeout",
                                    "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                                    "type": "String"
                                },
                                {
                                    "name": "transferInfo.isPrivate",
                                    "description": "The flag to indicate if the data transfer is a private\n  transfer to the PeerConnection directly and not broadcasted to all PeerConnections.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n\n  // Example 1: Send dataURL to all peers connected\n  SkylinkDemo.sendURLData(dataURL, 67);\n\n  // Example 2: Send dataURL to individual peer\n  SkylinkDemo.sendURLData(dataURL, 87, targetPeerId);\n\n  // Example 3: Send dataURL with callback\n  SkylinkDemo.sendURLData(dataURL, 87, function(error, success){\n    if (error){\n      console.error(\"Error happened. Could not send dataURL\", error);\n    }\n    else{\n      console.info(\"Successfully sent dataURL\");\n    }\n  });"
            ],
            "trigger": "incomingData, incomingDataRequest, dataTransferState, dataChannelState",
            "since": "0.6.1",
            "component": "DataTransfer",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 1,
            "description": "Stores the list of buffered ICE candidates received\n  before <code>RTCPeerConnection.setRemoteDescription</code> is\n  called. Adding ICE candidates before receiving the remote\n  session description causes an ICE connection failures in a\n  number of instances.",
            "itemtype": "attribute",
            "name": "_peerCandidatesQueue",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The list of buffered ICE candidates\n  associated with the PeerConnection.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The buffered RTCIceCandidate\n  object associated with the PeerConnection.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.1",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 21,
            "description": "Stores the list of flags associated to the PeerConnections\n  to disable trickle ICE as attempting to establish an\n  ICE connection failed after many trickle ICE connection\n  attempts. To ensure the stability and increase the chances\n  of a successful ICE connection, track the PeerConnection and store\n  it as a flag in this list to disable trickling of ICE connections.",
            "itemtype": "attribute",
            "name": "_peerIceTrickleDisabled",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The PeerConnection trickle ICE disabled flag.\n  If value is <code>true</code>, it means that trickling of ICE is\n  disabled for subsequent connection attempt.",
                    "type": "Boolean"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.8",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 41,
            "description": "The list of PeerConnection ICE candidate generation triggered states.\nRefer to [w3c WebRTC Specification Draft](http://www.w3.org/TR/webrtc/#idl-def-RTCIceGatheringState).",
            "itemtype": "attribute",
            "name": "CANDIDATE_GENERATION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "NEW",
                    "description": "The object was just created, and no networking\n  has occurred yet.",
                    "type": "String"
                },
                {
                    "name": "GATHERING",
                    "description": "The ICE engine is in the process of gathering\n  candidates for connection.",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "The ICE engine has completed gathering. Events\n  such as adding a new interface or a new TURN server will cause the\n  state to go back to gathering.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.4.1",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 64,
            "description": "Handles the ICE candidate object received from associated PeerConnection\n  to send the ICE candidate object or wait for all gathering to complete\n  before sending the candidate to prevent trickle ICE.",
            "itemtype": "method",
            "name": "_onIceCandidate",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID associated with the ICE\n  candidate object received.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "The event object received in the <code>RTCPeerConnection.\n  onicecandidate</code> to parse the ICE candidate and determine\n  if gathering has completed.",
                    "type": "Event"
                }
            ],
            "trigger": "candidateGenerationState",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 117,
            "description": "Buffers an ICE candidate object associated with a PeerConnection\n  to prevent disruption to ICE connection when ICE candidate\n  is received before <code>RTCPeerConnection.setRemoteDescription</code>\n  is called.",
            "itemtype": "method",
            "name": "_addIceCandidateToQueue",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection associated with the ICE\n  candidate object.",
                    "type": "String"
                },
                {
                    "name": "candidate",
                    "description": "The constructed ICE candidate object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 139,
            "description": "Handles the event when adding an ICE candidate has been added\n  successfully. This is mainly to prevent JShint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 152,
            "description": "Handles the event when adding an ICE candidate has failed.\nThis is mainly to prevent JShint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateFailure",
            "params": [
                {
                    "name": "error",
                    "description": "The error received in the failure callback\n  in <code>RTCPeerConnection.addIceCandidate(candidate, successCb, failureCb)</code>.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 167,
            "description": "Adds the list of ICE candidates bufferred before <code>RTCPeerConnection.setRemoteDescription\n  </code> is called associated with the PeerConnection.",
            "itemtype": "method",
            "name": "_addIceCandidateFromQueue",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to add the associated bufferred\n  ICE candidates.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 1,
            "description": "The list of PeerConnection ICE connection triggered states.\nRefer to [w3c WebRTC Specification Draft](http://www.w3.org/TR/webrtc/#idl-def-RTCIceConnectionState).",
            "itemtype": "attribute",
            "name": "ICE_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STARTING",
                    "description": "The ICE agent is gathering addresses\n  and/or waiting for remote candidates to be supplied.",
                    "type": "String"
                },
                {
                    "name": "CHECKING",
                    "description": "The ICE agent has received remote candidates\n  on at least one component, and is checking candidate pairs but has\n  not yet found a connection. In addition to checking, it may also\n  still be gathering.",
                    "type": "String"
                },
                {
                    "name": "CONNECTED",
                    "description": "The ICE agent has found a usable connection\n  for all components but is still checking other candidate pairs to see\n  if there is a better connection. It may also still be gathering.",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "The ICE agent has finished gathering and\n  checking and found a connection for all components.",
                    "type": "String"
                },
                {
                    "name": "FAILED",
                    "description": "The ICE agent is finished checking all\n  candidate pairs and failed to find a connection for at least one\n  component.",
                    "type": "String"
                },
                {
                    "name": "DISCONNECTED",
                    "description": "Liveness checks have failed for one or\n  more components. This is more aggressive than \"failed\", and may\n  trigger intermittently (and resolve itself without action) on\n  a flaky network.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "The ICE agent has shut down and is no\n  longer responding to STUN requests.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.1.0",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 42,
            "description": "The list of TURN server transports flags to set\n for TURN server connections.",
            "itemtype": "attribute",
            "name": "TURN_TRANSPORT",
            "type": "JSON",
            "params": [
                {
                    "name": "TCP",
                    "description": "Use only TCP transport option.\n  <i>E.g. <code>turn:turnurl:5523?transport=tcp</code></i>.",
                    "type": "String"
                },
                {
                    "name": "UDP",
                    "description": "Use only UDP transport option.\n  <i>E.g. <code>turn:turnurl:5523?transport=udp</code></i>.",
                    "type": "String"
                },
                {
                    "name": "ANY",
                    "description": "Use both TCP and UDP transport option.\n  <i>E.g. <code>turn:turnurl:5523?transport=udp</code> and\n  <code>turn:turnurl:5523?transport=tcp</code></i>.",
                    "type": "String"
                },
                {
                    "name": "NONE",
                    "description": "Set no transport option in TURN servers.\n  <i>E.g. <code>turn:turnurl:5523</code></i>",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.5.4",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 68,
            "description": "The flag that indicates if PeerConnections should enable\n   trickling of ICE to connect the ICE connection.",
            "itemtype": "attribute",
            "name": "_enableIceTrickle",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.3.0",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 82,
            "description": "The flag that indicates if PeerConnections ICE gathering\n  should use STUN server connection.",
            "itemtype": "attribute",
            "name": "_enableSTUN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "ICE",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 95,
            "description": "The flag that indicates if PeerConnections ICE gathering\n  should use TURN server connection.\nTampering this flag may disable any successful PeerConnection\n  that is behind any firewalls.",
            "itemtype": "attribute",
            "name": "_enableTURN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "ICE",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 110,
            "description": "The flag to enable using of public STUN server connections.",
            "itemtype": "attribute",
            "name": "_usePublicSTUN",
            "type": "Boolean",
            "default": "true",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "ICE",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 129,
            "description": "Stores the TURN server transport to enable for TURN server connections.\n[Rel: Skylink.TURN_TRANSPORT]",
            "itemtype": "attribute",
            "name": "_TURNTransport",
            "type": "String",
            "default": "Skylink.TURN_TRANSPORT.ANY",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.4",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 143,
            "description": "Stores the list of PeerConnection ICE connection failures.\nAfter an third attempt of ICE connection failure, the\n  trickling of ICE would be disabled.",
            "itemtype": "attribute",
            "name": "_ICEConnectionFailures",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The number of PeerConnection ICE connection\n  attempt failures.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Peer",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 159,
            "description": "Reconfigures the <code>RTCConfiguration.iceServers</code> that is\n  to be passed in constructing the new <code>RTCPeerConnection</code>\n  object for different browsers support.\nPreviously known as <code>_setFirefoxIceServers</code>.\nThis method will reconfigure <code>urls</code> configuration to\n  an array of <code>url</code> configuration.",
            "itemtype": "method",
            "name": "_parseIceServers",
            "params": [
                {
                    "name": "config",
                    "description": "The RTCConfiguration that is to be passed for\n  constructing the new RTCPeerConnection object.",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "The updated RTCConfiguration object with Firefox\n  specific STUN configuration.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 238,
            "description": "Reconfigures the <code>RTCConfiguration.iceServers</code> that is\n  to be passed in constructing the new <code>RTCPeerConnection</code>\n  object to remove (disable) STUN or remove TURN (disable) server\n  connections based on the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  configuration passed in.",
            "itemtype": "method",
            "name": "_setIceServers",
            "params": [
                {
                    "name": "config",
                    "description": "The RTCConfiguration that is to be passed for\n  constructing the new RTCPeerConnection object.",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "The updated RTCConfiguration object based on the\n  configuration settings in the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  method.",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "component": "ICE",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1,
            "description": "The list of Skylink PeerConnection signaling triggered states.\nRefer to [w3c WebRTC Specification Draft](http://www.w3.org/TR/webrtc/#idl-def-RTCSignalingState).",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "STABLE",
                    "description": "There is no handshaking in progress. This state occurs\n  when handshaking has just started or close.",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_OFFER",
                    "description": "The session description \"offer\" is generated\n  and to be sent.",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_OFFER",
                    "description": "The session description \"offer\" is received.\n  The handshaking has been completed.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "The connection is closed.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 25,
            "description": "The types of Skylink server PeerConnections that serves different functionalities.",
            "type": "JSON",
            "itemtype": "attribute",
            "name": "SERVER_PEER_TYPE",
            "params": [
                {
                    "name": "MCU",
                    "description": "The MCU server PeerConnection.\n  This server PeerConnection is only available after MCU PeerConnection\n  is connected.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 41,
            "description": "Stores the timestamp of the moment when the last PeerConnections\n  restarts has happened. Used for the restart PeerConnection functionality.",
            "itemtype": "attribute",
            "name": "_lastRestart",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 54,
            "description": "Stores the counter of the number of consecutive\n  PeerConnections restarts retries.",
            "itemtype": "attribute",
            "name": "_retryCount",
            "type": "Number",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 67,
            "description": "Stores the list of PeerConnections.",
            "itemtype": "attribute",
            "name": "_peerConnections",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The RTCPeerConnection object associated to\n  PeerConnection connection.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 81,
            "description": "Stores the list of PeerConnection restart weights received\n  that would be compared against to indicate if PeerConnection\n  should initiates a restart from the other connection end should.\nThe one that sends restart later is the one who initiates the restart.",
            "itemtype": "attribute",
            "name": "_peerRestartPriorities",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The PeerConnection connection restart\n  handshake reconnection weights. The weight is generated with\n  <code>Date.valueOf()</code>.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 98,
            "description": "Connects to the PeerConnection associated to the ID provided.",
            "itemtype": "method",
            "name": "_addPeer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to connect to.",
                    "type": "String"
                },
                {
                    "name": "peerBrowser",
                    "description": "The PeerConnection platform agent information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The PeerConnection platform name.",
                            "type": "Number"
                        }
                    ]
                },
                {
                    "name": "toOffer",
                    "description": "The flag that indicates if the PeerConnection connection\n  should be start connection as an offerer or as an answerer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "restartConn",
                    "description": "The flag that indicates if the PeerConnection\n  connection is part of restart functionality use-case.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "receiveOnly",
                    "description": "The flag that indicates if the PeerConnection\n  connection would send Stream or not (receive only).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "isSS",
                    "description": "The flag that indicates if the PeerConnection\n  connection Stream object sent is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 163,
            "description": "Restarts a PeerConnection connection in a P2P environment.\nThis is usually done for replacing the previous Stream object and restarting\n  the connection with a new one, or when the ICE connection has issues\n  streaming video/audio stream in the remote Stream object which requires\n  a refresh in the ICE connection.",
            "itemtype": "method",
            "name": "_restartPeerConnection",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to restart the connection with.",
                    "type": "String"
                },
                {
                    "name": "isSelfInitiatedRestart",
                    "description": "The flag that indicates if the restart action\n   was caused by self.",
                    "type": "Boolean"
                },
                {
                    "name": "isConnectionRestart",
                    "description": "The flag that indicates whether the restarting action\n  is caused by ICE connection or handshake connection failure. Currently, this feature works the same as\n  <code>explict</code> parameter.",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after the PeerConnection connection has\n  been succesfully initiated with a restart. Set this value to <code>null</code> if you\n  do not want to pass in any callbacks.",
                    "type": "Function"
                },
                {
                    "name": "explict",
                    "description": "The flag that indicates whether the restart functionality\n  is invoked by the application or by Skylink when the ICE connection fails to establish\n  a \"healthy\" connection state. Currently, this feature works the same as\n  <code>isConnectionRestart</code> parameter.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 299,
            "description": "Disconnects the PeerConnection and remove object references\n  associated to the ID provided",
            "itemtype": "method",
            "name": "_removePeer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to disconnect\n  the connection with.",
                    "type": "String"
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 359,
            "description": "Creates a PeerConnection connection. This does not start the handshake connection\n  but creates the PeerConnection connection object ready for connection.",
            "itemtype": "method",
            "name": "_createPeerConnection",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to create the PeerConnection object\n  with.",
                    "type": "String"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if the PeerConnection\n  connection Stream object sent is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The PeerConnection connection object associated with\n  the provided ID.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 473,
            "description": "// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 521,
            "description": "Refreshes a PeerConnection connection.\nThis feature can be used to refresh a PeerConnection when the\n  remote Stream object received does not stream any audio/video stream.\nIf there are more than 1 refresh during 5 seconds\n  or refresh is less than 3 seconds since the last refresh\n  initiated by the other peer, it will be aborted.",
            "itemtype": "method",
            "name": "refreshConnection",
            "params": [
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to refresh\n  the connection with.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after all targeted PeerConnections has\n  been initiated with refresh or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the\n  refresh connection had been initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "refreshErrors",
                                    "description": "The list of errors occurred\n  based on per PeerConnection basis.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "refreshErrors.(#peerId)",
                                    "description": "The error that occurred when\n  refreshing the connection with associated PeerConnection.",
                                    "type": "Object|String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the\n  refresh connection had been initiated with.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  SkylinkDemo.on(\"iceConnectionState\", function (state, peerId)) {\n    if (iceConnectionState === SkylinkDemo.ICE_CONNECTION_STATE.FAILED) {\n      // Do a refresh\n      SkylinkDemo.refreshConnection(peerId);\n    }\n  });"
            ],
            "trigger": "peerRestart, serverPeerRestart, peerJoined, peerLeft, serverPeerJoined",
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 678,
            "description": "Restarts all PeerConnection connection in a MCU connection environment.\nThis would require the current user to leave the room and restart all\n  current existing PeerConnection connections.",
            "itemtype": "method",
            "name": "_restartMCUConnection",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback fired after all targeted PeerConnections has\n  been initiated with refresh or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the\n  refresh connection had been initiated with.",
                                    "type": "Array"
                                },
                                {
                                    "name": "refreshErrors",
                                    "description": "The list of errors occurred\n  based on per PeerConnection basis.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "refreshErrors.(#peerId)",
                                    "description": "The error that occurred when\n  refreshing the connection with associated PeerConnection.",
                                    "type": "Object|String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of PeerConnection that the\n  refresh connection had been initiated with.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "trigger": "peerRestart, serverPeerRestart, peerJoined, peerLeft, serverPeerJoined",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 1,
            "description": "Stores the PeerConnection peer information.",
            "itemtype": "attribute",
            "name": "_peerInformations",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in the PeerConnection connection Stream\n   audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Peer",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 73,
            "description": "Stores the self credentials that is required to connect to\n  Skylink platform signalling and identification in the\n  signalling socket connection.",
            "itemtype": "attribute",
            "name": "_user",
            "type": "JSON",
            "params": [
                {
                    "name": "uid",
                    "description": "The self session ID.",
                    "type": "String"
                },
                {
                    "name": "sid",
                    "description": "The self session socket connection ID. This\n  is used by the signalling socket connection as ID to target\n  self and the peers PeerConnection ID.",
                    "type": "String"
                },
                {
                    "name": "timeStamp",
                    "description": "The self session timestamp.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The self session access token.",
                    "type": "String"
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "User",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 93,
            "description": "Stores the custom user data information set by developer for self.\nBy default, if no custom user data is set, it is an empty string <code>\"\"</code>.",
            "itemtype": "attribute",
            "name": "_userData",
            "type": "JSON|String",
            "default": "\"\"",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "User",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 107,
            "description": "Sets the current custom user data information for self.\nThis sets and overwrites the <code>peerInfo.userData</code> value for self.\nIf self is in the room and connected with other peers, the peers will be notified\n  with the {{#crossLink \"Skylink/peerUpdated:event\"}}peerUpdated{{/crossLink}} event.\nYou may get the current customer user data information for self in\n  {{#crossLink \"Skylink/getUserData:method\"}}getUserData(){{/crossLink}}.",
            "itemtype": "method",
            "name": "setUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "The custom (or updated) user data information\n  for self provided.",
                    "type": "JSON|String"
                }
            ],
            "example": [
                "\n  // Example 1: Intial way of setting data before user joins the room\n  SkylinkDemo.setUserData({\n    displayName: \"Bobby Rays\",\n    fbUserId: \"1234\"\n  });\n\n  // Example 2: Way of setting data after user joins the room\n  var userData = SkylinkDemo.getUserData();\n  userData.displayName = \"New Name\";\n  userData.fbUserId = \"1234\";\n  SkylinkDemo.setUserData(userData);"
            ],
            "trigger": "peerUpdated",
            "component": "User",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 153,
            "description": "Gets the current custom user data information for self.\nYou may set the current customer user data information for self in\n  {{#crossLink \"Skylink/setUserData:method\"}}setUserData(){{/crossLink}}.",
            "itemtype": "method",
            "name": "getUserData",
            "return": {
                "description": "The custom (or updated) user data information\n  for self set.",
                "type": "JSON|String"
            },
            "example": [
                "\n  // Example 1: To get other peer's userData\n  var peerData = SkylinkDemo.getUserData(peerId);\n\n  // Example 2: To get own userData\n  var userData = SkylinkDemo.getUserData();"
            ],
            "component": "User",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 184,
            "description": "Parses the custom user data information for self provided.",
            "itemtype": "method",
            "name": "_parseUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "The custom (or updated) user data information\n  for self provided.",
                    "type": "JSON",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "User",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 200,
            "description": "Gets the PeerConnection peer information associated to the ID provided.\nIf an invalid PeerConnection ID is provided, or no PeerConnection ID is provided,\n  the method will return the self peer information.",
            "itemtype": "method",
            "name": "getPeerInfo",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection peer information to retrieve the\n  data from. If the DataChannel ID is not provided, it will return\n  the self peer information.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The PeerConnection peer information. The parameters relates to the\n  <code>peerInfo</code> payload given in the\n  {{#crossLink \"Skylink/peerJoined:event\"}}peerJoined{{/crossLink}} event.",
                "type": "JSON"
            },
            "example": [
                "\n  // Example 1: To get other peer's information\n  var peerInfo = SkylinkDemo.getPeerInfo(peerId);\n\n  // Example 2: To get own information\n  var userInfo = SkylinkDemo.getPeerInfo();"
            ],
            "component": "Peer",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 1,
            "description": "The list of Skylink PeerConnection connection handshake triggered states.",
            "type": "JSON",
            "itemtype": "attribute",
            "name": "HANDSHAKE_PROGRESS",
            "params": [
                {
                    "name": "ENTER",
                    "description": "Connection handshake Step 1a.\n  Received <code>ENTER</code> from peer, and PeerConnection is\n  initialised to start connection. In this Step, self would\n  sent <code>WELCOME</code> to the peer to start the WebRTC\n  session description connection handshake.",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "Connection handshake Step 1b.\n  Received <code>WELCOME</code> from peer, and PeerConnection is\n  initialised to start connection. In this Step, the WebRTC layer\n  to begin the session description connection handshake starts here\n  and send the local <code>OFFER</code> session description to peer.",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "Connection handshake Step 2a. Received\n  <code>OFFER</code> from peer, and PeerConnection has received the\n  remote <code>OFFER</code> session description. In this Step, self\n  would start to send local <code>ANSWER</code> session description\n  to peer.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "Connection handshake Step 2b. Received\n  <code>ANSWER</code> from peer, and PeerConnection has received the\n  remote <code>ANSWER</code> session description. In this Step, the\n  connection handshaking progress has been completed.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "Connection handshake has occurred and exception,\n  in this which the connection handshake could have been aborted abruptly\n  and no PeerConnection connection is established.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 40,
            "description": "Stores the list of PeerConnection connection health timeout objects that\n  waits for any existing PeerConnection \"healthy\" state in successful\n  {{#crossLink \"Skylink/_peerConnectionHealth:attr\"}}_peerConnectionHealth{{/crossLink}}.\n  If timeout has reached it's limit and does not have any \"healthy\" connection state\n  with PeerConnection connection, it will restart the connection again with\n  {{#crossLink \"Skylink/_restartPeerConnection:method\"}}_restartPeerConnection(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_peerConnectionHealthTimers",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The timeout object set using <code>setTimeout()</code> that\n  does the wait for any \"healthy\" state connection associated with the PeerConnection connection.\n  This will be removed when the PeerConnection connection has ended or when the PeerConnection\n  connection has been met with a \"healthy\" state.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 61,
            "description": "Stores the list of PeerConnection connections that has connection\n  established successfully. When the PeerConnection connection has a\n  successful ICE connection state of <code>\"completed\"</code>,\n  it stores the PeerConnection connection as \"healthy\".",
            "itemtype": "attribute",
            "name": "_peerConnectionHealth",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The flag that indicates if the associated PeerConnection\n  connection is in a \"healthy\" state. If the value is <code>true</code>, it means\n  that the PeerConnection connectin is in a \"healthy\" state.",
                    "type": "Boolean"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 78,
            "description": "Stores the list of PeerConnection handshake connection weights.\nThis is implemented to prevent the conflict of sending <code>WELCOME</code>\n  to peer and receiving <code>WELCOME</code> from peer at the same time.\nTo handle this event, both self and the peer has to generate a weight initially.\nThen in the {{#crossLink \"Skylink/_welcomeHandler:attr\"}}_welcomeHandler(){{/crossLink}}\n  when conflict <code>WELCOME</code> message is received, the handler woudl check\n  if there is already an existing PeerConnection connection object with the peer (due\n  to the initialisation in the received <code>ENTER</code>). If so the handler would\n  then compare the received weight if it is higher than the weight generated for this peer.\nThe one with the highest weight would have the \"priority\" to initiate the WebRTC layer of\n  handshake and start sending the <code>OFFER</code> session description.",
            "itemtype": "attribute",
            "name": "_peerHSPriorities",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The generated weight for associated PeerConnection peer.\n  The weight is generated with <code>Date.getTime()</code>.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 102,
            "description": "Starts to initiate the WebRTC layer of handshake connection by\n  creating the <code>OFFER</code> session description and then\n  sending it to the associated PeerConnection.\nThe offerer status may be shifted to the other peer depending on\n  when version of browser that is initiating the connection\n  to what version of browser to.",
            "itemtype": "method",
            "name": "_doOffer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to send the <code>OFFER</code> to.",
                    "type": "String"
                },
                {
                    "name": "peerBrowser",
                    "description": "The PeerConnection platform agent information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The PeerConnection platform name.",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 193,
            "description": "Responses to the <code>OFFER</code> session description received and\n   creates an <code>ANSWER</code> session description to sent\n  to the associated PeerConnection to complete the WebRTC handshake layer.",
            "itemtype": "method",
            "name": "_doAnswer",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to send the <code>ANSWER</code> to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 225,
            "description": "Starts the waiting timeout for a \"healthy\" connection\n  with associated PeerConnection connection.\nIt waits for any existing PeerConnection \"healthy\" state in successful\n  {{#crossLink \"Skylink/_peerConnectionHealth:attr\"}}_peerConnectionHealth{{/crossLink}}.\nIf timeout has reached it's limit and does not have any \"healthy\" connection state\n  with PeerConnection connection, it will restart the connection again with\n  {{#crossLink \"Skylink/_restartPeerConnection:method\"}}_restartPeerConnection(){{/crossLink}}.\nThis sets the timeout object associated with the PeerConnection into\n  {{#crossLink \"Skylink/_peerConnectionHealthTimers\"}}_peerConnectionHealthTimers(){{/crossLink}}.",
            "itemtype": "method",
            "name": "_startPeerConnectionHealthCheck",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to start a waiting timeout for a \"healthy\" connection.",
                    "type": "String"
                },
                {
                    "name": "toOffer",
                    "description": "The flag that indicates if PeerConnection connection\n  is an offerer or an answerer for an accurate timeout waiting time.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 288,
            "description": "Stops the waiting timeout for a \"healthy\" connection associated\n  with the PeerConnection.",
            "itemtype": "method",
            "name": "_stopPeerConnectionHealthCheck",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID to stop a waiting\n  timeout for a \"healthy\" connection.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 315,
            "description": "Sets the WebRTC handshake layer session description into the\n  PeerConnection <code>RTCPeerConnection</code> object <i><code>\n  RTCPeerConnection.setLocalDescription()</code></i> associated\n  with the PeerConnection connection.",
            "itemtype": "method",
            "name": "_setLocalAndSendMessage",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID to send the session description to\n  after setting into the associated <code>RTCPeerConnection</code> object.",
                    "type": "String"
                },
                {
                    "name": "sessionDescription",
                    "description": "The <code>OFFER</code> or an <code>ANSWER</code>\n  session description to set to the associated PeerConnection after setting into\n  the <code>RTCPeerConnection</code> object.",
                    "type": "JSON"
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 1,
            "description": "The types of get peers states available",
            "itemtype": "attribute",
            "name": "GET_PEERS_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "ENQUIRED",
                    "description": "The privileged PeerConnection peer already enquired signaling for list of peers",
                    "type": "String"
                },
                {
                    "name": "RECEIVED",
                    "description": "The privileged PeerConnection peer received list of peers from signaling",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 17,
            "description": "The types of peer introduction states available",
            "itemtype": "attribute",
            "name": "INTRODUCE_STATE",
            "type": "JSON",
            "params": [
                {
                    "name": "INTRODUCING",
                    "description": "The privileged PeerConnection peer sent the introduction signal",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "The PeerConnection peer introduction has occurred an exception.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 33,
            "description": "Whether this user automatically introduce to other peers.",
            "itemtype": "attribute",
            "name": "_autoIntroduce",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 45,
            "description": "Whether this user is a privileged user.",
            "itemtype": "attribute",
            "name": "isPrivileged",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 57,
            "description": "Parent key in case the current key is alias.\nIf the current key is not alias, this is the same as _appKey",
            "itemtype": "attribute",
            "name": "_parentKey",
            "type": "String",
            "default": "null",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 70,
            "description": "List of peers retrieved from signaling",
            "itemtype": "attribute",
            "name": "_peerList",
            "type": "Object",
            "default": "null",
            "access": "private",
            "tagname": "",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 82,
            "description": "Retrieves the list of rooms and peers under the same realm based\n  on the Application Key configured in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  from the platform signaling.\nThis will only work if self is a privileged PeerConnection peer.",
            "itemtype": "method",
            "name": "getPeers",
            "params": [
                {
                    "name": "showAll",
                    "description": "The flag that indicates if returned list should\n  also include privileged peers in the list. By default, the value is <code>false</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after the receiving the current\n  list of PeerConnection peers from platform signaling or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for getting self user media.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "example": [
                "\n\n  // To get list of unprivileged peers only\n  SkylinkDemo.getPeers();\n\n  // To get list of all peers, including other privileged peers\n  SkylinkDemo.getPeers(true);\n\n  // To get a list of unprivileged peers then invoke the callback\n  SkylinkDemo.getPeers(function(error, success){\n    if (error){\n      console.log(\"Error happened. Can not retrieve list of peers\");\n    }\n    else{\n      console.log(\"Success fully retrieved list of peers\", success);\n    }\n  });\n\n  // To get a list of all peers then invoke the callback\n  SkylinkDemo.getPeers(true, function(error, success){\n    if (error){\n      console.log(\"Error happened. Can not retrieve list of peers\");\n    }\n    else{\n      console.log(\"Success fully retrieved list of peers\", success);\n    }\n  });"
            ],
            "trigger": "getPeersStateChange",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 172,
            "description": "Introduces two PeerConnection peers to each other to\n  start a PeerConnection connection with each other.\nThis will only work if self is a privileged PeerConnection peer.",
            "itemtype": "method",
            "name": "introducePeer",
            "params": [
                {
                    "name": "sendingPeerId",
                    "description": "The PeerConnection ID of the peer\n  that initiates the connection with the introduced PeerConnection peer.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The PeerConnection ID of the\n  introduced peer who would be introduced to the initiator PeerConnection peer.",
                    "type": "String"
                }
            ],
            "trigger": "introduceStateChange",
            "component": "Peer",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 1,
            "description": "The list of Skylink platform signaling system action that might be given.\nUpon receiving from the signaling, the application has to reflect the\n  relevant actions given.\nYou may refer to {{#crossLink \"Skylink/SYSTEM_ACTION_REASON:attribute\"}}SYSTEM_ACTION_REASON{{/crossLink}}\n  for the types of system action reasons that would be given.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION",
            "type": "JSON",
            "params": [
                {
                    "name": "WARNING",
                    "description": "This action serves a warning to self. Usually if\n  warning is not heeded, it may result in an <code>REJECT</code> action.",
                    "type": "String"
                },
                {
                    "name": "REJECT",
                    "description": "This action means that self has been kicked out\n  of the current signaling room connection, and subsequent PeerConnections\n  would be disconnected.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 24,
            "description": "The list of Skylink platform signaling code as the reason\n  for the system action given by the current signaling connection.\nYou may refer to {{#crossLink \"Skylink/SYSTEM_ACTION:attribute\"}}SYSTEM_ACTION{{/crossLink}}\n  for the types of system actions that would be given.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION_REASON",
            "type": "JSON",
            "params": [
                {
                    "name": "ROOM_LOCKED",
                    "description": "Given as <code>REJECT</code>. The room is\n  locked and self is rejected from joining the room connection.",
                    "type": "String"
                },
                {
                    "name": "DUPLICATED_LOGIN",
                    "description": "Given as <code>REJECT</code>.\n  The credentials given is already in use, which the signaling server\n  throws an exception for this error.\n  This should rarely happen as Skylink handles this issue.",
                    "type": "String"
                },
                {
                    "name": "SERVER_ERROR",
                    "description": "Given as <code>REJECT</code>. The connection\n  with the server has an exception that is caught during the server connection.",
                    "type": "String"
                },
                {
                    "name": "EXPIRED",
                    "description": "Given as <code>REJECT</code>. The persistent\n  room meeting has expired so self is unable to join the room as\n  the end time of the meeting has ended. Depending on other\n  meeting timings available for this room, the persistent room will appear\n  expired.",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSED",
                    "description": "Given as <code>REJECT</code>. The persistent\n  room meeting has ended and has been rendered expired so self is rejected\n  from the room as the meeting is over.",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSING",
                    "description": "Given as <code>WARNING</code>. The persistent\n  room meeting is going to end soon, so this warning is given to inform\n  users before self is rejected from the room.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 67,
            "description": "Stores the current room self is joined to.\nThe selected room will be usually defaulted to\n  {{#crossLink \"Skylink/_defaultRoom:attribute\"}}_defaultRoom{{/crossLink}}\n  if there is no selected room in\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_selectedRoom",
            "type": "String",
            "default": "Skylink._defaultRoom",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 83,
            "description": "The flag that indicates if the currently joined room is locked.",
            "itemtype": "attribute",
            "name": "_roomLocked",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 94,
            "description": "Connects self to the selected room.\nBy default, if room parameter is not provided, it will\n  connect to the default room provided in\n  {{#crossLink \"Skylink/init:method\"}}init() <code>defaultRoom</code> settings{{/crossLink}}.\nIf any existing user media streams attached in Skylink, like for an example, calling\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}} or\n  {{#crossLink \"Skylink/sendStream:method\"}}sendStream(){{/crossLink}} before\n  <code>joinRoom()</code>, self would actually send the current attached user media stream\n  attached. To stop the current attached Stream, please invoke\n  {{#crossLink \"Skylink/stopStream:method\"}}stopStream(){{/crossLink}} before\n  <code>joinRoom()</code> is invoked.",
            "itemtype": "method",
            "name": "joinRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The room for\n  self to join to. If room is not provided, the room\n  would default to the the <code>defaultRoom</code> option set\n  in {{#crossLink \"Skylink/init:method\"}}init() settings{{/crossLink}}.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "The connection settings for self connection in the\n  room. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in {{#crossLink \"Skylink/setUserData:method\"}}setUserData(){{/crossLink}}.",
                            "type": "String|JSON",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The configured\n  audio stream channel for the self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "video",
                                    "description": "The configured\n  video stream channel for the self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "256"
                                },
                                {
                                    "name": "data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "1638400"
                                }
                            ]
                        },
                        {
                            "name": "manualGetUserMedia",
                            "description": "The flag that indicates if\n  <code>joinRoom()</code> should not invoke\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  automatically but allow the developer's application to invoke\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  manually in the application. When user media access is required, the\n  event {{#crossLink \"Skylink/mediaAccessRequired:event\"}}mediaAccessRequired{{/crossLink}}\n  will be triggered.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after self has\n  joined the room successfully with the provided media settings or\n  have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "error",
                                    "description": "The exception thrown that caused the failure\n  for joining the room.",
                                    "type": "Array"
                                },
                                {
                                    "name": "errorCode",
                                    "description": "The\n  <a href=\"#attr_READY_STATE_CHANGE_ERROR\">READY_STATE_CHANGE_ERROR</a>\n  if there is an <a href=\"#event_readyStateChange\">readyStateChange</a>\n  event error that caused the failure for joining the room.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "room",
                                    "description": "The selected room that self is\n  trying to join to.",
                                    "type": "Object|String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "room",
                                    "description": "The selected room that self has\n  succesfully joined to.",
                                    "type": "Array"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The self PeerConnection ID that\n  would be reflected remotely to peers in the room.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerInfo",
                                    "description": "The connection settings for self connection in the\n  room. If both audio and video option is <code>false</code>,\n  there should be no audio and video stream sending from self connection.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "peerInfo.userData",
                                    "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                                    "type": "String|JSON"
                                },
                                {
                                    "name": "peerInfo.audio",
                                    "description": "The self Stream\n  streaming audio settings. If <code>false</code>, it means that audio\n  streaming is disabled in the self Stream. If this option is set to\n  <code>true</code> or is defined with settings,\n  <a href=\"#method_getUserMedia\">getUserMedia()</a>\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "peerInfo.audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n   audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "peerInfo.video",
                                    "description": "The self Stream\n  streaming video settings. If <code>false</code>, it means that video\n  streaming is disabled in the self Stream. If this option is set to\n  <code>true</code> or is defined with settings,\n  <a href=\"#method_getUserMedia\">getUserMedia()</a>\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "peerInfo.video.resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "peerInfo.video.resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "peerInfo.video.resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "peerInfo.video.frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "peerInfo.video.screenshare",
                                    "description": "The flag\n  that indicates if the self connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "peerInfo.bandwidth",
                                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "peerInfo.bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "peerInfo.bandwidth.video",
                                    "description": "The configured\n  video stream channel for the self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "256"
                                },
                                {
                                    "name": "peerInfo.bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "1638400"
                                },
                                {
                                    "name": "peerInfo.mediaStatus",
                                    "description": "The self Stream mute\n  settings for both audio and video streamings.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "peerInfo.mediaStatus.audioMuted",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the self, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "peerInfo.mediaStatus.videoMuted",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "peerInfo.agent",
                                    "description": "The self platform agent information.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "peerInfo.agent.name",
                                    "description": "The self platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerInfo.agent.version",
                                    "description": "The self platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "peerInfo.agent.os",
                                    "description": "The self platform name.",
                                    "type": "Number"
                                },
                                {
                                    "name": "peerInfo.room",
                                    "description": "The current room that the self is in.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // To just join the default room without any video or audio\n  // Note that calling joinRoom without any parameters\n  // still sends any available existing MediaStreams allowed.\n  // See Examples 2, 3, 4 and 5 etc to prevent video or audio stream\n  SkylinkDemo.joinRoom();\n\n  // To just join the default room with bandwidth settings\n  SkylinkDemo.joinRoom({\n    bandwidth: {\n      data: 14440\n    }\n  });\n\n  // Example 1: To call getUserMedia and joinRoom seperately\n  SkylinkDemo.getUserMedia();\n  SkylinkDemo.on(\"mediaAccessSuccess\", function (stream)) {\n    attachMediaStream($(\".localVideo\")[0], stream);\n    SkylinkDemo.joinRoom();\n  });\n\n  // Example 2: Join a room without any video or audio\n  SkylinkDemo.joinRoom(\"room_a\");\n\n  // Example 3: Join a room with audio only\n  SkylinkDemo.joinRoom(\"room_b\", {\n    audio: true,\n    video: false\n  });\n\n  // Example 4: Join a room with prefixed video width and height settings\n  SkylinkDemo.joinRoom(\"room_c\", {\n    audio: true,\n    video: {\n      resolution: {\n        width: 640,\n        height: 320\n      }\n    }\n  });\n\n  // Example 5: Join a room with userData and settings with audio, video\n  // and bandwidth\n  SkylinkDemo.joinRoom({\n    userData: {\n      item1: \"My custom data\",\n      item2: \"Put whatever, string or JSON or array\"\n    },\n    audio: {\n       stereo: true\n    },\n    video: {\n       resolution: SkylinkDemo.VIDEO_RESOLUTION.VGA,\n       frameRate: 50\n    },\n    bandwidth: {\n      audio: 48,\n      video: 256,\n      data: 14480\n    }\n  });\n\n  //Example 6: joinRoom with callback\n  SkylinkDemo.joinRoom(function(error, success){\n    if (error){\n      console.log(\"Error happened. Can not join room\");\n    }\n    else{\n      console.log(\"Successfully joined room\");\n    }\n  });"
            ],
            "trigger": "readyStateChange, peerJoined, mediaAccessRequired",
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 515,
            "description": "Waits for the signaling socket channel connection to be ready before\n  starting the room connection with the Skylink signaling platform.",
            "itemtype": "method",
            "name": "_waitForOpenChannel",
            "params": [
                {
                    "name": "options",
                    "description": "The connection settings for self connection in the\n  room. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in {{#crossLink \"Skylink/setUserData:method\"}}setUserData(){{/crossLink}}.",
                            "type": "String|JSON",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The configured\n  audio stream channel for the self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "video",
                                    "description": "The configured\n  video stream channel for the self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "256"
                                },
                                {
                                    "name": "data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "1638400"
                                }
                            ]
                        },
                        {
                            "name": "manualGetUserMedia",
                            "description": "The flag that indicates if\n  <code>joinRoom()</code> should not invoke\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  automatically but allow the developer's application to invoke\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  manually in the application. When user media access is required, the\n  event {{#crossLink \"Skylink/mediaAccessRequired:event\"}}mediaAccessRequired{{/crossLink}}\n  will be triggered.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after signaling socket channel connection\n  has opened successfully with relevant user media being available according to the\n  settings or met with an exception. The callback signature is <code>function (error)</code>.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>undefined</code>, it means that there is no errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "trigger": "peerJoined, incomingStream, mediaAccessRequired",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 620,
            "description": "Disconnects self from current connected room.",
            "itemtype": "method",
            "name": "leaveRoom",
            "params": [
                {
                    "name": "stopUserMedia",
                    "description": "The flag that indicates if leaving the room\n  should automatically stop and clear the existing user media stream attached to skylink.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after self has\n  left the room successfully or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "peerId",
                                    "description": "The assigned previous PeerConnection ID\n  to self given when self was still connected to the room.",
                                    "type": "String"
                                },
                                {
                                    "name": "previousRoom",
                                    "description": "The room self was disconnected\n  from.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  //Example 1: Just leaveRoom\n  SkylinkDemo.leaveRoom();\n\n  //Example 2: leaveRoom with callback\n  SkylinkDemo.leaveRoom(function(error, success){\n    if (error){\n      console.log(\"Error happened\");\n    }\n    else{\n      console.log(\"Successfully left room\");\n    }\n  });"
            ],
            "trigger": "peerLeft, channelClose, streamEnded",
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 721,
            "description": "Locks the currently connected room to prevent other peers\n  from joining the room.",
            "itemtype": "method",
            "name": "lockRoom",
            "example": [
                "\n  SkylinkDemo.lockRoom();"
            ],
            "trigger": "roomLock",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 744,
            "description": "Unlocks the currently connected room to allow other peers\n  to join the room.",
            "itemtype": "method",
            "name": "unlockRoom",
            "example": [
                "\n  SkylinkDemo.unlockRoom();"
            ],
            "trigger": "roomLock",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 1,
            "description": "The list of Skylink platform room initialization ready state that indicates\n  if the required connection information has been retrieved successfully from\n  the platform server to start a connection.",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE",
            "type": "JSON",
            "params": [
                {
                    "name": "INIT",
                    "description": "Retrieval Step 1. The ready state is at it's beginning.\n  When {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}} is invoked, or\n  when {{#crossLink \"Skylink/joinRoom:attr\"}}joinRoom(){{/crossLink}} is invoked\n  with a provided room, it will start proceeding to Step 2.",
                    "type": "Number"
                },
                {
                    "name": "LOADING",
                    "description": "Retrieval Step 2. Skylink starts retrieving the\n  connection information from the platform server.",
                    "type": "Number"
                },
                {
                    "name": "COMPLETED",
                    "description": "Retrieval Step 3. The connection information\n  has been retrieved successfully.",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "Retrieval failure Step. An exception occured while retrieving\n  the connection information. This could also be due to missing dependencies or the\n  lack of WebRTC support.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 30,
            "description": "The list of Skylink platform room initialization ready state errors when\n  the error state is triggered by\n  {{#crossLink \"Skylink/readyStateChange:event\"}}readyStateChange{{/crossLink}}\n    The list of ready state change errors.\n- These are the error states from the error object error code.\n- <b>ROOM_LOCKED</b> is deprecated in 0.5.2. Please use\n  {{#crossLink \"Skylink/:attr\"}}leaveRoom(){{/crossLink}}\n- The states that would occur are:",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "API_INVALID",
                    "description": "Provided Application Key does not exists (invalid).",
                    "type": "Number"
                },
                {
                    "name": "API_DOMAIN_NOT_MATCH",
                    "description": "Application accessing from backend IP address\n  is not valid for provided Application Key.",
                    "type": "Number"
                },
                {
                    "name": "API_CORS_DOMAIN_NOT_MATCH",
                    "description": "Application accessing from the CORS domain\n  is not valid for provided Application Key.",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_INVALID",
                    "description": "Credentials provided is not valid for\n  provided Application Key.",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_NOT_MATCH",
                    "description": "Credentials does not match as expected\n  generated credentials for provided Application Key.",
                    "type": "Number"
                },
                {
                    "name": "API_INVALID_PARENT_KEY",
                    "description": "Provided alias Application Key has an\n  error because parent Application Key does not exists.",
                    "type": "Number"
                },
                {
                    "name": "API_NO_MEETING_RECORD_FOUND",
                    "description": "For persistent room feature configured\n  Application Key. There is no meeting currently that is open or available to join\n  for self at the current time in the selected room.",
                    "type": "Number"
                },
                {
                    "name": "NO_SOCKET_IO",
                    "description": "Socket.io dependency is not loaded.",
                    "type": "Number"
                },
                {
                    "name": "NO_XMLHTTPREQUEST_SUPPORT",
                    "description": "XMLHttpRequest is not supported\n  in current browser.",
                    "type": "Number"
                },
                {
                    "name": "NO_WEBRTC_SUPPORT",
                    "description": "WebRTC is not supported in\n  current browser.",
                    "type": "Number"
                },
                {
                    "name": "NO_PATH",
                    "description": "Error thrown when {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}\n  is invoked before {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.",
                    "type": "Number"
                },
                {
                    "name": "INVALID_XMLHTTPREQUEST_STATUS",
                    "description": "XMLHttpRequest does not return a\n  HTTP status code of <code>200</code>, which is a HTTP failure.",
                    "type": "Number"
                },
                {
                    "name": "ADAPTER_NO_LOADED",
                    "description": "AdapterJS dependency is not loaded.",
                    "type": "Number"
                },
                {
                    "name": "XML_HTTP_REQUEST_ERROR",
                    "description": "XMLHttpRequest failure on the network level when attempting to\n  connect to the platform server to retrieve selected room connection information.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 94,
            "description": "The list of available regional servers.\n- This is for developers to set the nearest region server\n  for Skylink to connect to for faster connectivity.\n- The available regional servers are:",
            "itemtype": "attribute",
            "name": "REGIONAL_SERVER",
            "type": "JSON",
            "params": [
                {
                    "name": "APAC1",
                    "description": "Asia pacific server 1.",
                    "type": "String"
                },
                {
                    "name": "US1",
                    "description": "server 1.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 113,
            "description": "The flag to enforce an SSL platform signaling and platform server connection.\nIf self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  platform signaling and platform server connection.",
            "itemtype": "attribute",
            "name": "_forceSSL",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 130,
            "description": "The flag to enforce an SSL TURN server connection.\nIf self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  TURN server connection.",
            "itemtype": "attribute",
            "name": "_forceTURNSSL",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 147,
            "description": "The flag to enforce TURN server connection for quicker connectivity.",
            "itemtype": "attribute",
            "name": "_forceTURN",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 160,
            "description": "The constructed REST path that Skylink makes a <code>HTTP /GET</code> from\n  to retrieve the connection information required.",
            "itemtype": "attribute",
            "name": "_path",
            "type": "String",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 173,
            "description": "The regional server that Skylink connects to.",
            "itemtype": "attribute",
            "name": "_serverRegion",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 184,
            "description": "The platform server URL that Skylink can construct the REST path with to make\n  a <code>HTTP /GET</code> to retrieve the connection information required.\nIf the value is not the default value, it's mostly for debugging purposes.\nIt's not advisable to allow developers to set the custom server URL unless\n  they are aware of what they are doing, as this is a debugging feature.",
            "itemtype": "attribute",
            "name": "_roomServer",
            "type": "String",
            "default": "\"//api.temasys.com.sg\"",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 200,
            "description": "Stores the Application Key that is configured in the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_appKey",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 212,
            "description": "Stores the default room that is configured in the\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.\nIf no room is provided in {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}},\n  this is the room that self would join to by default.\nIf the value is not provided in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}},\n  by default, the value is the Application Key that is configured\n  in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_defaultRoom",
            "type": "String",
            "default": "Skylink._appKey",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 230,
            "description": "Stores the new persistent room meeting start datetime stamp in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601).\nThis will start a new meeting based on the starting datetime stamp\n  in the room that was selected to join.\nThe start date time of the room will not affect non persistent room connection.\nThe persistent room feature is configurable in the Application Key\n  in the developer console.",
            "itemtype": "attribute",
            "name": "_roomStart",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 248,
            "description": "Stores the new persistent room meeting duration (in hours)\n  that the current new meeting duration should be in the room\n  that was selected to join.\nThe duration will not affect non persistent room connection.\nThe persistent room feature is configurable in the Application Key\n  in the developer console.",
            "itemtype": "attribute",
            "name": "_roomDuration",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 265,
            "description": "Stores the room credentials for Application Key.\nThis is required for rooms connecting without CORS verification\n  or starting a new persistent room meeting.\nTo generate the credentials:\n- Concatenate a string that consists of the room name\n  the room meeting duration (in hours) and the start date timestamp (in ISO 8601 format).\n  Format <code>room + duration + startDateTimeStamp</code>.\n- Hash the concatenated string with the Application Key token using\n  [SHA-1](https://en.wikipedia.org/wiki/SHA-1).\n  You may use the [CryptoJS.HmacSHA1](https://code.google.com/p/crypto-js/#HMAC) function to do so.\n  Example <code>var hash = CryptoJS.HmacSHA1(concatenatedString, token);</code>.\n- Convert the hash to a [Base64](https://en.wikipedia.org/wiki/Base64) encoded string. You may use the\n  [CryptoJS.enc.Base64](https://code.google.com/p/crypto-js/#The_Cipher_Output) function\n  to do so. Example <code>var base64String = hash.toString(CryptoJS.enc.Base64); </code>.\n- Encode the Base64 encoded string to a URI component using UTF-8 encoding with\n  [encodeURIComponent()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent).\n  Example <code>var credentials = encodeURIComponent(base64String);</code>\nand the duration.",
            "itemtype": "attribute",
            "name": "_roomCredentials",
            "type": "String",
            "access": "private",
            "tagname": "",
            "optional": 1,
            "component": "Room",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 294,
            "description": "Stores the current Skylink room connection retrieval ready state.\n[Rel: Skylink.READY_STATE_CHANGE]",
            "itemtype": "attribute",
            "name": "_readyState",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 307,
            "description": "Stores the Skylink server connection key for the selected room.",
            "itemtype": "attribute",
            "name": "_key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 318,
            "description": "Stores the Skylink server Application Key owner string for the selected room.",
            "itemtype": "attribute",
            "name": "_appKeyOwner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 329,
            "description": "Stores the room connection information that is passed for starting\n  the selected room connection. Some of these information are also\n  used and required to send for every messages sent to the platform\n  signaling connection for targeting the correct room and\n  self identification in the room.",
            "itemtype": "attribute",
            "name": "_room",
            "type": "JSON",
            "params": [
                {
                    "name": "id",
                    "description": "The room ID for identification to the platform signaling connection.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The generated room token given by the platform server for starting\n   the platform signaling connection.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The start datetime stamp (in The startDateTime in\n   [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n   sent by the platform server as an indication for the starting datetime of\n   the platform signaling connection to self.",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "The duration of the room meeting (in hours). This duration will\n   not affect non persistent room.",
                    "type": "String"
                },
                {
                    "name": "connection",
                    "description": "Connection The RTCPeerConnection constraints and configuration.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "peerConstraints",
                            "description": "<i>Deprecated</i>. The RTCPeerConnection\n   constraints that is passed in this format <code>new RTCPeerConnection(config, constraints);</code>.\n   This feature is not documented in W3C Specification draft and not advisable to use.",
                            "type": "JSON"
                        },
                        {
                            "name": "peerConfig",
                            "description": "The RTCPeerConnection\n   [RTCConfiguration](http://w3c.github.io/webrtc-pc/#idl-def-RTCConfiguration).",
                            "type": "JSON"
                        },
                        {
                            "name": "offerConstraints",
                            "description": "<i>Deprecated</i>. The RTCPeerConnection\n   [RTCOfferOptions](http://w3c.github.io/webrtc-pc/#idl-def-RTCOfferOptions) used in\n   <code>RTCPeerConnection.createOffer(successCb, failureCb, options);</code>.",
                            "type": "JSON"
                        },
                        {
                            "name": "sdpConstraints",
                            "description": "<i>Not in use</i>. The RTCPeerConnection\n   [RTCAnswerOptions](http://w3c.github.io/webrtc-pc/#idl-def-RTCAnswerOptions) to be used\n   in <code>RTCPeerConnection.createAnswer(successCb, failureCb, options);</code>.\n   This is currently not in use due to not all browsers supporting this feature yet.",
                            "type": "JSON"
                        },
                        {
                            "name": "mediaConstraints",
                            "description": "<i>Deprecated</i>. The getUserMedia()\n   [MediaStreamConstraints](https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints)\n   in <code>getUserMedia(constraints, successCb, failureCb);</code>.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 370,
            "description": "Starts a <code>HTTP /GET</code> REST call to the platform server to\n  retrieve the required connection information.",
            "itemtype": "method",
            "name": "_requestServerInfo",
            "params": [
                {
                    "name": "method",
                    "description": "The HTTP method. The value should be provided as\n  <code>\"GET\"</code>.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "The HTTP URI to invoke the REST call to. The\n  value should be {{#crossLink \"Skylink/_path:attribute\"}}_path{{/crossLink}}.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback fired The callback fired after the\n  <code>HTTP /GET</code> REST call has a response from the platform server.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "status",
                            "description": "The HTTP status code of the HTTP response\n  given by the platform server.",
                            "type": "Number"
                        },
                        {
                            "name": "response",
                            "description": "The HTTP response data after the platform server\n  has responded with the HTTP request.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "success",
                                    "description": "The response from the platform server\n  if Application Key connection retrieval is successful and validated or not.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "pc_constraints",
                                    "description": "For success state. The RTCPeerConnection\n  constraints that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.peerConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "media_constraints",
                                    "description": "For success state. The getUserMedia()\n  MediaStreamConstraints that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.mediaConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n    to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "offer_constraints",
                                    "description": "For success state. The RTCPeerConnection\n  RTCOfferOptions that would be configured in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.offerConstraints{{/crossLink}} in\n  {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                                    "type": "String"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "For success state. The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The default\n  audio stream channel for self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The default\n  video stream channel for self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The default\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "cid",
                                    "description": "For success state. The Skylink server connection key for the\n  selected room. This would be stored in {{#crossLink \"Skylink/_key:attribute\"}}_key{{/crossLink}}\n  in {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "apiOwner",
                                    "description": "For success state. The Skylink server Application\n  Key owner string for the selected room. This would be stored in\n  {{#crossLink \"Skylink/_appKeyOwner:attribute\"}}_appKeyOwner{{/crossLink}}\n  in {{#crossLink \"Skylink/_parseInfo:method\"}}_parseInfo(){{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "httpPortList",
                                    "description": "For success state. The list of HTTP\n  ports for reconnection retries. This would be stored in\n  {{#crossLink \"Skylink/_socketPorts:attribute\"}}_socketPorts.http:{{/crossLink}}.",
                                    "type": "Array"
                                },
                                {
                                    "name": "httpPortList.(#index)",
                                    "description": "The HTTP port that Skylink\n  could reattempt to establish for a signaling connection with <code>http:</code> protocol.",
                                    "type": "Number"
                                },
                                {
                                    "name": "httpsPortList",
                                    "description": "For success state. The list of HTTPS\n  ports for reconnection retries. This would be stored in\n  {{#crossLink \"Skylink/_socketPorts:attribute\"}}_socketPorts.https:{{/crossLink}}.",
                                    "type": "Array"
                                },
                                {
                                    "name": "httpsPortList.(#index)",
                                    "description": "The HTTPS port that Skylink\n  could reattempt to establish for a signaling connection with <code>https:</code> protocol or\n  when {{#crossLink \"Skylink/_forceSSL:attribute\"}}_forceSSL{{/crossLink}} is enabled.",
                                    "type": "Number"
                                },
                                {
                                    "name": "ipSigserver",
                                    "description": "For success state. The platform signaling endpoint URI\n  to open socket connection with. This would be stored in\n  {{#crossLink \"Skylink/_signalingServer:attribute\"}}_signalingServer{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "roomCred",
                                    "description": "For success state. The generated room token given\n  by the platform server for starting the platform signaling connection. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.token{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "room_key",
                                    "description": "For success state. The room ID for identification\n  to the platform signaling connection. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.id{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "start",
                                    "description": "For success state. The start datetime stamp (in The startDateTime in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n  sent by the platform server as an indication for the starting datetime of\n  the platform signaling connection to self. This would be stored in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room.startDateTime{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "timeStamp",
                                    "description": "For success state. The self session timestamp.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.timeStamp{{/crossLink}}",
                                    "type": "String"
                                },
                                {
                                    "name": "userCred",
                                    "description": "For success state. The self session access token.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.token{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "username",
                                    "description": "For success state. The self session ID.\n  This would be stored in {{#crossLink \"Skylink/_user:attribute\"}}_user.username{{/crossLink}}.",
                                    "type": "String"
                                },
                                {
                                    "name": "info",
                                    "description": "For failure state. The error message thrown by\n  the platform server.",
                                    "type": "String"
                                },
                                {
                                    "name": "error",
                                    "description": "For failure state. The error code of the error thrown by\n  the platform server.",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "params",
                    "description": "HTTP Params The HTTP data parameters that would be\n   <code>application/json;charset=UTF-8</code> encoded when sent to the\n   platform server.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 535,
            "description": "Parses the connection information retrieved from the platform server and\n  stores them into the relevant attributes in\n  {{#crossLink \"Skylink/_room:attribute\"}}_room{{/crossLink}} and\n  {{#crossLink \"Skylink/_user:attribute\"}}_user{{/crossLink}}.",
            "itemtype": "method",
            "name": "_parseInfo",
            "params": [
                {
                    "name": "info",
                    "description": "The HTTP response data if the HTTP status\n  code is <code>200</code> (which means <var>HTTP OK</var> code)",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "pc_constraints",
                            "description": "The RTCPeerConnection constraints.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "media_constraints",
                            "description": "The getUserMedia() MediaStreamConstraints.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "offer_constraints",
                            "description": "The RTCPeerConnection RTCOfferOptions.\n  The data is in JSON stringified string and requires converting the JSON string\n     to an JSON object to use the object.",
                            "type": "String"
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "String",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The default\n  audio stream channel for self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "video",
                                    "description": "The default\n  video stream channel for self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String"
                                },
                                {
                                    "name": "data",
                                    "description": "The default\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for starting the\n  selected room connection.",
                            "type": "String"
                        },
                        {
                            "name": "apiOwner",
                            "description": "The Skylink server Application Key owner string for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "httpPortList",
                            "description": "The list of HTTP\n  ports for reconnection retries.",
                            "type": "Array",
                            "props": [
                                {
                                    "name": "(#index)",
                                    "description": "The HTTP port that Skylink\n  could reattempt to establish for a signaling connection with <code>http:</code> protocol.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "httpsPortList",
                            "description": "The list of HTTPS\n  ports for reconnection retries.",
                            "type": "Array",
                            "props": [
                                {
                                    "name": "(#index)",
                                    "description": "The HTTPS port that Skylink\n  could reattempt to establish for a signaling connection with <code>https:</code> protocol or\n  when {{#crossLink \"Skylink/_forceSSL:attribute\"}}_forceSSL{{/crossLink}} is enabled.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "ipSigserver",
                            "description": "The platform signaling endpoint URI\n  to open socket connection with.",
                            "type": "String"
                        },
                        {
                            "name": "roomCred",
                            "description": "The generated room token given\n  by the platform server for starting the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "room_key",
                            "description": "For success state. The room ID for identification\n  to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "start",
                            "description": "The start datetime stamp (in The startDateTime in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601) that the call has started\n  sent by the platform server as an indication for the starting datetime of\n  the platform signaling connection to self.",
                            "type": "String"
                        },
                        {
                            "name": "timeStamp",
                            "description": "The self session timestamp.",
                            "type": "String"
                        },
                        {
                            "name": "userCred",
                            "description": "The self session access token.",
                            "type": "String"
                        },
                        {
                            "name": "username",
                            "description": "The self session ID.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 664,
            "description": "Starts loading the required dependencies and then retrieve the required\n  connection information from the platform server.",
            "itemtype": "method",
            "name": "_loadInfo",
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Room",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 759,
            "description": "Starts loading the required connection information to start connection\n  based on the selected room in {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.",
            "itemtype": "method",
            "name": "_initSelectedRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The room to retrieve required connection information\n  to start connection. If room is not provided, the room\n  would default to the the <code>defaultRoom</code> option set\n  in {{#crossLink \"Skylink/init:method\"}}init() settings{{/crossLink}}.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback fired after required connection\n  information has been retrieved successfully with the provided media\n  settings or have met with an exception.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "trigger": "readyStateChange",
            "access": "private",
            "tagname": "",
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 810,
            "description": "Initialises and configures Skylink to begin any connection.\n<b>NOTE</b> that this is the first method that has to be called before\n  using any other functionalities other than debugging features like\n  {{#crossLink \"Skylink/setLogLevel:method\"}}setLogLevel(){{/crossLink}} and\n  {{#crossLink \"Skylink/setDebugMode:method\"}}setDebugMode(){{/crossLink}} and\n  after all event subscriptions like {{#crossLink \"Skylink/on:method\"}}on(){{/crossLink}}\n  or {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}} has been made.\nThis is where the Application Key is configured and attached to Skylink for usage.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "The configuration settings for Skylink.\n  If provided options is a <var>typeof</var> <code>string</code>, it will\n  be interpreted as the Application Key being provided.",
                    "type": "String|JSON",
                    "props": [
                        {
                            "name": "appKey",
                            "description": "Previously known as <code>apiKey</code>.\n  The Application Key that Skylink uses for initialising and connecting rooms.",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "The default room that\n  Skylink should connect to if there is no room provided in\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}}.\n  If this value is not provided, the default room value would be\n  the Application Key provided.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "options.appKey"
                        },
                        {
                            "name": "roomServer",
                            "description": "The platform server URL that Skylink makes a\n  <code>HTTP /GET</code> to retrieve the connection information required.\n  This is a debugging feature, and it's not advisable to manipulate\n    this value unless you are using a beta platform server.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "<i>Debugging Feature</i>.\n   The flag that indicates if PeerConnections\n   should enable trickling of ICE to connect the ICE connection. Configuring\n   this value to <code>false</code> may result in a slower connection but\n   a more stable connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections\n  should have any DataChannel connections. Configuring this value to <code>false</code>\n  may result in failure to use features like\n  {{#crossLink \"Skylink/sendBlobData:method\"}}sendBlobData(){{/crossLink}},\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}} and\n  {{#crossLink \"Skylink/sendURLData:method\"}}sendURLData(){{/crossLink}} or any\n  DataChannel connection related services.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableTURNServer",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections connection should use any TURN server connection.\n  Tampering this flag may disable any successful PeerConnection\n  that is behind any firewalls, so set this value at your own risk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableSTUNServer",
                            "description": "<i>Debugging feature</i>.\n  The flag that indicates if PeerConnections connection should use any STUN server connection.\n  Tampering this flag may cause issues to connections, so set this value at your own risk.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "forceTURN",
                            "description": "The flag that indicates if PeerConnections connection\n  should only use TURN server connection which enables a quicker connectivity.\n  This configuration will override the settings for <code>enableTURNServer</code>\n  and <code>enableSTUNServer</code> and set <code>enableTURNServer</code> as <code>true</code> and\n  <code>enableSTUNServer</code> as <code>false</code> if the value is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "usePublicSTUN",
                            "description": "The flag that indicates if PeerConnections connection\n  should enable usage of public STUN server connection connectivity.\n  This configuration would not work if <code>enableSTUNServer</code> is set to <code>false</code>\n  or <code>forceTURN</code> is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "TURNServerTransport",
                            "description": "<i>Debugging feature</i>.\n  The TURN server transport to enable for TURN server connections.\n  Tampering this flag may cause issues to connections, so set this value at your own risk.\n  [Rel: Skylink.TURN_TRANSPORT]",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "Skylink.TURN_TRANSPORT.ANY"
                        },
                        {
                            "name": "credentials",
                            "description": "The credentials configured for starting a new persistent\n  room meeting or connecting with Application Keys that do not use CORS authentication.\n  Setting the <code>startDateTime</code> or the <code>duration</code> will not affect\n  the actual duration for non persistent rooms. This feature would only affect connections with\n  Application Keys that is configured for persistent room feature.\n  To enable persistent room or disable CORS, you may set it in the developer console.\n  CORS may be disabled by setting the platform to <code>\"Other\"</code>.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "The room start datetime stamp in\n  <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a>.\n  This will start a new meeting based on the starting datetime stamp\n  in the room that was selected to join for Application Key that is configured\n  with persistent room feature. You may use\n  <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString\">\n  Date.toISOString()</a> to retrieve ISO 8601 formatted date time stamp.\n  The start date time of the room will not affect non persistent room connection.",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "The duration (in hours)\n  that the room duration should be in. This will set the duration starting from\n  the provided <code>startDateTime</code> onwards and after the duration is over,\n  the meeting is over and the room is closed for Application Key that is\n  configured with persistent room feature.\n  The duration will not affect non persistent room connection.The duration of the meeting in hours.<br>\n  <small>E.g. <code>0.5</code> for half an hour, <code>1.4</code> for 1 hour and 24 minutes</small>",
                                    "type": "Number"
                                },
                                {
                                    "name": "credentials",
                                    "description": "The room credentials for Application Key.\n  This is required for rooms connecting without CORS verification or starting a new persistent room meeting.<br><br>\n  <u>To generate the credentials:</u><br>\n  <ol>\n  <li>Concatenate a string that consists of the room name\n    the room meeting duration (in hours) and the start date timestamp (in ISO 8601 format).<br>\n    <small>Format <code>room + \"_\" + duration + \"_\" + startDateTimeStamp</code></small></li>\n  <li>Hash the concatenated string with the Application Key token using\n    <a href=\"https://en.wikipedia.org/wiki/SHA-1\">SHA-1</a>.\n    You may use the <a href=\"https://code.google.com/p/crypto-js/#HMAC\">CryptoJS.HmacSHA1</a> function to do so.<br>\n    <small>Example <code>var hash = CryptoJS.HmacSHA1(concatenatedString, token);</code></small></li>\n  <li>Convert the hash to a <a href=\"https://en.wikipedia.org/wiki/Base64\">Base64</a> encoded string. You may use the\n    <a href=\"https://code.google.com/p/crypto-js/#The_Cipher_Output\">CryptoJS.enc.Base64</a> function\n    to do so.<br><small>Example <code>var base64String = hash.toString(CryptoJS.enc.Base64); </code></small></li>\n  <li>Encode the Base64 encoded string to a URI component using UTF-8 encoding with\n    <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\">encodeURIComponent()</a>.<br>\n    <small>Example <code>var credentials = encodeURIComponent(base64String);</code></small></li>\n  </ol><br>",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "audioFallback",
                            "description": "The flag that indicates if there is a failure in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}} in retrieving user media\n  video stream, it should fallback to retrieve audio stream only. This would not work for\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom(){{/crossLink}} except\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "forceSSL",
                            "description": "The flag to enforce an SSL platform signaling and platform server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  platform signaling and platform server connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "audioCodec",
                            "description": "<i>Debugging Feature</i>.\n  The preferred audio codec that PeerConnection\n  streaming audio codec should use in the connection when available. If not available, the default\n  codec would be the browser generated session description selected codec. [Rel: Skylink.AUDIO_CODEC]",
                            "type": "String",
                            "optional": true,
                            "optdefault": "Skylink.AUDIO_CODEC.AUTO"
                        },
                        {
                            "name": "videoCodec",
                            "description": "<i>Debugging Feature</i>.\n  The preferred video codec that PeerConnection\n  streaming video codec should use in the connection when available. If not available, the default\n  codec would be the browser generated session description selected codec. [Rel: Skylink.VIDEO_CODEC]",
                            "type": "String",
                            "optional": true,
                            "optdefault": "Skylink.VIDEO_CODEC.AUTO"
                        },
                        {
                            "name": "socketTimeout",
                            "description": "The timeout that the socket connection should throw a\n  timeout exception when socket fails to receive a response from connection. Depending on\n  the max retries left based on the availability of ports given by the platform server,\n  the socket will reattempt to establish a socket connection with the signaling server.<br>\n  The mininum timeout value is <code>5000</code>.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "20000"
                        },
                        {
                            "name": "forceTURNSSL",
                            "description": "The flag to enforce an SSL TURN server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used. This flag is mostly used for self domain accessing protocol\n  that is <code>http:</code> and enforcing the SSL connections for\n  TURN server connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has been\n  initialised successfully or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "errorCode",
                                    "description": "The\n  <a href=\"#attr_READY_STATE_CHANGE_ERROR\">READY_STATE_CHANGE_ERROR</a>\n  if there is an <a href=\"#event_readyStateChange\">readyStateChange</a>\n  event error that caused the failure for initialising Skylink.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                                    "type": "Number"
                                },
                                {
                                    "name": "error",
                                    "description": "The exception thrown that caused the failure\n  for initialising Skylink.",
                                    "type": "Object"
                                },
                                {
                                    "name": "status",
                                    "description": "The XMLHttpRequest status code received\n  when exception is thrown that caused the failure for initialising Skylink.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "appKey",
                                    "description": "Previously known as <code>apiKey</code>.\n  The Application Key that Skylink uses for initialising and connecting rooms.",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultRoom",
                                    "description": "The default room that\n  Skylink should connect to if there is no room provided in\n  <a href=\"#method_joinRoom\">joinRoom()</a>.",
                                    "type": "String"
                                },
                                {
                                    "name": "roomServer",
                                    "description": "The platform server URL that Skylink makes a\n  <code>HTTP /GET</code> to retrieve the connection information required.",
                                    "type": "String"
                                },
                                {
                                    "name": "enableIceTrickle",
                                    "description": "The flag that indicates if PeerConnections\n   should enable trickling of ICE to connect the ICE connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableDataChannel",
                                    "description": "The flag that indicates if PeerConnections\n  should have any DataChannel connections.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableTURNServer",
                                    "description": "The flag that indicates if\n  PeerConnections connection should use any TURN server connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableSTUNServer",
                                    "description": "The flag that indicates if\n  PeerConnections connection should use any STUN server connection.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "TURNServerTransport",
                                    "description": "The TURN server transport\n  to enable for TURN server connections.\n  [Rel: Skylink.TURN_TRANSPORT]",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "audioFallback",
                                    "description": "The flag that indicates if there is a failure in\n  <a href=\"#method_getUserMedia\">getUserMedia()</a> in retrieving user media\n  video stream, it should fallback to retrieve audio stream only.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceSSL",
                                    "description": "The flag to enforce an SSL platform signaling and platform server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "audioCodec",
                                    "description": "The preferred audio codec that PeerConnection\n  streaming audio codec should use in the connection when available. [Rel: Skylink.AUDIO_CODEC]",
                                    "type": "String"
                                },
                                {
                                    "name": "videoCodec",
                                    "description": "The preferred video codec that PeerConnection\n  streaming video codec should use in the connection when available. [Rel: Skylink.VIDEO_CODEC]",
                                    "type": "String"
                                },
                                {
                                    "name": "socketTimeout",
                                    "description": "The timeout that the socket connection should throw a\n  timeout exception when socket fails to receive a response from connection. Depending on\n  the max retries left based on the availability of ports given by the platform server,\n  the socket will reattempt to establish a socket connection with the signaling server.",
                                    "type": "Number"
                                },
                                {
                                    "name": "forceTURNSSL",
                                    "description": "The flag to enforce an SSL TURN server connection.\n  If self domain accessing protocol is <code>https:</code>, SSL connections\n  would be automatically used.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceTURN",
                                    "description": "The flag that indicates if PeerConnections connection\n  should only use TURN server connection which enables a quicker connectivity.\n  This configuration will override the settings for <code>enableTURNServer</code>\n  and <code>enableSTUNServer</code> and set <code>enableTURNServer</code> as <code>true</code> and\n  <code>enableSTUNServer</code> as <code>false</code> if the value is set to <code>true</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "usePublicSTUN",
                                    "description": "The flag that indicates if PeerConnections connection\n  should enable usage of public STUN server connection connectivity.\n  This configuration would not work if <code>enableSTUNServer</code> is set to <code>false</code>\n  or <code>forceTURN</code> is set to <code>true</code>.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Note: Default room is appKey when no room\n  // Example 1: To initalize without setting any default room.\n  SkylinkDemo.init(\"YOUR_APP_KEY_HERE\");\n\n  // Example 2: To initialize with appKey and defaultRoom\n  SkylinkDemo.init({\n    appKey: \"YOUR_APP_KEY_HERE\",\n    defaultRoom: \"mainHangout\"\n  });\n\n  // Example 3: To initialize with credentials to set startDateTime and\n  // duration of the room\n  var hash = CryptoJS.HmacSHA1(roomname + \"_\" + duration + \"_\" +\n    (new Date()).toISOString(), token);\n  var credentials = encodeURIComponent(hash.toString(CryptoJS.enc.Base64));\n  SkylinkDemo.init({\n    appKey: \"YOUR_APP_KEY_HERE\",\n    defaultRoom: \"mainHangout\"\n    credentials: {\n       startDateTime: (new Date()).toISOString(),\n       duration: 500,\n       credentials: credentials\n    }\n  });\n\n  // Example 4: To initialize with callback\n  SkylinkDemo.init(\"YOUR_APP_KEY_HERE\", function(error,success){\n    if (error){\n      console.error(\"Init failed:\", error);\n    }\n    else{\n      console.info(\"Init succeed:\", success);\n    }\n  });"
            ],
            "trigger": "readyStateChange",
            "required": 1,
            "component": "Room",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 1,
            "description": "The list of Skylink <code>console</code> logging levels available.\nRefer to [Javascript Web Console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "attribute",
            "name": "LOG_LEVEL",
            "type": "JSON",
            "params": [
                {
                    "name": "DEBUG",
                    "description": "Displays <code>debug</code>, <code>log</code>,\n  <code>info</code>, <code>warn</code> and <code>error</code> console logs.",
                    "type": "Number"
                },
                {
                    "name": "LOG",
                    "description": "Displays <code>log</code>,\n  <code>info</code>, <code>warn</code> and <code>error</code> console logs.",
                    "type": "Number"
                },
                {
                    "name": "INFO",
                    "description": "Displays <code>info</code>, <code>warn</code> and\n  <code>error</code> console logs.",
                    "type": "Number"
                },
                {
                    "name": "WARN",
                    "description": "Displays <code>warn</code> and <code>error</code> console logs.",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "<i>This is the default log level.</i> Displays <code>error</code> console logs only.",
                    "type": "Number"
                }
            ],
            "readonly": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 27,
            "description": "The format string that is printed in every Skylink console logs for Skylink logs identification.<br>\n<small>Example: <code>\"SkylinkJS - <<logs here>>\"</code></small>",
            "itemtype": "attribute",
            "name": "_LOG_KEY",
            "type": "String",
            "scoped": "true",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 42,
            "description": "Stores the list of Skylink console logging levels in an array.",
            "itemtype": "attribute",
            "name": "_LOG_LEVELS",
            "type": "Array",
            "required": 1,
            "scoped": "true",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 55,
            "description": "Stores the current Skylink log level.\nBy default, the value is <code>ERROR</code>.",
            "itemtype": "attribute",
            "name": "_logLevel",
            "type": "String",
            "default": "Skylink.LOG_LEVEL.ERROR",
            "required": 1,
            "scoped": "true",
            "access": "private",
            "tagname": "",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 70,
            "description": "The flag that indicates if Skylink debugging mode is enabled.\nThis is not to be confused with {{#crossLink \"Skylink/setLogLevel:method\"}}setLogLevel(){{/crossLink}}\n  functionality, as that touches the output Web console log levels, and this\n  enables the debugging trace of the logs <code>console.trace()</code> or storage of the console logs.",
            "itemtype": "attribute",
            "name": "_enableDebugMode",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 87,
            "description": "The flag that indicates if Skylink should store the logs in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_enableDebugStack",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 102,
            "description": "The flag that indicates if Skylink console logs should all output as\n  <code>console.trace()</code>.\nIf <code>console.trace()</code> is not supported, it will fallback and\n  output as <code>console.log()</code>.",
            "itemtype": "attribute",
            "name": "_enableDebugTrace",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 119,
            "description": "Stores all Skylink console logs.",
            "itemtype": "attribute",
            "name": "_storedLogs",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 132,
            "description": "Gets the stored Skylink console logs from\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_getStoredLogsFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be returned. If value is not provided, it will return all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The array of stored console logs based on the log level provided.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 160,
            "description": "Clears the stored Skylink console logs in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_clearAllStoredLogsFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be cleared. If value is not provided, it will clear all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 178,
            "description": "Prints all the stored Skylink console logs into the Web console from\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}.",
            "itemtype": "method",
            "name": "_printAllStoredLogsFn",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 205,
            "description": "The object that handles the stored Skylink console logs.\nSkylink {{#crossLink \"Skylink/setDebugMode:method\"}}setDebugMode(){{/crossLink}} <code>storeLogs</code>\n  must be set as <code>true</code> to enable the storage of logs.",
            "itemtype": "property",
            "name": "SkylinkLogs",
            "type": "JSON",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 218,
            "description": "Gets the stored Skylink console logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.getLogs",
            "return": {
                "description": "The array of stored console logs based on the log level provided.",
                "type": "Array"
            },
            "type": "Function",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be returned. If value is not provided, it will return all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 234,
            "description": "Clears the stored Skylink console logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.clearAllLogs",
            "type": "Function",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of Skylink console logs\n  that should be cleared. If value is not provided, it will clear all stored console logs.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 249,
            "description": "Prints all the stored Skylink console logs into the [Web console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "property",
            "name": "SkylinkLogs.printAllLogs",
            "type": "Function",
            "required": 1,
            "global": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 262,
            "description": "Handles the Skylink logs and stores the console log message in\n  {{#crossLink \"Skylink/_storedLogs:attribute\"}}_storedLogs{{/crossLink}}\n  if {{#crossLink \"Skylink/_enableDebugStack:attribute\"}}_enableDebugStack{{/crossLink}} is\n  set to <code>true</code> and prints out the log to the Web console.",
            "itemtype": "method",
            "name": "_logFn",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The console log message log level. [Rel: Skylink.LOG_LEVEL]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 344,
            "description": "The object that handles the logging functionality in Skylink.",
            "itemtype": "attribute",
            "name": "log",
            "type": "JSON",
            "params": [
                {
                    "name": "debug",
                    "description": "See {{#crossLink \"Skylink/log.debug:property\"}}log.debug(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "log",
                    "description": "See {{#crossLink \"Skylink/log.log:property\"}}log.log(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "info",
                    "description": "See {{#crossLink \"Skylink/log.info:property\"}}log.info(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "warn",
                    "description": "See {{#crossLink \"Skylink/log.warn:property\"}}log.warn(){{/crossLink}}.",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "See {{#crossLink \"Skylink/log.error:property\"}}log.error(){{/crossLink}}.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 361,
            "description": "Handles the <code>console.debug</code> console log message.",
            "itemtype": "property",
            "name": "log.debug",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 387,
            "description": "Handles the <code>console.log</code> console log message.",
            "itemtype": "property",
            "name": "log.log",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.log(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 413,
            "description": "Handles the <code>console.info</code> console log message.",
            "itemtype": "property",
            "name": "log.info",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"This is my message\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 439,
            "description": "Handles the <code>console.warn</code> console log message.",
            "itemtype": "property",
            "name": "log.warn",
            "type": "Function",
            "example": [
                "\n  // Logging for message\n  log.debug(\"Here's a warning. Please do xxxxx to resolve this issue\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 464,
            "description": "Handles the <code>console.error</code> console log message.",
            "itemtype": "property",
            "name": "log.error",
            "type": "Function",
            "example": [
                "\n  // Logging for external information\n  log.error(\"There has been an error\", object);"
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "component": "Log",
            "since": "0.5.4",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "message",
                    "description": "The console log message contents.",
                    "type": "Array|String",
                    "props": [
                        {
                            "name": "1",
                            "description": "The interface the message is associated with.",
                            "type": "String"
                        },
                        {
                            "name": "2",
                            "description": "Any additional message information that the message is\n   associated with.",
                            "type": "String|Array"
                        },
                        {
                            "name": "3:",
                            "description": "The console log message message data.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "0",
                    "description": "The PeerConnection ID the message is associated with.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "debugObject",
                    "description": "The console debugging message object to accompany\n   and display that associates with the console log message.",
                    "type": "Object|String",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 491,
            "description": "Configures the Skylink console log level that would determine the\n  type of console logs that would be printed in the [Web console](https://developer.mozilla.org/en/docs/Web/API/console).",
            "itemtype": "method",
            "name": "setLogLevel",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The log level of console message logs to\n   be printed in the Web console. [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "example": [
                "\n  //Display logs level: Error, warn, info, log and debug.\n  SkylinkDemo.setLogLevel(SkylinkDemo.LOG_LEVEL.DEBUG);"
            ],
            "component": "Log",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 518,
            "description": "Configures the Skylink debugging tools.",
            "itemtype": "method",
            "name": "setDebugMode",
            "params": [
                {
                    "name": "options",
                    "description": "The debugging settings for Skylink.\n  If provided options is a <var>typeof</var> <code>boolean</code>,\n  <code>storeLogs</code> and <code>trace</code> will be set to <code>true</code>.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "trace",
                            "description": "The flag that indicates if Skylink console\n  logs should all output as <code>console.trace()</code>.\n  If <code>console.trace()</code> is not supported, it will fallback and\n  output as <code>console.log()</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "storeLogs",
                            "description": "The flag that indicates if\n  Skylink should store the logs in\n  {{#crossLink \"Skylink/SkylinkLogs:property\"}}SkylinkLogs{{/crossLink}}.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: just to enable\n  SkylinkDemo.setDebugMode(true);\n  // or\n  SkylinkDemo.setDebugMode();\n\n  // Example 2: just to disable\n  SkylinkDemo.setDebugMode(false);\n\n  // Example 3: disable storeLogs or trace feature individually\n  SkylinkDemo.setDebugMode({ trace: true });"
            ],
            "component": "Log",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1,
            "description": "Stores the list of {{#crossLink \"Skylink/on:method\"}}on(){{/crossLink}}\n  event subscription handlers.",
            "itemtype": "attribute",
            "name": "_EVENTS",
            "params": [
                {
                    "name": "(#eventName)",
                    "description": "The array of event subscription handlers that is\n  subscribed using {{#crossLink \"Skylink/on:method\"}}on() method{{/crossLink}}\n  associated with the event name.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The event subscription handler\n  associated with the event name. This is to be triggered multiple times\n  until {{#crossLink \"Skylink/off:method\"}}off(){{/crossLink}} is invoked for\n  this event subscription handler.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 20,
            "description": "Event triggered when the platform signaling socket connection is open and is ready for room connection.",
            "itemtype": "event",
            "name": "channelOpen",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 29,
            "description": "Event triggered when the platform signaling socket connection has closed.\nserver has closed.",
            "itemtype": "event",
            "name": "channelClose",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 39,
            "description": "Event triggered when Skylink is exchanging socket messages with the platform signaling\n  through the socket connection.\nThis is a debugging feature, and it's not advisable to subscribe to this event unless\n  you are debugging the socket messages received from the platform signaling.\nfrom the signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The socket message object data received from the platform signaling.",
                    "type": "JSON"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 53,
            "description": "Event triggered when Skylink socket connection with the platform signaling has occurred an exception.\nThis happens after a successful socket connection with the platform signaling.\nUsually at this stage, the signaling socket connection could be disrupted.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the exception.",
                    "type": "Object|String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 65,
            "description": "Event triggered when Skylink attempting to reconnect the socket connection with the platform signaling.",
            "itemtype": "event",
            "name": "channelRetry",
            "params": [
                {
                    "name": "fallbackType",
                    "description": "The fallback socket transport that Skylink is attempting to reconnect with.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                },
                {
                    "name": "currentAttempt",
                    "description": "The current reconnection attempt.",
                    "type": "Number"
                }
            ],
            "component": "Events",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 77,
            "description": "Event triggered when Skylink has failed to establish a socket connection with the platform signaling.",
            "itemtype": "event",
            "name": "socketError",
            "params": [
                {
                    "name": "errorCode",
                    "description": "The socket connection error code received.\n  [Rel: Skylink.SOCKET_ERROR]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Number|String|Object"
                },
                {
                    "name": "type",
                    "description": "The socket transport that Skylink has failed to connect with.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 91,
            "description": "Event triggered when Skylink is retrieving the connection information from the platform server.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "The current ready state of the retrieval when the event is triggered.\n  [Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in retrieval.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "JSON",
                    "optional": true,
                    "optdefault": "null",
                    "props": [
                        {
                            "name": "status",
                            "description": "Http status when retrieving information.\n  May be empty for other errors.",
                            "type": "Number"
                        },
                        {
                            "name": "errorCode",
                            "description": "The\n  <a href=\"#attr_READY_STATE_CHANGE_ERROR\">READY_STATE_CHANGE_ERROR</a>\n  if there is an <a href=\"#event_readyStateChange\">readyStateChange</a>\n  event error that caused the failure for initialising Skylink.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                            "type": "Number"
                        },
                        {
                            "name": "content",
                            "description": "The exception thrown that caused the failure\n  for initialising Skylink.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback.error.status",
                    "description": "The XMLHttpRequest status code received\n  when exception is thrown that caused the failure for initialising Skylink.",
                    "type": "Number"
                },
                {
                    "name": "room",
                    "description": "The selected room connection information that Skylink is attempting\n  to retrieve the information for to start connection to.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 117,
            "description": "Event triggered when a PeerConnection connection handshake state has changed.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "step",
                    "description": "The PeerConnection connection handshake state.\n  [Rel: Skylink.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the connection\n  handshake state.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in\n  the connection handshaking.",
                    "type": "Object|String",
                    "optional": true
                }
            ],
            "component": "Events",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 132,
            "description": "Event triggered when a PeerConnection connection ICE gathering state has changed.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The PeerConnection connection ICE gathering state.\n  [Rel: Skylink.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the ICE gathering state.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 144,
            "description": "Event triggered when a PeerConnection connection signaling state has changed.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The PeerConnection connection signaling state.\n  [Rel: Skylink.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the connection\n  signaling state.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 157,
            "description": "Event triggered when a PeerConnection connection ICE connection state has changed.",
            "itemtype": "event",
            "name": "iceConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The PeerConnection connection ICE connection state.\n  [Rel: Skylink.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the ICE connection state.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 169,
            "description": "Event triggered when Skylink fails to have access to self user media stream.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Object|String"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 181,
            "description": "Event triggered when Skylink have been successfully granted access to self user media stream and\n  attached to Skylink.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The self user [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.",
                    "type": "Object"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 196,
            "description": "Event triggered when thhe application requires to retrieve self user media stream with\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.\nOnce the self user media stream is attached to Skylink, the socket connection to\n  the signaling will start and then join self to the selected room.\nThis event will be triggered if <code>manualGetUserMedia</code> is set to <code>true</code> in\n  {{#crossLink \"Skylink/joinRoom:method\"}}joinRoom() options{{/crossLink}}.",
            "itemtype": "event",
            "name": "mediaAccessRequired",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 210,
            "description": "Event triggered when self user media stream attached to Skylink has been stopped.",
            "itemtype": "event",
            "name": "mediaAccessStopped",
            "params": [
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 221,
            "description": "Event triggered when a PeerConnection peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the new peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 298,
            "description": "Event triggered when a PeerConnection connection has been restarted for\n  a reconnection.",
            "itemtype": "event",
            "name": "peerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the connection that\n  is restarted for a reconnection.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelfInitiateRestart",
                    "description": "The flag that indicates if self is\n   the one who have initiated the PeerConnection connection restart.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 377,
            "description": "Event triggered when a PeerConnection peer information have been updated.\nThis event would only be triggered if self is in the room.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the peer with updated information.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 454,
            "description": "Event triggered when a PeerConnection peer leaves the room.",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the peer\n  that had left the room.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 531,
            "description": "Event triggered when a Stream is available from a PeerConnection peer\n  in the room.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated to the Stream object.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "The PeerConnection peer\n  [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object that is sent in this connection.\n  To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.",
                    "type": "Object"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 613,
            "description": "Event triggered when a message is received from a PeerConnection peer.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from PeerConnection peer.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "The message object content. This is the\n  message data content passed in {{#crossLink \"Skylink/sendMessage:method\"}}sendMessage(){{/crossLink}}\n  and {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "The PeerConnection ID of the peer who\n  sent the message object.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "The array of targeted PeerConnection\n  peers or the single targeted PeerConnection peer the message is\n  targeted to received the message object. If the value is <code>null</code>, the message\n  object is broadcasted to all PeerConnection peers in the room.",
                            "type": "String|Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag that indicates if the message object is sent to\n  targeted PeerConnection peers and not broadcasted to all PeerConnection peers.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "The flag that indicates if the message object is sent\n  from the platform signaling socket connection or P2P channel connection (DataChannel connection).",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of peer who sent the\n  message object.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 704,
            "description": "Event triggered when a data transfer is completed in a DataChannel connection.",
            "itemtype": "event",
            "name": "incomingData",
            "params": [
                {
                    "name": "data",
                    "description": "The transferred data object.<br>\n  For Blob data object, see the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the Blob data object to a download link.",
                    "type": "Blob|String"
                },
                {
                    "name": "transferId",
                    "description": "The transfer ID of the completed data transfer.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transferred\n  targeted PeerConnection peers and not broadcasted to all PeerConnection peers.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if the data transfer is from self or from\n  associated PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 732,
            "description": "Event triggered when a data transfer request is made to PeerConnection peer in a\n  DataChannel connection.",
            "itemtype": "event",
            "name": "incomingDataRequest",
            "params": [
                {
                    "name": "transferId",
                    "description": "The transfer ID of the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transferred\n  targeted PeerConnection peers and not broadcasted to all PeerConnection peers.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if the data transfer request is from self or from\n  associated PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 756,
            "description": "Event triggered when the currently connected room lock status have been updated.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "The flag that indicates if the currently connected room is locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the peer that updated the\n  currently connected room lock status.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 834,
            "description": "Event triggered when a PeerConnection connection DataChannel connection state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The PeerConnection connection DataChannel connection state.\n  [Rel: Skylink.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the DataChannel connection.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in\n  the DataChannel connection.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel connection ID.",
                    "type": "String"
                },
                {
                    "name": "channelType",
                    "description": "The DataChannel connection functionality type.\n  [Rel: Skylink.DATA_CHANNEL_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 852,
            "description": "Event triggered when a data transfer made to PeerConnection peer in a\n  DataChannel connection state has changed.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The data transfer made to PeerConnection peer\n  in a DataChannel connection state.\n  [Rel: Skylink.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The transfer ID of the completed data transfer.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated with the data transfer.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The transfer data object information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The transfer data object. This is defined\n  only after the transfer data is completed, when the state is\n  <code>DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED</code> and\n  <code>DATA_TRANSFER_STATE.UPLOAD_STARTED</code><br>\n  For Blob data object, see the\n  [createObjectURL](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL)\n  method on how you can convert the Blob data object to a download link.",
                            "type": "Blob|String"
                        },
                        {
                            "name": "name",
                            "description": "The transfer data object name.\n  If there is no name based on the Blob given, the name would be the transfer ID.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "transferId"
                        },
                        {
                            "name": "size",
                            "description": "The transfer data size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The type of data transfer initiated.\n  Available types are <code>\"dataURL\"</code> and <code>\"blob\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The waiting timeout in seconds that the DataChannel\n  connection data transfer should wait before throwing an exception and terminating the data transfer.",
                            "type": "String"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag to indicate if the data transferred\n  targeted PeerConnection peers and not broadcasted to all PeerConnection peers.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error object thrown when there is a failure in transferring data.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "message",
                            "description": "The exception thrown that caused the failure\n  for transferring data.",
                            "type": "Object"
                        },
                        {
                            "name": "transferType",
                            "description": "The data transfer type to indicate if the DataChannel is\n  uploading or downloading the data transfer when the exception occurred.\n  [Rel: Skylink.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "component": "Events",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 890,
            "description": "Event triggered when Skylink receives an system action from the platform signaling.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The system action that is received from the platform signaling.\n  [Rel: Skylink.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message received from the platform signaling when\n  the system action and reason is given.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The reason received from the platform signaling behind the\n  system action given.\n  [Rel: Skylink.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 906,
            "description": "Event triggered when a server PeerConnection peer joins the room.",
            "itemtype": "event",
            "name": "serverPeerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the new server peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server PeerConnection peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 919,
            "description": "Event triggered when a server PeerConnection peer leaves the room.",
            "itemtype": "event",
            "name": "serverPeerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the new server peer\n  that has left the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server PeerConnection peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 932,
            "description": "Event triggered when a sever PeerConnection connection has been restarted for\n  a reconnection.",
            "itemtype": "event",
            "name": "serverPeerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the new server peer\n  that has joined the room.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server PeerConnection peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 946,
            "description": "Event triggered when a PeerConnection connection Stream streaming has stopped.",
            "itemtype": "event",
            "name": "streamEnded",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated to the Stream object.\n  If self is not in the room, the value returned would be <code>null</code>.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "null"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if PeerConnection connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1025,
            "description": "Event triggered when a PeerConnection connection Stream streaming audio or video\n  stream muted status have been updated.",
            "itemtype": "event",
            "name": "streamMuted",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID associated to the Stream object.\n  If self is not in the room, the value returned would be <code>null</code>.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The peer information associated\n  with the Peer Connection.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag that indicates if\n  stereo option should be explictly enabled to an OPUS enabled audio stream.\n  Check the <code>audioCodec</code> configuration settings in\n  {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  to enable OPUS as the audio codec. Note that stereo is already enabled\n  for OPUS codecs, this only adds a stereo flag to the SDP to explictly\n  enable stereo in the audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The PeerConnection platform agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The PeerConnection platform browser or agent name.",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The PeerConnection platform browser or agent version.",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The PeerConnection platform name.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The current room that the PeerConnection peer is in.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag that indicates if self is the PeerConnection peer.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag that indicates if PeerConnection connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1105,
            "description": "Event triggered when the retrieval of the list of rooms and peers under the same realm based\n  on the Application Key configured in {{#crossLink \"Skylink/init:method\"}}init(){{/crossLink}}\n  from the platform signaling state has changed.",
            "itemtype": "event",
            "name": "getPeersStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The retrieval current status.",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The PeerConnection ID of the privileged PeerConnection peer.",
                    "type": "String"
                },
                {
                    "name": "peerList",
                    "description": "The retrieved list of rooms and peers under the same realm based on\n  the Application Key configured in <code>init()</code>.",
                    "type": "JSON"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1120,
            "description": "Event triggered when introductory state of two PeerConnection peers to each other\n  selected by the privileged PeerConnection peer state has changed.",
            "itemtype": "event",
            "name": "introduceStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The PeerConnection peer introduction state.",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The PeerConnection ID of the privileged PeerConnection peer.",
                    "type": "String"
                },
                {
                    "name": "sendingPeerId",
                    "description": "The PeerConnection ID of the peer\n  that initiates the connection with the introduced PeerConnection peer.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The PeerConnection ID of the\n  introduced peer who would be introduced to the initiator PeerConnection peer.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The error object thrown when there is a failure in\n  the introduction with the two PeerConnection peers.\n  If received as <code>null</code>, it means that there is no errors.",
                    "type": "String"
                }
            ],
            "component": "Events",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1140,
            "description": "Stores the list of {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}}\n  event subscription handlers.",
            "itemtype": "attribute",
            "name": "_onceEvents",
            "params": [
                {
                    "name": "(#eventName)",
                    "description": "The array of event subscription handlers that is\n  subscribed using {{#crossLink \"Skylink/once:method\"}}once() method{{/crossLink}}\n  associated with the event name.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "(#index)",
                            "description": "The event subscription handler\n  associated with the event name. This is to be triggered once when condition is met.\n  Alternatively, the <code>once()</code> event subscription handler can be\n  unsubscribed with {{#crossLink \"Skylink/off:method\"}}off(){{/crossLink}} before\n  condition is met.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Events",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1161,
            "description": "The throttling function datetime stamp in\n  [(ISO 8601 format)](https://en.wikipedia.org/wiki/ISO_8601).",
            "itemtype": "attribute",
            "name": "_timestamp",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Events",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1176,
            "description": "Triggers event subscription handlers that is associated with the event name.\n{{#crossLink \"Skylink/on:method\"}}on() event subscription handlers{{/crossLink}}\n  will be triggered always, but\n  {{#crossLink \"Skylink/once:method\"}}once() event subscription hadlers{{/crossLink}}\n  will only be triggered once the condition is met.",
            "itemtype": "method",
            "name": "_trigger",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to trigger that would trigger event subscription\n  handlers associated to the event name with the <code>arguments</code> parameters payload.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1235,
            "description": "Subscribes an event handler associated to the event name.\nThis event handler will always be triggered when the event name is triggered. If you\n  are looking for subscription event handler to be triggered once, check out\n  {{#crossLink \"Skylink/once:method\"}}once() event subscription{{/crossLink}}.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subsribe to the associated\n  Skylink event name that would be triggered once the event name is triggered.",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  SkylinkDemo.on(\"peerJoined\", function (peerId, peerInfo) {\n     alert(peerId + \" has joined the room\");\n  });"
            ],
            "component": "Events",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1262,
            "description": "Subscribes an event handler associated to the event name that\n   would only be triggered once the provided condition function has been met.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subscribe to the associated\n  Skylink event name to trigger once the condition has met. If\n  <code>fireAlways</code> option is set toe <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function"
                },
                {
                    "name": "condition",
                    "description": "The condition function that once the condition has\n  been met, trigger the event handler once. Return in the condition function <code>true</code>\n  to pass as meeting the condition.\n  If the condition function is not provided, the event handler will be triggered\n    once the Skylink event name is triggered.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fireAlways",
                    "description": "The flag that indicates if Skylink should interrupt this\n  <code>once()</code> function once the function has been triggered to not unsubscribe the\n  event handler but to always trigger when the condition has been met.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "example": [
                "\n  SkylinkDemo.once(\"peerConnectionState\", function (state, peerId) {\n    alert(\"Peer has left\");\n  }, function (state, peerId) {\n    return state === SkylinkDemo.PEER_CONNECTION_STATE.CLOSED;\n  });"
            ],
            "component": "Events",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1311,
            "description": "Unsubscribes an event handler associated to the event name.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to unsubscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to unsubscribe to the associated\n  Skylink event name. If the event handler is not provided, Skylink would\n  unsubscribe all event handlers subscribed to the associated event name.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Unsubscribe all event handlers related to the event\n  SkylinkDemo.off(\"peerJoined\");\n\n  // Example 2: Unsubscribe to one event handler\n  SkylinkDemo.off(\"peerJoined\", callback);"
            ],
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1358,
            "description": "Checks if the first condition is already met before doing an event\n  handler subscription to wait for the second condition to be met.\nThis method will do a event subscription with\n  {{#crossLink \"Skylink/once:method\"}}once(){{/crossLink}} as this\n  <code>_condition()</code> would only trigger once, unless <code>fireAlways</code>\n  is set to <code>true</code>.",
            "itemtype": "method",
            "name": "_condition",
            "params": [
                {
                    "name": "eventName",
                    "description": "The Skylink event name to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The event handler to subscribe to the associated\n  Skylink event name to trigger once the condition has met. If\n  <code>fireAlways</code> option is set to <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function"
                },
                {
                    "name": "checkFirst",
                    "description": "The first condition to check before\n  doing an event subscription to wait for second condition to meet.\n  Return in the first condition function <code>true</code> to pass as meeting the condition.\n  If the first condition is met, the event handler would be triggered\n  and the event handler will not be subscribed to the event or wait\n  for second condition to pass.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "condition",
                    "description": "The second condition function that once the it has\n  been met, it will trigger the event handler once.\n  Return in the second condition function <code>true</code> to pass as meeting the condition.\n  If the second condition is met, the event handler would be triggered and\n  depending if <code>fireAlways</code> option is set to <code>true</code>, this will\n  always be fired when condition is met.",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fireAlways",
                    "description": "The flag that indicates if Skylink should interrupt the\n  second condition function once the function has been triggered to not unsubscribe the\n  event handler but to always trigger when the second condition has been met.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1409,
            "description": "Starts the interval check for the condition provided to meet before clearing\n  the interval and triggering the callback provided.\nThis utilises <code>setInterval()</code> function.",
            "itemtype": "method",
            "name": "_wait",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback fired after the condition provided\n  has been met.",
                    "type": "Function"
                },
                {
                    "name": "condition",
                    "description": "The condition function that once the condition has\n  been met, trigger the callback. Return in the condition function <code>true</code>\n  to pass as meeting the condition.",
                    "type": "Function"
                },
                {
                    "name": "intervalTime",
                    "description": "The interval loop timeout that the interval\n  check should iterate based on the timeout provided (in ms).\n  By default, if the value is not configured, it is <code>50</code>ms.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "50"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1459,
            "description": "Returns a wrapper of the original function, which fires only once during\n a specified amount of time.",
            "itemtype": "method",
            "name": "_throttle",
            "params": [
                {
                    "name": "func",
                    "description": "The function that should be throttled.",
                    "type": "Function"
                },
                {
                    "name": "wait",
                    "description": "The amount of time that function need to throttled (in ms).",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The throttled function.",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "component": "Events",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 1,
            "description": "The list of Skylink estalishing socket connection error triggered states.",
            "itemtype": "attribute",
            "name": "SOCKET_ERROR",
            "type": "JSON",
            "params": [
                {
                    "name": "CONNECTION_FAILED",
                    "description": "Skylink have failed to\n  establish a socket connection with platform signaling in the first attempt.",
                    "type": "Number"
                },
                {
                    "name": "RECONNECTION_FAILED",
                    "description": "Skylink have failed to\n  reestablish a socket connection with platform signaling after the first attempt\n  <code>CONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "CONNECTION_ABORTED",
                    "description": "Attempt to reestablish socket connection\n  with platform signaling has been aborted after the failed first attempt\n  <code>CONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "RECONNECTION_ABORTED",
                    "description": "Attempt to reestablish socket connection\n  with platform signaling has been aborted after several failed reattempts\n  <code>RECONNECTION_FAILED</code>.",
                    "type": "String"
                },
                {
                    "name": "RECONNECTION_ATTEMPT",
                    "description": "Skylink is attempting to reestablish\n  a socket connection with platform signaling after a failed attempt\n  <code>CONNECTION_FAILED</code> or <code>RECONNECTION_FAILED</code>.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Socket",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 32,
            "description": "Stores the queued socket messages to sent to the platform signaling to\n  prevent messages from being dropped due to messages being sent in\n  less than a second interval.",
            "itemtype": "attribute",
            "name": "_socketMessageQueue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 46,
            "description": "Limits the socket messages being sent in less than a second interval\n  using the <code>setTimeout</code> object to prevent messages being sent\n  in less than a second interval.\nThe messaegs are stored in\n  {{#crossLink \"Skylink/_socketMessageQueue:attribute\"}}_socketMessageQueue{{/crossLink}}.",
            "itemtype": "attribute",
            "name": "_socketMessageTimeout",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 63,
            "description": "Stores the list of fallback ports that Skylink can attempt\n  to establish a socket connection with platform signaling.",
            "itemtype": "attribute",
            "name": "_socketPorts",
            "type": "JSON",
            "params": [
                {
                    "name": "http://",
                    "description": "The array of <code>HTTP</code> protocol fallback ports.\n   By default, the ports are <code>[80, 3000]</code>.",
                    "type": "Array"
                },
                {
                    "name": "https://",
                    "description": "The The array of <code>HTTP</code> protocol fallback ports.\n   By default, the ports are <code>[443, 3443]</code>.",
                    "type": "Array"
                }
            ],
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 83,
            "description": "The list of Skylink fallback socket transport types.",
            "itemtype": "attribute",
            "name": "SOCKET_FALLBACK",
            "type": "JSON",
            "params": [
                {
                    "name": "NON_FALLBACK",
                    "description": "The current socket connection attempt\n  is using the first selected socket connection port for\n  the current selected transport <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT",
                    "description": "The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTP</code> protocol connection with the current selected transport\n  <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT_SSL",
                    "description": "The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTPS</code> protocol connection with the current selected transport\n  <code>\"Polling\"</code> or <code>\"WebSocket\"</code>.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING",
                    "description": "The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTP</code> protocol connection with <code>\"Polling\"</code> after\n  many attempts of <code>\"WebSocket\"</code> has failed.\n  This occurs only for socket connection that is originally using\n  <code>\"WebSocket\"</code> transports.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING_SSL",
                    "description": "The current socket connection reattempt\n  is using the next selected socket connection port for\n  <code>HTTPS</code> protocol connection with <code>\"Polling\"</code> after\n  many attempts of <code>\"WebSocket\"</code> has failed.\n  This occurs only for socket connection that is originally using\n  <code>\"WebSocket\"</code> transports.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "component": "Socket",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 123,
            "description": "The flag that indicates if the current socket connection with\n  platform signaling is opened.",
            "itemtype": "attribute",
            "name": "_channelOpen",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Socket",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 136,
            "description": "Stores the platform signaling endpoint URI to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 147,
            "description": "Stores the current platform signaling protocol to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServerProtocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 158,
            "description": "Stores the current platform signaling port to open socket connection with.",
            "itemtype": "attribute",
            "name": "_signalingServerPort",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 169,
            "description": "Stores the [socket.io-client <code>io</code> object](http://socket.io/docs/client-api/) that\n  handles the middleware socket connection with platform signaling.",
            "itemtype": "attribute",
            "name": "_socket",
            "type": "Object",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 182,
            "description": "Stores the timeout (in ms) set to await in seconds for response from platform signaling\n  before throwing a connection timeout exception when Skylink is attemtping\n  to establish a connection with platform signaling.\nIf the value is <code>0</code>, it will use the default timeout from\n  socket.io-client that is in <code>20000</code>.",
            "itemtype": "attribute",
            "name": "_socketTimeout",
            "type": "Number",
            "default": "0",
            "required": 1,
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 199,
            "description": "The flag that indicates if the current socket connection for\n  transports types with <code>\"Polling\"</code> uses\n  [XDomainRequest](https://msdn.microsoft.com/en-us/library/cc288060(v=vs.85).aspx)\n  instead of [XMLHttpRequest](http://www.w3schools.com/Xml/dom_httprequest.asp)\n  due to the IE 8 / 9 <code>XMLHttpRequest</code> not supporting CORS access.",
            "itemtype": "attribute",
            "name": "_socketUseXDR",
            "type": "Boolean",
            "default": "false",
            "required": 1,
            "component": "Socket",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 216,
            "description": "Sends socket message over the platform signaling socket connection.",
            "itemtype": "method",
            "name": "_sendChannelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The socket message object.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Required. Protocol type of the socket message object.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 316,
            "description": "Starts a socket.io connection with the platform signaling.",
            "itemtype": "method",
            "name": "_createSocket",
            "params": [
                {
                    "name": "type",
                    "description": "The transport type of socket.io connection to use.\n<ul>\n<li><code>\"WebSocket\"</code>: Uses the WebSocket connection.<br>\n  <code>options.transports = [\"websocket\"]</code></li>\n<li><code>\"Polling\"</code>: Uses the Polling connection.<br>\n  <code>options.transports = [\"xhr-polling\", \"jsonp-polling\", \"polling\"]</code></li>\n</ul>",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 480,
            "description": "Connects to the socket connection endpoint URI to platform signaling that is constructed with\n {{#crossLink \"Skylink/_signalingServerProtocol:attribute\"}}_signalingServerProtocol{{/crossLink}},\n {{#crossLink \"Skylink/_signalingServer:attribute\"}}_signalingServer{{/crossLink}} and\n {{#crossLink \"Skylink/_signalingServerPort:attribute\"}}_signalingServerPort{{/crossLink}}.\n <small>Example format: <code>protocol//serverUrl:port</code></small>.<br>\nOnce URI is formed, it will start a new socket.io connection with\n {{#crossLink \"Skylink/_createSocket:method\"}}_createSocket(){{/crossLink}}.",
            "itemtype": "method",
            "name": "_openChannel",
            "trigger": "channelMessage, channelOpen, channelError, channelClose",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 527,
            "description": "Disconnects the current socket connection with the platform signaling.",
            "itemtype": "method",
            "name": "_closeChannel",
            "access": "private",
            "tagname": "",
            "component": "Socket",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1,
            "description": "The current version of SM (Signaling Message) Protocol\n  that the SDK is using.",
            "itemtype": "attribute",
            "name": "SM_PROTOCOL_VERSION",
            "type": "String",
            "required": 1,
            "component": "Socket",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 13,
            "description": "The list of Protocol types that is used for messaging using\n  the platform signaling socket connection.",
            "itemtype": "attribute",
            "name": "_SIG_MESSAGE_TYPE",
            "type": "JSON",
            "params": [
                {
                    "name": "JOIN_ROOM",
                    "description": "Protocol sent from Skylink to platform signaling to let\n   self join the room. Join room Step 1.",
                    "type": "String"
                },
                {
                    "name": "IN_ROOM",
                    "description": "Protocol received from platform signaling to inform\n   Skylink that self has joined the room. Join room Step 2 (Completed).",
                    "type": "String"
                },
                {
                    "name": "ENTER",
                    "description": "Protocol Skylink sends to all PeerConnection peers\n   in the room to start handshake connection. Handshake connection Step 1.",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "Protocol received to PeerConnection peer as a response\n   to self <code>ENTER</code> message. This is sent as a response to\n   PeerConnection peer <code>ENTER</code> message. Handshake connection Step 2.",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "Protocol sent to PeerConnection peer as a response\n   to the <code>WELCOME</code> message received after generating the offer session description with\n   <code>RTCPeerConnection.createOffer()</code>. This is received as a response from\n   PeerConnection peer after sending <code>WELCOME</code> message and requires\n   setting into the PeerConnection connection before sending the\n   <code>ANSWER</code> response. Handshake connection Step 3.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "Protocol received from PeerConnection peer as a response\n   to self <code>OFFER</code> message offer session description and requires setting\n   into the PeerConnection connection. This is sent to PeerConnection peer as a response\n   to the <code>OFFER</code> message received after setting the received <code>OFFER</code>\n   message and generating the answer session description with <code>RTCPeerConnection.createAnswer()</code>.\n   Handshake connection Step 4 (Completed).",
                    "type": "String"
                },
                {
                    "name": "CANDIDATE",
                    "description": "Protocol received from PeerConnection peer when connection\n   ICE candidate has been generated and requires self to add to the PeerConnection connection.",
                    "type": "String"
                },
                {
                    "name": "BYE",
                    "description": "Protocol received from platform signaling when a PeerConnection peer has left\n   the room.",
                    "type": "String"
                },
                {
                    "name": "REDIRECT",
                    "description": "Protocol received from platform signaling when self is kicked out from\n   the currently joined room.",
                    "type": "String"
                },
                {
                    "name": "UPDATE_USER",
                    "description": "Protocol received when a PeerConnection peer information has been\n   updated. The message object should contain the updated peer information.\n   This is broadcasted by self when self peer information is updated.",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCK",
                    "description": "Protocol received when the current joined room lock status have\n   been updated. The message object should contain the updated room lock status.\n   This is broadcasted by self when self updates the room lock status.",
                    "type": "String"
                },
                {
                    "name": "MUTE_VIDEO",
                    "description": "Protocol received when a PeerConnection Stream video media streaming\n   muted status have been updated. The message object should contain the updated Stream video media\n   streaming muted status. This is broadcasted by self when self Stream video media streaming\n   muted status have been updated.",
                    "type": "String"
                },
                {
                    "name": "MUTE_AUDIO",
                    "description": "Protocol received when a PeerConnection connection Stream audio media streaming\n   muted status have been updated. The message object should contain the updated Stream audio media\n   streaming muted status. This is broadcasted by self when self Stream audio media streaming\n   muted status have been updated.",
                    "type": "String"
                },
                {
                    "name": "PUBLIC_MESSAGE",
                    "description": "Protocol received when a PeerConnection peer broadcasts a message\n   object to all PeerConnection peers via the platform signaling socket connection.\n   This is broadcasted by self when self sends the message object.",
                    "type": "String"
                },
                {
                    "name": "PRIVATE_MESSAGE",
                    "description": "Protocol received when a PeerConnection peer sends a message\n   object targeted to several PeerConnection peers via the platform signaling socket connection.\n   This is sent by self when self sends the message object.",
                    "type": "String"
                },
                {
                    "name": "RESTART",
                    "description": "Protocol received when a PeerConnection connection requires a reconnection.\n   At this point, the PeerConnection connection have to recreate the <code>RTCPeerConnection</code>\n   object again. This is sent by self when self initiates the reconnection.",
                    "type": "String"
                },
                {
                    "name": "STREAM",
                    "description": "Protocol received when a PeerConnection connection Stream status have\n   changed.",
                    "type": "String"
                },
                {
                    "name": "GET_PEERS",
                    "description": "Protocol for privileged self to get the list of PeerConnection peers\n   under the same parent Application Key.",
                    "type": "String"
                },
                {
                    "name": "PEER_LIST",
                    "description": "Protocol to retrieve a list of peers under the same parent.",
                    "type": "String"
                },
                {
                    "name": "INTRODUCE",
                    "description": "Protocol sent to the platform signaling to\n   introduce PeerConnection peers to each other.",
                    "type": "String"
                },
                {
                    "name": "INTRODUCE_ERROR",
                    "description": "Protocol received when PeerConnection peers introduction failed.",
                    "type": "String"
                },
                {
                    "name": "APPROACH",
                    "description": "Protocol to indicate that a PeerConnection peer has been introduced.\n   At this point, self would send an <code>ENTER</code> to introduced PeerConnection peer\n   to start the handshake connection.",
                    "type": "String"
                },
                {
                    "name": "GROUP",
                    "description": "Protocol received that bundles messages together when socket messages are\n   sent less than 1 second interval apart from the previous sent socket message. This would\n   prevent receiving <code>REDIRECT</code> from the platform signaling.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 114,
            "description": "The flag that indicates if MCU is enabled.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "development": "true",
            "access": "private",
            "tagname": "",
            "component": "MCU",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 126,
            "description": "Stores the list of types of socket messages that requires to be queued or bundled\n   before sending to the server to prevent platform signaling from dropping of socket messages.",
            "itemtype": "attribute",
            "name": "_groupMessageList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Message",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 146,
            "description": "The flag that indicates if MCU is in the room and is enabled.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "development": "true",
            "default": "false",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 160,
            "description": "The flag that indicates that the current self connection\n  should only receive streaming Stream objects from other PeerConnection connection\n  and not send streaming Stream objects to other PeerConnection connection.",
            "itemtype": "attribute",
            "name": "_receiveOnly",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Message",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 176,
            "description": "Parses any <code>GROUP</code> type of message received and split them up to\n  send them to {{#crossLink \"Skylink/_processSingleMessage:method\"}}_processSingleMessage(){{/crossLink}}\n  to handle the individual message object received.\nIf the message is not <code>GROUP</code> type of message received, it will send\n  it directly to {{#crossLink \"Skylink/_processSingleMessage:method\"}}_processSingleMessage(){{/crossLink}}",
            "itemtype": "method",
            "name": "_processSigMessage",
            "params": [
                {
                    "name": "messageString",
                    "description": "The message object in JSON string.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 201,
            "description": "Routes the data received to the relevant Protocol handler based on the socket message received.",
            "itemtype": "method",
            "name": "_processingSingleMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received.",
                    "type": "JSON"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 289,
            "description": "Handles the PEER_LIST message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_peerListEventHandler",
            "params": [
                {
                    "name": "message.type",
                    "description": "Protocol step: <code>\"peerList\"</code>.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"peerList\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "result",
                            "description": "The received resulting object\n  <small>E.g. <code>{room1: [peer1, peer2], room2: ...}</code></small>.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 309,
            "description": "Handles the INTRODUCE_ERROR message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_introduceErrorEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"introduceError\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "reason",
                            "description": "The error message.",
                            "type": "Object"
                        },
                        {
                            "name": "sendingPeerId",
                            "description": "Id of the peer initiating the handshake",
                            "type": "Object"
                        },
                        {
                            "name": "receivingPeerId",
                            "description": "Id of the peer receiving the handshake",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 329,
            "description": "Handles the APPROACH message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_approachEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"introduceError\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The peer to initiate the handshake to",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 360,
            "description": "Handles the REDIRECT message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_redirectHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>REDIRECT</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "info",
                            "description": "The message received from the platform signaling when\n  the system action and reason is given.",
                            "type": "String"
                        },
                        {
                            "name": "action",
                            "description": "The system action that is received from the platform signaling.\n  [Rel: Skylink.SYSTEM_ACTION]",
                            "type": "String"
                        },
                        {
                            "name": "reason",
                            "description": "The reason received from the platform signaling behind the\n  system action given. [Rel: Skylink.SYSTEM_ACTION_REASON]",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"redirect\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "systemAction",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 396,
            "description": "Handles the UPDATE_USER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_updateUserEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>UPDATE_USER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "userData",
                            "description": "The updated PeerConnection peer information\n   custom user data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"updateUserEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 424,
            "description": "Handles the ROOM_LOCK Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_roomLockEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ROOM_LOCK</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "lock",
                            "description": "The flag that indicates if the currently joined room is locked.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"roomLockEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "roomLock",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 446,
            "description": "Handles the MUTE_AUDIO Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_muteAudioEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>MUTE_AUDIO</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted.",
                            "type": "Boolean"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"muteAudioEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 474,
            "description": "Handles the MUTE_VIDEO Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_muteVideoEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>MUTE_VIDEO</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag that\n  indicates if the remote Stream object video streaming is muted.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"muteVideoEvent\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerUpdated",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 502,
            "description": "Handles the STREAM Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_streamEventHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>STREAM</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "status",
                            "description": "The PeerConnection connection remote Stream streaming current status.\n<ul>\n<li><code>ended</code>: The PeerConnection connection remote Stream streaming has ended</li>\n</ul>",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "sessionType",
                            "description": "The PeerConnection connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"stream\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "streamEnded",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 550,
            "description": "Handles the BYE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_byeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>BYE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"bye\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerLeft",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 576,
            "description": "Handles the PRIVATE_MESSAGE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_privateMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>PRIVATE_MESSAGE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The Message object.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"private\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 606,
            "description": "Handles the PUBLIC_MESSAGE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_publicMessageHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>PUBLIC_MESSAGE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "cid",
                            "description": "The Skylink server connection key for the selected room.",
                            "type": "String"
                        },
                        {
                            "name": "muted",
                            "description": "The flag to indicate if the User's audio\n   stream is muted or not.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"public\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "incomingMessage",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 636,
            "description": "Handles the IN_ROOM Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_inRoomHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>IN_ROOM</code> payload.",
                    "type": "JSON",
                    "props": []
                },
                {
                    "name": "message",
                    "description": "Expected IN_ROOM data object format.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "The self session socket connection ID. This\n  is used by the signalling socket connection as ID to target\n  self and the peers PeerConnection ID.",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "The Peer connection iceServers configuration.",
                            "type": "JSON"
                        },
                        {
                            "name": "",
                            "description": "Protocol step: <code>\"inRoom\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 682,
            "description": "Handles the ENTER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_enterHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ENTER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the PeerConnection\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo",
                            "description": "The peer information associated\n  with the Peer Connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "userData",
                                    "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                                    "type": "String|JSON"
                                },
                                {
                                    "name": "settings",
                                    "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in the PeerConnection connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent.name",
                            "description": "The PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The PeerConnection platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "sessionType",
                            "description": "The PeerConnection connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"enter\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 821,
            "description": "Handles the RESTART Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_restartHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>RESTART</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the PeerConnection\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "The flag that indicates\n   if PeerConnections should enable trickling of ICE to connect the ICE connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "The flag that indicates if\n  PeerConnection connection should have any DataChannel connections.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo",
                            "description": "The peer information associated\n  with the Peer Connection.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "userData",
                                    "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                                    "type": "String|JSON"
                                },
                                {
                                    "name": "settings",
                                    "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "settings.audio",
                                    "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.audio.stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in the PeerConnection connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video",
                                    "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                                    "type": "Boolean|JSON",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.video.resolution",
                                    "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.width",
                                    "description": "The PeerConnection\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.resolution.height",
                                    "description": "The PeerConnection\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.frameRate",
                                    "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "settings.video.screenshare",
                                    "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "settings.bandwidth",
                                    "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.audio",
                                    "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.video",
                                    "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "settings.bandwidth.data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "mediaStatus",
                                    "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "mediaStatus.audioMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                },
                                {
                                    "name": "mediaStatus.videoMuted",
                                    "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "true"
                                }
                            ]
                        },
                        {
                            "name": "agent.name",
                            "description": "The PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The PeerConnection platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "weight",
                            "description": "The generated handshake reconnection\n  weight for associated PeerConnection peer.",
                            "type": "Number"
                        },
                        {
                            "name": "lastRestart",
                            "description": "The datetime stamp generated using\n  [Date.now()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now)\n  (in ms) used to throttle the PeerConnection reconnection functionality\n  to prevent less PeerConnection reconnection handshaking errors.",
                            "type": "Number"
                        },
                        {
                            "name": "isConnectionRestart",
                            "description": "The flag that indicates whether the restarting action\n  is caused by ICE connection or handshake connection failure. Currently, this feature works the same as\n  <code>message.explict</code> parameter.",
                            "type": "Boolean"
                        },
                        {
                            "name": "explict",
                            "description": "The flag that indicates whether the restart functionality\n  is invoked by the application or by Skylink when the ICE connection fails to establish\n  a \"healthy\" connection state. Currently, this feature works the same as\n  <code>message.isConnectionRestart</code> parameter.",
                            "type": "Boolean"
                        },
                        {
                            "name": "sessionType",
                            "description": "The PeerConnection connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"restart\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerRestart",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 985,
            "description": "Handles the WELCOME Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_welcomeHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>WELCOME</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "receiveOnly",
                            "description": "The flag that indicates if the PeerConnection\n  connection would send Stream or not (receive only).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "The flag that indicates\n   if PeerConnections should enable trickling of ICE to connect the ICE connection.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "The flag that indicates if\n  PeerConnection connection should have any DataChannel connections.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in <a href=\"#method_setUserData\">setUserData()</a>.",
                            "type": "String|JSON"
                        },
                        {
                            "name": "userInfo.settings",
                            "description": "The PeerConnection Stream\n  streaming settings information. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from this associated PeerConnection.",
                            "type": "JSON"
                        },
                        {
                            "name": "userInfo.settings.audio",
                            "description": "The\n  PeerConnection Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of the PeerConnection.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.audio.stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in the PeerConnection connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video",
                            "description": "The PeerConnection\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.video.resolution",
                            "description": "The PeerConnection\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.resolution.width",
                            "description": "The PeerConnection\n  Stream streaming video resolution width.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.resolution.height",
                            "description": "The PeerConnection\n  Stream streaming video resolution height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.frameRate",
                            "description": "The PeerConnection\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.video.screenshare",
                            "description": "The flag\n  that indicates if the PeerConnection connection Stream object sent\n  is a screensharing stream or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "userInfo.settings.bandwidth",
                            "description": "The PeerConnection\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.audio",
                            "description": "The configured\n  audio stream channel for the remote Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.video",
                            "description": "The configured\n  video stream channel for the remote Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.settings.bandwidth.data",
                            "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "userInfo.mediaStatus",
                            "description": "The PeerConnection Stream mute\n  settings for both audio and video streamings.",
                            "type": "JSON"
                        },
                        {
                            "name": "userInfo.mediaStatus.audioMuted",
                            "description": "The flag that\n  indicates if the remote Stream object audio streaming is muted. If\n  there is no audio streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "userInfo.mediaStatus.videoMuted",
                            "description": "The flag that\n  indicates if the remote Stream object video streaming is muted. If\n  there is no video streaming enabled for the PeerConnection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "agent.name",
                            "description": "The PeerConnection platform browser or agent name.",
                            "type": "String"
                        },
                        {
                            "name": "version",
                            "description": "The PeerConnection platform browser or agent version.",
                            "type": "Number"
                        },
                        {
                            "name": "os",
                            "description": "The PeerConnection platform name.",
                            "type": "Number"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"enter\"</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "weight",
                            "description": "The generated handshake connection\n  weight for associated PeerConnection peer.",
                            "type": "Number"
                        },
                        {
                            "name": "sessionType",
                            "description": "The PeerConnection connection remote Stream streaming\n  session type. If value is <code>\"stream\"</code>, the Stream streaming session\n  is normal user media streaming, else if it is <code>\"screensharing\"</code>, the\n  Stream streaming session is screensharing session.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"welcome\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress, peerJoined",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1149,
            "description": "Handles the OFFER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_offerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>OFFER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The generated offer session description.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"offer\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1200,
            "description": "Handles the CANDIDATE Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_candidateHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>CANDIDATE</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "The ICE candidate identifier of the \"media stream identification\"\n   for the m-line this candidate is associated with if present.\n   The value is retrieved from <code>RTCIceCandidate.sdpMid</code>.",
                            "type": "String"
                        },
                        {
                            "name": "label",
                            "description": "The ICE candidate index (starting at zero) of the m-line\n   in the SDP this candidate is associated with.\n   The value is retrieved from <code>RTCIceCandidate.sdpMLineIndex</code>.",
                            "type": "String"
                        },
                        {
                            "name": "candidate",
                            "description": "The ICE candidate candidate-attribute.\n   The value is retrieved from <code>RTCIceCandidate.candidate</code>.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step: <code>\"candidate\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1280,
            "description": "Handles the ANSWER Protocol message event received from the platform signaling.",
            "itemtype": "method",
            "name": "_answerHandler",
            "params": [
                {
                    "name": "message",
                    "description": "The message object received from platform signaling.\n   This should contain the <code>ANSWER</code> payload.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "rid",
                            "description": "The room ID for identification to the platform signaling connection.",
                            "type": "String"
                        },
                        {
                            "name": "sdp",
                            "description": "The generated answer session description.",
                            "type": "String"
                        },
                        {
                            "name": "mid",
                            "description": "The PeerConnection ID associated with this message.",
                            "type": "String"
                        },
                        {
                            "name": "target",
                            "description": "The targeted PeerConnection ID to receive the message object.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "Protocol step <code>\"answer\"</code>.",
                            "type": "String"
                        }
                    ]
                }
            ],
            "trigger": "handshakeProgress",
            "access": "private",
            "tagname": "",
            "component": "Message",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1344,
            "description": "Send a message object or string using the platform signaling socket connection\n  to the list of targeted PeerConnections.\nTo send message objects with DataChannel connections, see\n  {{#crossLink \"Skylink/sendP2PMessage:method\"}}sendP2PMessage(){{/crossLink}}.",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message object.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The array of targeted PeerConnections to\n  transfer the message object to. Alternatively, you may provide this parameter\n  as a string to a specific targeted PeerConnection to transfer the message object.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Send to all peers\n  SkylinkDemo.sendMessage(\"Hi there!\"\");\n\n  // Example 2: Send to a targeted peer\n  SkylinkDemo.sendMessage(\"Hi there peer!\", targetPeerId);"
            ],
            "trigger": "incomingMessage",
            "component": "Message",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1,
            "description": "The list of PeerConnection connection streaming video codecs available.\nThe video codec will only be use if the browser supports the selected codec,\n  or it will usually default to the browser default codec <code>VP8</code>.",
            "itemtype": "attribute",
            "name": "VIDEO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "The default option to let Skylink use any video codec selected by\n  the browser generated session description.",
                    "type": "String"
                },
                {
                    "name": "VP8",
                    "description": "The option to let Skylink use the [VP8](https://en.wikipedia.org/wiki/VP8) codec.\n   This is the common and mandantory video codec used by most browsers.",
                    "type": "String"
                },
                {
                    "name": "H264",
                    "description": "The option to let Skylink use the [H264](https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC)\n   codec. This only works if the browser supports the H264 video codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 24,
            "description": "The list of PeerConnection connection streaming audio codecs available.\nThe audio codec will only be use if the browser supports the selected codec,\n  or it will usually default to the browser default codec <code>OPUS</code>.",
            "itemtype": "attribute",
            "name": "AUDIO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "The default option to let Skylink use any audio codec selected by\n  the browser generated session description.",
                    "type": "String"
                },
                {
                    "name": "OPUS",
                    "description": "The option to let Skylink use the [OPUS](https://en.wikipedia.org/wiki/Opus_(audio_format))\n  codec. This is the common and mandantory audio codec used.",
                    "type": "String"
                },
                {
                    "name": "ISAC",
                    "description": "The option to let Skylink use the [iSAC](https://en.wikipedia.org/wiki/Internet_Speech_Audio_Codec).\n  This only works if the browser supports the iSAC video codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 47,
            "description": "Stores the preferred PeerConnection connection streaming audio codec.",
            "itemtype": "attribute",
            "name": "_selectedAudioCodec",
            "type": "String",
            "default": "Skylink.AUDIO_CODEC.AUTO",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 59,
            "description": "Stores the preferred PeerConnection connection streaming video codec.",
            "itemtype": "attribute",
            "name": "_selectedVideoCodec",
            "type": "String",
            "default": "Skylink.VIDEO_CODEC.AUTO",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 72,
            "description": "The list of recommended Stream video resolutions to use for self\n  user media stream. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution.",
            "params": [
                {
                    "name": "QQVGA",
                    "description": "QQVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "160",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "120",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "4:3",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "HQVGA",
                    "description": "HQVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "240",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "160",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "3:2",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "QVGA",
                    "description": "QVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "320",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "240",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "4:3",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "WQVGA",
                    "description": "WQVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "384",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "240",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:10",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "HVGA",
                    "description": "HVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "480",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "320",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "3:2",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "VGA",
                    "description": "VGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "640",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "480",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "4:3",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "WVGA",
                    "description": "WVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "768",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "480",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:10",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "FWVGA",
                    "description": "FWVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "854",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "480",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "SVGA",
                    "description": "SVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "800",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "600",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "4:3",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "DVGA",
                    "description": "DVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "960",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "640",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "3:2",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "WSVGA",
                    "description": "WSVGA resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1024",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "576",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "HD",
                    "description": "HD resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1280",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "720",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "HDPLUS",
                    "description": "HDPLUS resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1600",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "900",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "FHD",
                    "description": "FHD resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "1920",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "1080",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "QHD",
                    "description": "QHD resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "2560",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "1440",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "WQXGAPLUS",
                    "description": "WQXGAPLUS resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "3200",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "1800",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "UHD",
                    "description": "UHD resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "3840",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "2160",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "UHDPLUS",
                    "description": "UHDPLUS resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "5120",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "2880",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "FUHD",
                    "description": "FUHD resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "7680",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "4320",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "QUHD",
                    "description": "resolution.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "width",
                            "description": "15360",
                            "type": "Number"
                        },
                        {
                            "name": "height",
                            "description": "8640",
                            "type": "Number"
                        },
                        {
                            "name": "aspectRatio",
                            "description": "16:9",
                            "type": "String"
                        }
                    ]
                }
            ],
            "itemtype": "attribute",
            "name": "VIDEO_RESOLUTION",
            "type": "JSON",
            "readonly": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 187,
            "description": "Stores the self user media MediaStream object.",
            "itemtype": "attribute",
            "name": "_mediaStream",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 198,
            "description": "Stores the self screensharing MediaStream.",
            "itemtype": "attribute",
            "name": "_mediaScreen",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 209,
            "description": "Stores the self screensharing audio MediaStream\n  for browsers that do not support bundling of\n  screensharing MediaStream with <code>audio: true</code>.\nThe current {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}}\n  clones this MediaStream object and <code>.addTrack()</code> with the\n  screensharing MediaStream object video MediaStreamTrack object.",
            "itemtype": "attribute",
            "name": "_mediaScreenClone",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 225,
            "description": "Stores the Skylink default streaming settings.",
            "itemtype": "attribute",
            "name": "_defaultStreamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  default streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  self connection Stream.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The default flag that indicates if\n  stereo should be enabled in self connection Stream\n   audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The default\n  streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of the PeerConnection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The default\n  streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The default\n  streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The default\n  streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The default\n  streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The default\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "String",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The default\n  audio stream channel for self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The default\n  video stream channel for self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "The default\n  datachannel channel for self DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 286,
            "description": "Stores self user media Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no\n  receiving remote Stream object from self connection.",
            "itemtype": "attribute",
            "name": "_streamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  self Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The self\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The self\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The self\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "screenshare",
                            "description": "The flag\n  that indicates if the self connection Stream object sent\n  is a screensharing stream or not. In this case, the\n  value is <code>false</code> for user media Stream object.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "String",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The configured\n  audio stream channel for self connection Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The configured\n  video stream channel for the self connection Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "The configured\n  datachannel channel for self DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 345,
            "description": "Stores self screensharing Stream streaming settings.",
            "itemtype": "attribute",
            "name": "_screenSharingStreamSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The\n  self Stream streaming audio settings. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "stereo",
                            "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The self\n  Stream streaming video settings.",
                    "type": "Boolean|JSON",
                    "props": [
                        {
                            "name": "screenshare",
                            "description": "The flag\n  that indicates if the self connection Stream object sent\n  is a screensharing stream or not. In this case, the\n  value is <code>true</code> for screensharing Stream object.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "bandwidth",
                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "String",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 378,
            "description": "The flag that indicates if self browser supports the screensharing feature.\nCurrently, Opera does not support screensharing and only premium\n  Temasys plugins support this screensharing feature.",
            "itemtype": "attribute",
            "name": "_screenSharingAvailable",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 392,
            "description": "Stores the\n  [getUserMedia MediaStreamConstraints](https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints)\n  parsed from {{#crossLink \"Skylink/_streamSettings:attribute\"}}_streamSettings{{/crossLink}}\n  for user media Stream object.",
            "itemtype": "attribute",
            "name": "_getUserMediaSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The flag that indicates if self user media\n  MediaStream would have audio streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The flag that indicates if self user media\n  MediaStream would have video streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "mandatory.maxHeight",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxWidth",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum width.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxFrameRate",
                            "description": "The self user media\n  MediaStream video streaming maxinmum framerate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 424,
            "description": "Stores the\n  [getUserMedia MediaStreamConstraints](https://w3c.github.io/mediacapture-main/getusermedia.html#idl-def-MediaStreamConstraints)\n  parsed from {{#crossLink \"Skylink/_streamSettings:attribute\"}}_streamSettings{{/crossLink}}\n  for screensharing stream object.",
            "itemtype": "attribute",
            "name": "_screenSharingGetUserMediaSettings",
            "type": "JSON",
            "params": [
                {
                    "name": "audio",
                    "description": "The flag that indicates if self user media\n  MediaStream would have audio streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "video",
                    "description": "The flag that indicates if self user media\n  MediaStream would have video streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "mandatory.maxHeight",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxWidth",
                            "description": "The self user media\n  MediaStream video streaming resolution maximum width.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mandatory.maxFrameRate",
                            "description": "The self user media\n  MediaStream video streaming maxinmum framerate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media MediaStream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 461,
            "description": "Stores self Stream mute settings for both audio and video streamings.",
            "itemtype": "attribute",
            "name": "_mediaStreamsStatus",
            "type": "JSON",
            "params": [
                {
                    "name": "audioMuted",
                    "description": "The flag that\n  indicates if self connection Stream object audio streaming is muted. If\n  there is no audio streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "videoMuted",
                    "description": "The flag that\n  indicates if self connection Stream object video streaming is muted. If\n  there is no video streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 480,
            "description": "The flag indicates that when Skylink tries to get both audio and video stream\n  but Skylink fails to retrieve the user media stream, it should fallback\n  to retrieve audio streaming for the user media stream only.",
            "itemtype": "attribute",
            "name": "_audioFallback",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "required": 1,
            "component": "Stream",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 495,
            "description": "Handles the event when access to self user media MediaStream is successful.",
            "itemtype": "method",
            "name": "_onUserMediaSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The self user MediaStream object.",
                    "type": "MediaStream"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "mediaAccessSuccess",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 580,
            "description": "Handles the event when access to self user media MediaStream has failed.",
            "itemtype": "method",
            "name": "_onUserMediaError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object thrown that caused the failure.",
                    "type": "Object"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if self\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "mediaAccessError",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 615,
            "description": "Handles the event when remote MediaStream is received from PeerConnection connection.",
            "itemtype": "method",
            "name": "_onRemoteStreamAdded",
            "params": [
                {
                    "name": "targetMid",
                    "description": "The PeerConnection ID associated with the remote Stream object received.",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "The event object received in the <code>RTCPeerConnection.\n  onaddstream</code>.",
                    "type": "Event"
                },
                {
                    "name": "isScreenSharing",
                    "description": "The flag that indicates if PeerConnection connection\n   Stream object is a screensharing stream or not.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "trigger": "incomingStream",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 662,
            "description": "Parses the audio stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseAudioStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The flag that indicates if self user media\n  MediaStream would have audio streaming.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "mute",
                            "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for audio streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>audio.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The parsed audio stream settings for self.\n  <ul>\n    <li><code>return.settings</code>: The output audio stream settings\n       information for self</li>\n    <li><code>return.userMedia</code>: The output audio\n       MediaStreamConstraints to be passed into getUserMedia()</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 721,
            "description": "Parses the video stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseVideoStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self\n  Stream streaming video settings. If <code>false</code>, it means that\n  video streaming is disabled in the remote Stream of self connection.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "resolution",
                            "description": "The self\n  Stream streaming video resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "frameRate",
                            "description": "The self\n  Stream streaming video maximum frameRate.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "mute",
                            "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "optional",
                            "description": "The optional constraints for video streaming\n  in self user media Stream object. Some of the values are\n  set by the <code>video.optional</code> setting in\n  {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}.",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "The parsed video stream settings for self.\n  <ul>\n    <li><code>return.settings</code>: The output video stream settings\n       information for self</li>\n    <li><code>return.userMedia</code>: The output video\n       MediaStreamConstraints to be passed into getUserMedia()</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 822,
            "description": "Parses the streaming bandwidth settings for self provided.",
            "itemtype": "method",
            "name": "_parseBandwidthSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                    "type": "String",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The configured\n  audio stream channel for self connection Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The configured\n  video stream channel for the self connection Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "The configured\n  datachannel channel for self DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 862,
            "description": "Parses the <code>mediaStatus</code> settings for self provided.",
            "itemtype": "method",
            "name": "_parseMutedSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The custom user data\n  information set by developer. This custom user data can also\n  be set in {{#crossLink \"Skylink/setUserData:method\"}}setUserData(){{/crossLink}}.",
                            "type": "String|JSON",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "audio.stereo",
                    "description": "The default flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The parsed <code>mediaStatus</code> settings for self.\n  <ul>\n    <li><code>return.audioMuted</code>:  The flag that\n      indicates if self connection Stream object audio streaming is muted. If\n      there is no audio streaming enabled for self connection, by default,\n      it is set to <code>true</code>.</li>\n    <li><code>return.videoMuted</code>: The flag that\n      indicates if self connection Stream object video streaming is muted. If\n      there is no video streaming enabled for self connection, by default,\n      it is set to <code>true</code>.</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 930,
            "description": "Parses the default stream settings received from\n  the platform signaling.",
            "itemtype": "method",
            "name": "_parseDefaultMediaStreamSettings",
            "params": [
                {
                    "name": "defaults",
                    "description": "The default user media settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "maxHeight",
                            "description": "The default user media\n  MediaStream video streaming resolution maximum height.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "maxWidth",
                            "description": "The default user media\n  MediaStream video streaming resolution maximum width.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 964,
            "description": "Parses the provided stream settings for self provided.",
            "itemtype": "method",
            "name": "_parseMediaStreamSettings",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The configured\n  audio stream channel for the self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The configured\n  video stream channel for the self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1047,
            "description": "Sends self selected Stream object to current PeerConnection connections.\nIf {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}}\n  is not empty, it will send the screensharing stream, else it will\n  send the {{#crossLink \"Skylink/_mediaStream:attribute\"}}_mediaStream{{/crossLink}}\n  if is not empty.\nIf self does not have any Stream object to send, it will a connection without\n  any remote Stream sent to the PeerConnection connection.",
            "itemtype": "method",
            "name": "_addLocalMediaStreams",
            "params": [
                {
                    "name": "peerId",
                    "description": "The PeerConnection ID of the connection to send\n  Stream object to.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1104,
            "description": "Stops self user media Stream object attached to Skylink.",
            "itemtype": "method",
            "name": "stopStream",
            "trigger": "mediaAccessStopped, streamEnded",
            "example": [
                "\n  SkylinkDemo.stopStream();"
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1126,
            "description": "Handles the muting of audio and video streams in\n  {{#crossLink \"Skylink/_mediaStream:attribute\"}}_mediaStream{{/crossLink}},\n  {{#crossLink \"Skylink/_mediaScreen:attribute\"}}_mediaScreen{{/crossLink}} and\n  {{#crossLink \"Skylink/_mediaScreenClone:attribute\"}}_mediaScreenClone{{/crossLink}},",
            "itemtype": "method",
            "name": "_muteLocalMediaStreams",
            "return": {
                "description": "The information of the self MediaStream object attached to\n  Skylink if they have the specified tracks for the stream settings.\n  <ul>\n    <li><code>return.hasAudioTracks</code>: The flag that indicates if\n       self MediaStream has audio tracks</li>\n    <li><code>return.hasVideoTracks</code>: The flag that indicates if\n       self MediaStream has video tracks</li>\n </ul>",
                "type": "JSON"
            },
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1238,
            "description": "Waits for self MediaStream object to be attached to Skylink based\n  on the options provided before firing the callback to indicate\n  that self Stream object is received.\nThis will stop any currently attached Stream object to Skylink.",
            "itemtype": "method",
            "name": "_waitForLocalMediaStream",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback fired after self MediaStream object\n  is attached to Skylink based on the options provided.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "The callback error that is defined\n  when there's an error.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after self MediaStream object\n  is attached to Skylink based on the options provided successfully or met with\n  an exception. The callback signature is <code>function (error)</code>.",
                    "type": "Function",
                    "props": [
                        {
                            "name": "",
                            "description": "The error object received in the callback.\n  If received as <code>undefined</code>, it means that there is no errors.",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "The self Stream streaming settings. If both audio and video\n  option is <code>false</code>, there should be no audio and video stream\n  sending from self connection.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        },
                        {
                            "name": "bandwidth",
                            "description": "The self\n  streaming bandwidth settings. Setting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate. Values are configured\n  in <var>kb/s</var>.",
                            "type": "String",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The configured\n  audio stream channel for the self Stream object bandwidth\n  that audio streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The configured\n  video stream channel for the self Stream object bandwidth\n  that video streaming should use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The configured\n  datachannel channel for the DataChannel connection bandwidth\n  that datachannel connection per packet should be able use in <var>kb/s</var>.",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError, mediaAccessRequired",
            "access": "private",
            "tagname": "",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1427,
            "description": "Gets self user media Stream object to attach to Skylink.\nDo not invoke this function when user has already joined a room as\n  this may affect any currently attached stream. You may use\n {{#crossLink \"Skylink/sendStream:method\"}}sendStream(){{/crossLink}}\n instead if self is already in the room, and allows application to\n attach application own MediaStream object to Skylink.",
            "itemtype": "method",
            "name": "getUserMedia",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings for the new Stream\n  object attached to Skylink. If this parameter is not provided, the\n  options value would be <code>{ audio: true, video: true }</code>.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for audio streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.\n  <i>This sets the <code>maxWidth</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.\n  <i>This sets the <code>maxHeight</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.\n  <i>This sets the <code>maxFramerate</code> of the <code>video</code>\n  constraints passed in <code>getUserMedia()</code></i>.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "optional",
                                    "description": "The optional constraints for audio streaming\n  in self user media Stream object. This follows the <code>optional</code>\n  setting in the <code>MediaStreamConstraints</code> when <code>getUserMedia()</code> is invoked.\n  Tampering this may cause errors in retrieval of self user media Stream object.\n  Refer to this [site for more reference](http://www.sitepoint.com/introduction-getusermedia-api/).",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has gained\n  access to self media stream and attached it successfully with the provided\n  media settings or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for getting self user media.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self user media [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Default is to get both audio and video\n  // Example 1: Get both audio and video by default.\n  SkylinkDemo.getUserMedia();\n\n  // Example 2: Get the audio stream only\n  SkylinkDemo.getUserMedia({\n    video: false,\n    audio: true\n  });\n\n  // Example 3: Set the stream settings for the audio and video\n  SkylinkDemo.getUserMedia({\n    video: {\n       resolution: SkylinkDemo.VIDEO_RESOLUTION.HD,\n       frameRate: 50\n     },\n    audio: {\n      stereo: true\n    }\n  });\n\n  // Example 4: Get user media with callback\n  SkylinkDemo.getUserMedia({\n    video: false,\n    audio: true\n  },function(error,success){\n     if (error){\n       console.log(error);\n     }\n     else{\n       console.log(success);\n    }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError, streamEnded",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1602,
            "description": "Replaces the currently attached Stream object in Skylink and refreshes all\n  connection with PeerConnection connections to send the updated Stream object.\nThe application may provide their own MediaStream object to send to\n  all PeerConnections connection.",
            "itemtype": "method",
            "name": "sendStream",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming settings for the new Stream\n  object to replace the current Stream object attached to Skylink.\n  If this parameter is provided as a MediaStream object, the\n  MediaStream object settings for <code>mediaStatus</code> would be\n  detected as unmuted by default.",
                    "type": "Object|JSON",
                    "props": [
                        {
                            "name": "audio",
                            "description": "The self Stream streaming audio settings.\n  If <code>false</code>, it means that audio streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream audio\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag that indicates if\n  stereo should be enabled in self connection Stream\n  audio streaming.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object audio streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The self Stream streaming video settings.\n  If <code>false</code>, it means that video streaming is disabled in\n  the self Stream. If this option is set to <code>true</code> or is defined with\n  settings, {{#crossLink \"Skylink/getUserMedia:method\"}}getUserMedia(){{/crossLink}}\n  will be invoked. Self will not connect to the room unless the Stream video\n  user media access is given.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag that\n  indicates if the self Stream object video streaming is muted.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "The self Stream streaming video\n  resolution settings. Setting the resolution may\n  not force set the resolution provided as it depends on the how the\n  browser handles the resolution. [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The self\n  Stream streaming video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The self\n  Stream streaming video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "The self\n  Stream streaming video maximum frameRate.",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has replaced\n  the current Stream object successfully with the provided\n  media settings / MediaStream object or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for replacing the current\n  Stream object. If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self user media [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Send a stream object instead\n  SkylinkDemo.on('mediaAccessSuccess', function (stream) {\n    SkylinkDemo.sendStream(stream);\n  });\n\n  // Example 2: Send stream with getUserMedia automatically called for you\n  SkylinkDemo.sendStream({\n    audio: true,\n    video: false\n  });\n\n  // Example 3: Send stream with getUserMedia automatically called for you\n  // and audio is muted\n  SkylinkDemo.sendStream({\n    audio: { mute: true },\n    video: false\n  });\n\n  // Example 4: Send stream with callback\n  SkylinkDemo.sendStream({\n   audio: true,\n   video: true\n  },function(error,success){\n   if (error){\n     console.log('Error occurred. Stream was not sent: '+error)\n   }\n   else{\n     console.log('Stream successfully sent: '+success);\n   }\n  });"
            ],
            "trigger": "peerRestart, incomingStream",
            "component": "Stream",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1803,
            "description": "Mutes the currently attached Stream object in Skylink.",
            "itemtype": "method",
            "name": "muteStream",
            "params": [
                {
                    "name": "options",
                    "description": "The self Stream streaming muted settings.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audioMuted",
                            "description": "The flag that\n  indicates if self connection Stream object audio streaming is muted. If\n  there is no audio streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "videoMuted",
                            "description": "The flag that\n  indicates if self connection Stream object video streaming is muted. If\n  there is no video streaming enabled for self connection, by default,\n  it is set to <code>true</code>.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "example": [
                "\n  SkylinkDemo.muteStream({\n    audioMuted: true,\n    videoMuted: false\n  });"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1905,
            "description": "Unmutes the currently attached Stream object audio stream.",
            "itemtype": "method",
            "name": "enableAudio",
            "trigger": "streamMuted, peerUpdated",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.enableAudio();"
            ],
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1923,
            "description": "Mutes the currently attached Stream object audio stream.",
            "itemtype": "method",
            "name": "disableAudio",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.disableAudio();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1941,
            "description": "Unmutes the currently attached Stream object video stream.",
            "itemtype": "method",
            "name": "enableVideo",
            "deprecated": true,
            "deprecationMessage": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.enableVideo();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1959,
            "description": "Mutes the currently attached Stream object video stream.",
            "itemtype": "method",
            "name": "disableVideo",
            "depcreated": "Use .muteStream()",
            "example": [
                "\n  SkylinkDemo.disableVideo();"
            ],
            "trigger": "streamMuted, peerUpdated",
            "component": "Stream",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1976,
            "description": "Shares the current screen with PeerConnection connections and will refresh all\n   PeerConnection connections to send the screensharing Stream object with\n   <code>HTTPS</code> protocol accessing application.\nThis will require our own Temasys Skylink extension to do screensharing.\nFor screensharing feature in IE / Safari with our Temasys Plugin, please\n  [contact us](https://www.temasys.com.sg/contact-us).\nCurrently, Opera does not support screensharing feature.\nThis does not replace the currently attached user media Stream object in Skylink.",
            "itemtype": "method",
            "name": "shareScreen",
            "params": [
                {
                    "name": "enableAudio",
                    "description": "The flag that indicates if self screensharing\n  Stream streaming should have audio. If\n  <code>false</code>, it means that audio streaming is disabled in\n  the remote Stream of self connection.",
                    "type": "JSON",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback fired after Skylink has shared\n  the screen successfully or have met with an exception.\n  The callback signature is <code>function (error, success)</code>.",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object received in the callback.\n  This is the exception thrown that caused the failure for sharing the screen.\n  If received as <code>null</code>, it means that there is no errors.",
                            "type": "Object"
                        },
                        {
                            "name": "success",
                            "description": "The success object received in the callback.\n  The self screensharing [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API)\n  object. To display the MediaStream object to a <code>video</code> or <code>audio</code>, simply invoke:<br>\n  <code>attachMediaStream(domElement, stream);</code>.\n  If received as <code>null</code>, it means that there are errors.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Share the screen\n  SkylinkDemo.shareScreen();\n\n  // Example 2: Share screen with callback when screen is ready and shared\n  SkylinkDemo.shareScreen(function(error,success){\n     if (error){\n       console.log(error);\n     }\n     else{\n       console.log(success);\n    }\n  });"
            ],
            "trigger": "mediaAccessSuccess, mediaAccessError, incomingStream",
            "component": "Stream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2112,
            "description": "Stops self screensharing Stream object attached to Skylink.\nIf user media Stream object is available, Skylink will refresh all\n   PeerConnection connections to send the user media Stream object.",
            "itemtype": "method",
            "name": "stopScreen",
            "example": [
                "\n  SkylinkDemo.stopScreen();"
            ],
            "trigger": "mediaAccessStopped, streamEnded, incomingStream",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 1,
            "description": "Modifies the array of session description received to enable\n  stereo in the audio streaming connection.",
            "itemtype": "method",
            "name": "_addSDPStereo",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the stereo feature.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 62,
            "description": "<b>BROKEN (not in use)</b>. Modifies the array of session description received to set\n  a custom video resolution in the video streaming connection.",
            "itemtype": "method",
            "name": "_setSDPVideoResolution",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the custom video resolution.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 151,
            "description": "Modifies the array of session description received to set\n  a custom bandwidth bitrate (in kbps) in the streaming connection.\nSetting the bandwidth flags may not\n  force set the bandwidth for each connection stream channels as it depends\n  on how the browser handles the bandwidth bitrate.",
            "itemtype": "method",
            "name": "_setSDPBitrate",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with custom bandwidth bitrate (in kbps) settings.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 218,
            "description": "Modifies the array of session description received to configure\n  the selected video codec to use in the video streaming connection.",
            "itemtype": "method",
            "name": "_setSDPVideoCodec",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the selected video codec.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 276,
            "description": "Modifies the array of session description received to configure\n  the selected audio codec to use in the audio streaming connection.",
            "itemtype": "method",
            "name": "_setSDPAudioCodec",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   with the selected audio codec.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 333,
            "description": "Modifies the array of session description received to remove the\n  Firefox 32 H262 preference to prevent breaking connection with nsupported browsers.",
            "itemtype": "method",
            "name": "_removeSDPFirefoxH264Pref",
            "params": [
                {
                    "name": "sdpLines",
                    "description": "The array of lines in the session description.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The updated array of lines in the session description\n   removed of the Firefox 32 H262 preference.",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "component": "SDP",
            "since": "0.5.2",
            "class": "Skylink"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:26"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:50"
        },
        {
            "message": "param name missing: {}",
            "line": " source/data-channel.js:64"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:64"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-channel.js:92"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:92"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-channel.js:269"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:269"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-channel.js:342"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-channel.js:342"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:16"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:32"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:51"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:77"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:103"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:127"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:166"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-process.js:207"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:13"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:29"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:63"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:79"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:98"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:136"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:153"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:180"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:197"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:225"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:240"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:293"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:316"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:551"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:623"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:623"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:694"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:694"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:856"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:856"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:886"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:937"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:937"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1026"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1026"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1259"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1259"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1502"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1830"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1830"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1847"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1847"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1935"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1935"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:1948"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:1948"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:2035"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:2035"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:2130"
        },
        {
            "message": "unknown tag: component",
            "line": " source/data-transfer.js:2130"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:21"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:41"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/ice-candidate.js:64"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:64"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:117"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:139"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:152"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-candidate.js:167"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:42"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:68"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:82"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:95"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:110"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:129"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:143"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:159"
        },
        {
            "message": "unknown tag: component",
            "line": " source/ice-connection.js:238"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:25"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:41"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:54"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:67"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:98"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:163"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:299"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:299"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:359"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:521"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:521"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:678"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-connection.js:678"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:73"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:93"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-data.js:107"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:107"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:153"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:184"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-data.js:200"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:40"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:61"
        },
        {
            "message": "param name/type/descript missing",
            "line": " source/peer-handshake.js:78"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:102"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:193"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:225"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:288"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-handshake.js:315"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-handshake.js:315"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:17"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:33"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:45"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:57"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:70"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:82"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:82"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:172"
        },
        {
            "message": "unknown tag: component",
            "line": " source/peer-privileged.js:172"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:24"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:67"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:83"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:94"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:94"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:515"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:515"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:620"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:620"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:721"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:721"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:744"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-connection.js:744"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:30"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:94"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:113"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:130"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:147"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:160"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:173"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:184"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:200"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:212"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:230"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:248"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:265"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:294"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:307"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:318"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:329"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:370"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:535"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:535"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:664"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:664"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:759"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:759"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:810"
        },
        {
            "message": "unknown tag: component",
            "line": " source/room-init.js:810"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:1"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:27"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:27"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:42"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:42"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:55"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:55"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:70"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:70"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:87"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:87"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:102"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:102"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:119"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:119"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:132"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:132"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:160"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:160"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:178"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:178"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:205"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:218"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:234"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:249"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:262"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:262"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:344"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:344"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:361"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:361"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:387"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:387"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:413"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:413"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:439"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:464"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:464"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:491"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-debug.js:518"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:20"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:29"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:39"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:53"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:65"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:77"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:91"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:117"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:132"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:144"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:157"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:169"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:181"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:196"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:210"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:221"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:298"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:377"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:454"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:531"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:613"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:704"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:732"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:756"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:834"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:852"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:890"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:906"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:919"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:932"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:946"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1025"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1105"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1120"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1140"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1161"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1176"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1235"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1262"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1311"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1358"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1409"
        },
        {
            "message": "unknown tag: component",
            "line": " source/skylink-events.js:1459"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:32"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:46"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:63"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:83"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:123"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:136"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:147"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:158"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:169"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:182"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:199"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:216"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:316"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-channel.js:480"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:480"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-channel.js:527"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:13"
        },
        {
            "message": "unknown tag: development",
            "line": " source/socket-message.js:114"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:114"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:126"
        },
        {
            "message": "unknown tag: development",
            "line": " source/socket-message.js:146"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:146"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:160"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:176"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:201"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:289"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:309"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:329"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:360"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:360"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:396"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:396"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:424"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:424"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:446"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:446"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:474"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:474"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:502"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:502"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:550"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:550"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:576"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:576"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:606"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:606"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:636"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:636"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:682"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:682"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:821"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:821"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:985"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:985"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1149"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1149"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1200"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1280"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1280"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:1344"
        },
        {
            "message": "unknown tag: component",
            "line": " source/socket-message.js:1344"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:24"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:47"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:59"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:72"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:187"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:198"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:209"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:225"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:286"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:345"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:378"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:392"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:424"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:461"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:480"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:495"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:495"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:580"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:580"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:615"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:615"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:662"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:721"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:822"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:862"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:930"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:964"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1047"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1104"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1238"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1238"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1427"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1427"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1602"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1602"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1803"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1803"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1905"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1905"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1905"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1923"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1923"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1923"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1941"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1941"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1941"
        },
        {
            "message": "unknown tag: depcreated",
            "line": " source/stream-media.js:1959"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1959"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1959"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1976"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-media.js:1976"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:2112"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:1"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:62"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:151"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:218"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:276"
        },
        {
            "message": "unknown tag: component",
            "line": " source/stream-sdp.js:333"
        },
        {
            "message": "Missing item type\n// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "line": " source/peer-connection.js:473"
        }
    ]
}